(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{245:function(t,e,a){t.exports=a.p+"assets/img/lpc.bfa9cf23.png"},246:function(t,e,a){t.exports=a.p+"assets/img/pci0.4477f361.png"},318:function(t,e,a){t.exports=a.p+"assets/img/ssdt-before.6ddf7dfa.png"},319:function(t,e,a){t.exports=a.p+"assets/img/ssdt-after.971e8c4d.png"},374:function(t,e,a){"use strict";a.r(e);var i=a(10),s=Object(i.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"fixing-nvram-manual"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fixing-nvram-manual"}},[t._v("#")]),t._v(" Fixing NVRAM: Manual")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#finding-the-acpi-path"}},[t._v("Finding the ACPI path")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#edits-to-the-sample-ssdt"}},[t._v("Edits to the sample SSDT")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#compiling-the-ssdt"}},[t._v("Compiling the SSDT")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#wrapping-up"}},[t._v("Wrapping up")])])]),t._v(" "),e("h2",{attrs:{id:"finding-the-acpi-path"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#finding-the-acpi-path"}},[t._v("#")]),t._v(" Finding the ACPI path")]),t._v(" "),e("p",[t._v("Finding the ACPI pathing is quite easy actually, first open your decompiled DSDT you got from "),e("RouterLink",{attrs:{to:"/Manual/dump.html"}},[t._v("Dumping the DSDT")]),t._v(" and "),e("RouterLink",{attrs:{to:"/Manual/compile.html"}},[t._v("Decompiling and Compiling")]),t._v(" with either MaciASL(if in macOS) or any other text editor if in Windows or Linux(VSCode has an "),e("a",{attrs:{href:"https://marketplace.visualstudio.com/items?itemName=Thog.vscode-asl",target:"_blank",rel:"noopener noreferrer"}},[t._v("ACPI extension"),e("OutboundLink")],1),t._v(" that can also help).")],1),t._v(" "),e("p",[t._v("Next, search for the following:")]),t._v(" "),e("ul",[e("li",[t._v("Finding the LowPinCount path:\n"),e("ul",[e("li",[t._v("Search "),e("code",[t._v("Name (_ADR, 0x001F0000)")])])])]),t._v(" "),e("li",[t._v("Finding the PCI path:\n"),e("ul",[e("li",[t._v("Search "),e("code",[t._v("PNP0A08")]),t._v(" (If multiple show up, use the first one)")])])])]),t._v(" "),e("p",[t._v("You should get something like the following show up:")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("LPC Pathing")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("PCI Pathing")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("img",{attrs:{src:a(245),alt:""}})]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("img",{attrs:{src:a(246),alt:""}})])])])]),t._v(" "),e("p",[t._v("Now with the pathing, you can head here: "),e("a",{attrs:{href:"#edits-to-the-sample-ssdt"}},[t._v("Edits to the sample SSDT")])]),t._v(" "),e("h2",{attrs:{id:"edits-to-the-sample-ssdt"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#edits-to-the-sample-ssdt"}},[t._v("#")]),t._v(" Edits to the sample SSDT")]),t._v(" "),e("p",[t._v("Now that we have our ACPI path, lets grab our SSDT and get to work:")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/acidanthera/OpenCorePkg/tree/master/Docs/AcpiSamples/Source/SSDT-PMC.dsl",target:"_blank",rel:"noopener noreferrer"}},[t._v("SSDT-PMC.dsl"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("By default, this uses "),e("code",[t._v("PCI0.LPCB")]),t._v(" for the pathing. you'll want to rename accordingly.")]),t._v(" "),e("p",[t._v("Following the example from above, we'll be renaming it to "),e("code",[t._v("PCI0.LPC")]),t._v(":")]),t._v(" "),e("p",[e("strong",[t._v("Before")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("External (_SB_.PCI0.LPCB, DeviceObj) <- Rename this\n\nScope (_SB.PCI0.LPCB) <- Rename this\n")])])]),e("p",[e("img",{attrs:{src:a(318),alt:""}})]),t._v(" "),e("p",[t._v("Following the example pathing we found, the SSDT should look something like this:")]),t._v(" "),e("p",[e("strong",[t._v("After")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("External (_SB_.PCI0.LPC, DeviceObj) <- Renamed\n\nScope (_SB.PCI0.LPC) <- Renamed\n")])])]),e("p",[e("img",{attrs:{src:a(319),alt:""}})]),t._v(" "),e("h2",{attrs:{id:"compiling-the-ssdt"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#compiling-the-ssdt"}},[t._v("#")]),t._v(" Compiling the SSDT")]),t._v(" "),e("p",[t._v("With the SSDT done, you're now "),e("RouterLink",{attrs:{to:"/Manual/compile.html"}},[t._v("ready to compile the SSDT!")])],1),t._v(" "),e("h2",{attrs:{id:"wrapping-up"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#wrapping-up"}},[t._v("#")]),t._v(" Wrapping up")]),t._v(" "),e("p",[t._v("Once you're done making your SSDT, either head to the next page to finish the rest of the SSDTs or head here if you're ready to wrap up:")]),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/cleanup.html"}},[e("strong",[t._v("Cleanup")])])],1)])])}),[],!1,null,null,null);e.default=s.exports}}]);