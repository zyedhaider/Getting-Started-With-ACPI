(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(e){function n(n){for(var o,r,s=n[0],l=n[1],d=n[2],h=0,u=[];h<s.length;h++)r=s[h],Object.prototype.hasOwnProperty.call(i,r)&&i[r]&&u.push(i[r][0]),i[r]=0;for(o in l)Object.prototype.hasOwnProperty.call(l,o)&&(e[o]=l[o]);for(c&&c(n);u.length;)u.shift()();return a.push.apply(a,d||[]),t()}function t(){for(var e,n=0;n<a.length;n++){for(var t=a[n],o=!0,s=1;s<t.length;s++){var l=t[s];0!==i[l]&&(o=!1)}o&&(a.splice(n--,1),e=r(r.s=t[0]))}return e}var o={},i={1:0},a=[];function r(n){if(o[n])return o[n].exports;var t=o[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,r),t.l=!0,t.exports}r.e=function(e){var n=[],t=i[e];if(0!==t)if(t)n.push(t[2]);else{var o=new Promise((function(n,o){t=i[e]=[n,o]}));n.push(t[2]=o);var a,s=document.createElement("script");s.charset="utf-8",s.timeout=120,r.nc&&s.setAttribute("nonce",r.nc),s.src=function(e){return r.p+"assets/js/"+({}[e]||e)+"."+{2:"9c05b73c",3:"d45c0567",4:"c8cb28e2",5:"b1201ebc",6:"71ac8d22",7:"eef556e9",8:"123474c0",9:"3b908806",10:"bba47a2c",11:"0f437a32",12:"af81703c",13:"73acb170",14:"25b5637c",15:"1be1f470",16:"4c5f6c7b",17:"3d643960",18:"23b77409",19:"bd8a7448",20:"1e25fe22",21:"3a0935ff",22:"ffab4e21",23:"f3b781e8",24:"b76ee90f",25:"63a35711",26:"7959dc52",27:"76ca6266",28:"3229c9b1",29:"d04e53d7",30:"778dc3f3",31:"a08fc70b",32:"787d8f13",33:"dbe970f9",34:"4a32c072",35:"ddf00b2d",36:"59f4a355",37:"8082a7e7",38:"1b4a1b0e",39:"bdd0e9dd",40:"960e06fd",41:"69b2db11",42:"f1b533b5",43:"02b0c324",44:"1ba04eb2",45:"ba2b2106",46:"57748a14",47:"162ce13f",48:"e843cf12",49:"6f39ba92",50:"6d947683",51:"c8c8372a",52:"2319aa86",53:"7f63cf7c",54:"342f8714",55:"513f5f0c",56:"dffe2e1d",57:"721726ae",58:"37509c4d",59:"6c26b002",60:"5c76d338",61:"8ca004d7"}[e]+".js"}(e);var l=new Error;a=function(n){s.onerror=s.onload=null,clearTimeout(d);var t=i[e];if(0!==t){if(t){var o=n&&("load"===n.type?"missing":n.type),a=n&&n.target&&n.target.src;l.message="Loading chunk "+e+" failed.\n("+o+": "+a+")",l.name="ChunkLoadError",l.type=o,l.request=a,t[1](l)}i[e]=void 0}};var d=setTimeout((function(){a({type:"timeout",target:s})}),12e4);s.onerror=s.onload=a,document.head.appendChild(s)}return Promise.all(n)},r.m=e,r.c=o,r.d=function(e,n,t){r.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,n){if(1&n&&(e=r(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(r.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)r.d(t,o,function(n){return e[n]}.bind(null,o));return t},r.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(n,"a",n),n},r.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},r.p="/Getting-Started-With-ACPI/",r.oe=function(e){throw console.error(e),e};var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=n,s=s.slice();for(var d=0;d<s.length;d++)n(s[d]);var c=l;a.push([100,0]),t()}([function(e,n,t){var o=t(53),i=o.all;e.exports=o.IS_HTMLDDA?function(e){return"function"==typeof e||e===i}:function(e){return"function"==typeof e}},function(e,n){var t=function(e){return e&&e.Math==Math&&e};e.exports=t("object"==typeof globalThis&&globalThis)||t("object"==typeof window&&window)||t("object"==typeof self&&self)||t("object"==typeof global&&global)||function(){return this}()||Function("return this")()},function(e,n){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,n,t){var o=t(27),i=Function.prototype,a=i.call,r=o&&i.bind.bind(a,a);e.exports=o?r:function(e){return function(){return a.apply(e,arguments)}}},function(e,n,t){var o=t(2);e.exports=!o((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(e,n){var t=Array.isArray;e.exports=t},function(e,n,t){var o=t(67),i="object"==typeof self&&self&&self.Object===Object&&self,a=o||i||Function("return this")();e.exports=a},function(e,n,t){var o=t(3),i=t(30),a=o({}.hasOwnProperty);e.exports=Object.hasOwn||function(e,n){return a(i(e),n)}},function(e,n,t){var o=t(0),i=t(53),a=i.all;e.exports=i.IS_HTMLDDA?function(e){return"object"==typeof e?null!==e:o(e)||e===a}:function(e){return"object"==typeof e?null!==e:o(e)}},function(e,n,t){var o=t(159),i=t(162);e.exports=function(e,n){var t=i(e,n);return o(t)?t:void 0}},function(e,n,t){"use strict";function o(e,n,t,o,i,a,r,s){var l,d="function"==typeof e?e.options:e;if(n&&(d.render=n,d.staticRenderFns=t,d._compiled=!0),o&&(d.functional=!0),a&&(d._scopeId="data-v-"+a),r?(l=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),i&&i.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(r)},d._ssrRegister=l):i&&(l=s?function(){i.call(this,(d.functional?this.parent:this).$root.$options.shadowRoot)}:i),l)if(d.functional){d._injectStyles=l;var c=d.render;d.render=function(e,n){return l.call(n),c(e,n)}}else{var h=d.beforeCreate;d.beforeCreate=h?[].concat(h,l):[l]}return{exports:e,options:d}}t.d(n,"a",(function(){return o}))},function(e,n){e.exports=function(e){return null!=e&&"object"==typeof e}},function(e,n,t){var o=t(13),i=t(144),a=t(145),r=o?o.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":r&&r in Object(e)?i(e):a(e)}},function(e,n,t){var o=t(6).Symbol;e.exports=o},function(e,n,t){var o=t(4),i=t(62),a=t(96),r=t(25),s=t(52),l=TypeError,d=Object.defineProperty,c=Object.getOwnPropertyDescriptor;n.f=o?a?function(e,n,t){if(r(e),n=s(n),r(t),"function"==typeof e&&"prototype"===n&&"value"in t&&"writable"in t&&!t.writable){var o=c(e,n);o&&o.writable&&(e[n]=t.value,t={configurable:"configurable"in t?t.configurable:o.configurable,enumerable:"enumerable"in t?t.enumerable:o.enumerable,writable:!1})}return d(e,n,t)}:d:function(e,n,t){if(r(e),n=s(n),r(t),i)try{return d(e,n,t)}catch(e){}if("get"in t||"set"in t)throw l("Accessors not supported");return"value"in t&&(e[n]=t.value),e}},function(e,n,t){var o=t(3),i=o({}.toString),a=o("".slice);e.exports=function(e){return a(i(e),8,-1)}},function(e,n,t){var o=t(1),i=t(0),a=function(e){return i(e)?e:void 0};e.exports=function(e,n){return arguments.length<2?a(o[e]):o[e]&&o[e][n]}},function(e,n,t){var o=t(4),i=t(14),a=t(33);e.exports=o?function(e,n,t){return i.f(e,n,a(1,t))}:function(e,n,t){return e[n]=t,e}},function(e,n,t){var o=t(149),i=t(150),a=t(151),r=t(152),s=t(153);function l(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var o=e[n];this.set(o[0],o[1])}}l.prototype.clear=o,l.prototype.delete=i,l.prototype.get=a,l.prototype.has=r,l.prototype.set=s,e.exports=l},function(e,n,t){var o=t(69);e.exports=function(e,n){for(var t=e.length;t--;)if(o(e[t][0],n))return t;return-1}},function(e,n,t){var o=t(9)(Object,"create");e.exports=o},function(e,n,t){var o=t(171);e.exports=function(e,n){var t=e.__data__;return o(n)?t["string"==typeof n?"string":"hash"]:t.map}},function(e,n,t){var o=t(43);e.exports=function(e){if("string"==typeof e||o(e))return e;var n=e+"";return"0"==n&&1/e==-1/0?"-0":n}},function(e,n){var t=/^\s+|\s+$/g,o=/^[-+]0x[0-9a-f]+$/i,i=/^0b[01]+$/i,a=/^0o[0-7]+$/i,r=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,l="object"==typeof self&&self&&self.Object===Object&&self,d=s||l||Function("return this")(),c=Object.prototype.toString,h=Math.max,u=Math.min,p=function(){return d.Date.now()};function f(e){var n=typeof e;return!!e&&("object"==n||"function"==n)}function m(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==c.call(e)}(e))return NaN;if(f(e)){var n="function"==typeof e.valueOf?e.valueOf():e;e=f(n)?n+"":n}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(t,"");var s=i.test(e);return s||a.test(e)?r(e.slice(2),s?2:8):o.test(e)?NaN:+e}e.exports=function(e,n,t){var o,i,a,r,s,l,d=0,c=!1,g=!1,y=!0;if("function"!=typeof e)throw new TypeError("Expected a function");function v(n){var t=o,a=i;return o=i=void 0,d=n,r=e.apply(a,t)}function b(e){return d=e,s=setTimeout(S,n),c?v(e):r}function w(e){var t=e-l;return void 0===l||t>=n||t<0||g&&e-d>=a}function S(){var e=p();if(w(e))return k(e);s=setTimeout(S,function(e){var t=n-(e-l);return g?u(t,a-(e-d)):t}(e))}function k(e){return s=void 0,y&&o?v(e):(o=i=void 0,r)}function T(){var e=p(),t=w(e);if(o=arguments,i=this,l=e,t){if(void 0===s)return b(l);if(g)return s=setTimeout(S,n),v(l)}return void 0===s&&(s=setTimeout(S,n)),r}return n=m(n)||0,f(t)&&(c=!!t.leading,a=(g="maxWait"in t)?h(m(t.maxWait)||0,n):a,y="trailing"in t?!!t.trailing:y),T.cancel=function(){void 0!==s&&clearTimeout(s),d=0,o=l=i=s=void 0},T.flush=function(){return void 0===s?r:k(p())},T}},function(e,n,t){var o,i;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(i="function"==typeof(o=function(){var e,n,t={version:"0.2.0"},o=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function i(e,n,t){return e<n?n:e>t?t:e}function a(e){return 100*(-1+e)}t.configure=function(e){var n,t;for(n in e)void 0!==(t=e[n])&&e.hasOwnProperty(n)&&(o[n]=t);return this},t.status=null,t.set=function(e){var n=t.isStarted();e=i(e,o.minimum,1),t.status=1===e?null:e;var l=t.render(!n),d=l.querySelector(o.barSelector),c=o.speed,h=o.easing;return l.offsetWidth,r((function(n){""===o.positionUsing&&(o.positionUsing=t.getPositioningCSS()),s(d,function(e,n,t){var i;return(i="translate3d"===o.positionUsing?{transform:"translate3d("+a(e)+"%,0,0)"}:"translate"===o.positionUsing?{transform:"translate("+a(e)+"%,0)"}:{"margin-left":a(e)+"%"}).transition="all "+n+"ms "+t,i}(e,c,h)),1===e?(s(l,{transition:"none",opacity:1}),l.offsetWidth,setTimeout((function(){s(l,{transition:"all "+c+"ms linear",opacity:0}),setTimeout((function(){t.remove(),n()}),c)}),c)):setTimeout(n,c)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var e=function(){setTimeout((function(){t.status&&(t.trickle(),e())}),o.trickleSpeed)};return o.trickle&&e(),this},t.done=function(e){return e||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(e){var n=t.status;return n?("number"!=typeof e&&(e=(1-n)*i(Math.random()*n,.1,.95)),n=i(n+e,0,.994),t.set(n)):t.start()},t.trickle=function(){return t.inc(Math.random()*o.trickleRate)},e=0,n=0,t.promise=function(o){return o&&"resolved"!==o.state()?(0===n&&t.start(),e++,n++,o.always((function(){0==--n?(e=0,t.done()):t.set((e-n)/e)})),this):this},t.render=function(e){if(t.isRendered())return document.getElementById("nprogress");d(document.documentElement,"nprogress-busy");var n=document.createElement("div");n.id="nprogress",n.innerHTML=o.template;var i,r=n.querySelector(o.barSelector),l=e?"-100":a(t.status||0),c=document.querySelector(o.parent);return s(r,{transition:"all 0 linear",transform:"translate3d("+l+"%,0,0)"}),o.showSpinner||(i=n.querySelector(o.spinnerSelector))&&u(i),c!=document.body&&d(c,"nprogress-custom-parent"),c.appendChild(n),n},t.remove=function(){c(document.documentElement,"nprogress-busy"),c(document.querySelector(o.parent),"nprogress-custom-parent");var e=document.getElementById("nprogress");e&&u(e)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var e=document.body.style,n="WebkitTransform"in e?"Webkit":"MozTransform"in e?"Moz":"msTransform"in e?"ms":"OTransform"in e?"O":"";return n+"Perspective"in e?"translate3d":n+"Transform"in e?"translate":"margin"};var r=function(){var e=[];function n(){var t=e.shift();t&&t(n)}return function(t){e.push(t),1==e.length&&n()}}(),s=function(){var e=["Webkit","O","Moz","ms"],n={};function t(t){return t=t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(e,n){return n.toUpperCase()})),n[t]||(n[t]=function(n){var t=document.body.style;if(n in t)return n;for(var o,i=e.length,a=n.charAt(0).toUpperCase()+n.slice(1);i--;)if((o=e[i]+a)in t)return o;return n}(t))}function o(e,n,o){n=t(n),e.style[n]=o}return function(e,n){var t,i,a=arguments;if(2==a.length)for(t in n)void 0!==(i=n[t])&&n.hasOwnProperty(t)&&o(e,t,i);else o(e,a[1],a[2])}}();function l(e,n){return("string"==typeof e?e:h(e)).indexOf(" "+n+" ")>=0}function d(e,n){var t=h(e),o=t+n;l(t,n)||(e.className=o.substring(1))}function c(e,n){var t,o=h(e);l(e,n)&&(t=o.replace(" "+n+" "," "),e.className=t.substring(1,t.length-1))}function h(e){return(" "+(e.className||"")+" ").replace(/\s+/gi," ")}function u(e){e&&e.parentNode&&e.parentNode.removeChild(e)}return t})?o.call(n,t,n,e):o)||(e.exports=i)},function(e,n,t){var o=t(8),i=String,a=TypeError;e.exports=function(e){if(o(e))return e;throw a(i(e)+" is not an object")}},function(e,n,t){var o=t(1),i=t(49).f,a=t(17),r=t(108),s=t(35),l=t(63),d=t(121);e.exports=function(e,n){var t,c,h,u,p,f=e.target,m=e.global,g=e.stat;if(t=m?o:g?o[f]||s(f,{}):(o[f]||{}).prototype)for(c in n){if(u=n[c],h=e.dontCallGetSet?(p=i(t,c))&&p.value:t[c],!d(m?c:f+(g?".":"#")+c,e.forced)&&void 0!==h){if(typeof u==typeof h)continue;l(u,h)}(e.sham||h&&h.sham)&&a(u,"sham",!0),r(t,c,u,e)}}},function(e,n,t){var o=t(2);e.exports=!o((function(){var e=function(){}.bind();return"function"!=typeof e||e.hasOwnProperty("prototype")}))},function(e,n,t){var o=t(45),i=t(50);e.exports=function(e){return o(i(e))}},function(e,n,t){var o=t(1),i=t(59),a=t(7),r=t(61),s=t(57),l=t(56),d=i("wks"),c=o.Symbol,h=c&&c.for,u=l?c:c&&c.withoutSetter||r;e.exports=function(e){if(!a(d,e)||!s&&"string"!=typeof d[e]){var n="Symbol."+e;s&&a(c,e)?d[e]=c[e]:d[e]=l&&h?h(n):u(n)}return d[e]}},function(e,n,t){var o=t(50),i=Object;e.exports=function(e){return i(o(e))}},function(e,n,t){var o=t(119);e.exports=function(e){return o(e.length)}},function(e,n,t){var o=t(27),i=Function.prototype.call;e.exports=o?i.bind(i):function(){return i.apply(i,arguments)}},function(e,n){e.exports=function(e,n){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:n}}},function(e,n,t){var o=t(1),i=t(35),a=o["__core-js_shared__"]||i("__core-js_shared__",{});e.exports=a},function(e,n,t){var o=t(1),i=Object.defineProperty;e.exports=function(e,n){try{i(o,e,{value:n,configurable:!0,writable:!0})}catch(t){o[e]=n}return n}},function(e,n,t){var o=t(143),i=t(11),a=Object.prototype,r=a.hasOwnProperty,s=a.propertyIsEnumerable,l=o(function(){return arguments}())?o:function(e){return i(e)&&r.call(e,"callee")&&!s.call(e,"callee")};e.exports=l},function(e,n,t){var o=t(9)(t(6),"Map");e.exports=o},function(e,n){e.exports=function(e){var n=typeof e;return null!=e&&("object"==n||"function"==n)}},function(e,n,t){var o=t(163),i=t(170),a=t(172),r=t(173),s=t(174);function l(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var o=e[n];this.set(o[0],o[1])}}l.prototype.clear=o,l.prototype.delete=i,l.prototype.get=a,l.prototype.has=r,l.prototype.set=s,e.exports=l},function(e,n){e.exports=function(e){var n=-1,t=Array(e.size);return e.forEach((function(e){t[++n]=e})),t}},function(e,n){e.exports=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}},function(e,n,t){var o=t(5),i=t(43),a=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,r=/^\w*$/;e.exports=function(e,n){if(o(e))return!1;var t=typeof e;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=e&&!i(e))||(r.test(e)||!a.test(e)||null!=n&&e in Object(n))}},function(e,n,t){var o=t(12),i=t(11);e.exports=function(e){return"symbol"==typeof e||i(e)&&"[object Symbol]"==o(e)}},function(e,n){e.exports=function(e){return e}},function(e,n,t){var o=t(3),i=t(2),a=t(15),r=Object,s=o("".split);e.exports=i((function(){return!r("z").propertyIsEnumerable(0)}))?function(e){return"String"==a(e)?s(e,""):r(e)}:r},function(e,n,t){var o=t(0),i=t(106),a=TypeError;e.exports=function(e){if(o(e))return e;throw a(i(e)+" is not a function")}},function(e,n){e.exports={}},function(e,n){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,n,t){var o=t(4),i=t(32),a=t(102),r=t(33),s=t(28),l=t(52),d=t(7),c=t(62),h=Object.getOwnPropertyDescriptor;n.f=o?h:function(e,n){if(e=s(e),n=l(n),c)try{return h(e,n)}catch(e){}if(d(e,n))return r(!i(a.f,e,n),e[n])}},function(e,n,t){var o=t(51),i=TypeError;e.exports=function(e){if(o(e))throw i("Can't call method on "+e);return e}},function(e,n){e.exports=function(e){return null==e}},function(e,n,t){var o=t(103),i=t(54);e.exports=function(e){var n=o(e,"string");return i(n)?n:n+""}},function(e,n){var t="object"==typeof document&&document.all,o=void 0===t&&void 0!==t;e.exports={all:t,IS_HTMLDDA:o}},function(e,n,t){var o=t(16),i=t(0),a=t(55),r=t(56),s=Object;e.exports=r?function(e){return"symbol"==typeof e}:function(e){var n=o("Symbol");return i(n)&&a(n.prototype,s(e))}},function(e,n,t){var o=t(3);e.exports=o({}.isPrototypeOf)},function(e,n,t){var o=t(57);e.exports=o&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(e,n,t){var o=t(58),i=t(2);e.exports=!!Object.getOwnPropertySymbols&&!i((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&o&&o<41}))},function(e,n,t){var o,i,a=t(1),r=t(104),s=a.process,l=a.Deno,d=s&&s.versions||l&&l.version,c=d&&d.v8;c&&(i=(o=c.split("."))[0]>0&&o[0]<4?1:+(o[0]+o[1])),!i&&r&&(!(o=r.match(/Edge\/(\d+)/))||o[1]>=74)&&(o=r.match(/Chrome\/(\d+)/))&&(i=+o[1]),e.exports=i},function(e,n,t){var o=t(60),i=t(34);(e.exports=function(e,n){return i[e]||(i[e]=void 0!==n?n:{})})("versions",[]).push({version:"3.27.1",mode:o?"pure":"global",copyright:"© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.27.1/LICENSE",source:"https://github.com/zloirock/core-js"})},function(e,n){e.exports=!1},function(e,n,t){var o=t(3),i=0,a=Math.random(),r=o(1..toString);e.exports=function(e){return"Symbol("+(void 0===e?"":e)+")_"+r(++i+a,36)}},function(e,n,t){var o=t(4),i=t(2),a=t(95);e.exports=!o&&!i((function(){return 7!=Object.defineProperty(a("div"),"a",{get:function(){return 7}}).a}))},function(e,n,t){var o=t(7),i=t(114),a=t(49),r=t(14);e.exports=function(e,n,t){for(var s=i(n),l=r.f,d=a.f,c=0;c<s.length;c++){var h=s[c];o(e,h)||t&&o(t,h)||l(e,h,d(n,h))}}},function(e,n,t){var o=t(118);e.exports=function(e){var n=+e;return n!=n||0===n?0:o(n)}},function(e,n,t){var o=t(3),i=t(25),a=t(131);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,n=!1,t={};try{(e=o(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(t,[]),n=t instanceof Array}catch(e){}return function(t,o){return i(t),a(o),n?e(t,o):t.__proto__=o,t}}():void 0)},function(e,n){e.exports=function(e,n){for(var t=-1,o=n.length,i=e.length;++t<o;)e[i+t]=n[t];return e}},function(e,n){var t="object"==typeof global&&global&&global.Object===Object&&global;e.exports=t},function(e,n,t){var o=t(18),i=t(154),a=t(155),r=t(156),s=t(157),l=t(158);function d(e){var n=this.__data__=new o(e);this.size=n.size}d.prototype.clear=i,d.prototype.delete=a,d.prototype.get=r,d.prototype.has=s,d.prototype.set=l,e.exports=d},function(e,n){e.exports=function(e,n){return e===n||e!=e&&n!=n}},function(e,n,t){var o=t(12),i=t(38);e.exports=function(e){if(!i(e))return!1;var n=o(e);return"[object Function]"==n||"[object GeneratorFunction]"==n||"[object AsyncFunction]"==n||"[object Proxy]"==n}},function(e,n){var t=Function.prototype.toString;e.exports=function(e){if(null!=e){try{return t.call(e)}catch(e){}try{return e+""}catch(e){}}return""}},function(e,n,t){var o=t(175),i=t(11);e.exports=function e(n,t,a,r,s){return n===t||(null==n||null==t||!i(n)&&!i(t)?n!=n&&t!=t:o(n,t,a,r,e,s))}},function(e,n,t){var o=t(74),i=t(178),a=t(75);e.exports=function(e,n,t,r,s,l){var d=1&t,c=e.length,h=n.length;if(c!=h&&!(d&&h>c))return!1;var u=l.get(e),p=l.get(n);if(u&&p)return u==n&&p==e;var f=-1,m=!0,g=2&t?new o:void 0;for(l.set(e,n),l.set(n,e);++f<c;){var y=e[f],v=n[f];if(r)var b=d?r(v,y,f,n,e,l):r(y,v,f,e,n,l);if(void 0!==b){if(b)continue;m=!1;break}if(g){if(!i(n,(function(e,n){if(!a(g,n)&&(y===e||s(y,e,t,r,l)))return g.push(n)}))){m=!1;break}}else if(y!==v&&!s(y,v,t,r,l)){m=!1;break}}return l.delete(e),l.delete(n),m}},function(e,n,t){var o=t(39),i=t(176),a=t(177);function r(e){var n=-1,t=null==e?0:e.length;for(this.__data__=new o;++n<t;)this.add(e[n])}r.prototype.add=r.prototype.push=i,r.prototype.has=a,e.exports=r},function(e,n){e.exports=function(e,n){return e.has(n)}},function(e,n,t){var o=t(188),i=t(194),a=t(80);e.exports=function(e){return a(e)?o(e):i(e)}},function(e,n,t){(function(e){var o=t(6),i=t(190),a=n&&!n.nodeType&&n,r=a&&"object"==typeof e&&e&&!e.nodeType&&e,s=r&&r.exports===a?o.Buffer:void 0,l=(s?s.isBuffer:void 0)||i;e.exports=l}).call(this,t(48)(e))},function(e,n){var t=/^(?:0|[1-9]\d*)$/;e.exports=function(e,n){var o=typeof e;return!!(n=null==n?9007199254740991:n)&&("number"==o||"symbol"!=o&&t.test(e))&&e>-1&&e%1==0&&e<n}},function(e,n,t){var o=t(191),i=t(192),a=t(193),r=a&&a.isTypedArray,s=r?i(r):o;e.exports=s},function(e,n,t){var o=t(70),i=t(41);e.exports=function(e){return null!=e&&i(e.length)&&!o(e)}},function(e,n,t){var o=t(9)(t(6),"Set");e.exports=o},function(e,n,t){var o=t(38);e.exports=function(e){return e==e&&!o(e)}},function(e,n){e.exports=function(e,n){return function(t){return null!=t&&(t[e]===n&&(void 0!==n||e in Object(t)))}}},function(e,n,t){var o=t(85),i=t(22);e.exports=function(e,n){for(var t=0,a=(n=o(n,e)).length;null!=e&&t<a;)e=e[i(n[t++])];return t&&t==a?e:void 0}},function(e,n,t){var o=t(5),i=t(42),a=t(205),r=t(208);e.exports=function(e,n){return o(e)?e:i(e,n)?[e]:a(r(e))}},function(e,n,t){},function(e,n,t){"use strict";n.a=["ThemeManager","BackToTop"]},function(e,n,t){},function(e,n,t){},function(e,n,t){var o=t(141),i=t(146),a=t(217),r=t(225),s=t(234),l=t(99),d=a((function(e){var n=l(e);return s(n)&&(n=void 0),r(o(e,1,s,!0),i(n,2))}));e.exports=d},function(e,n,t){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var o=/["'&<>]/;e.exports=function(e){var n,t=""+e,i=o.exec(t);if(!i)return t;var a="",r=0,s=0;for(r=i.index;r<t.length;r++){switch(t.charCodeAt(r)){case 34:n="&quot;";break;case 38:n="&amp;";break;case 39:n="&#39;";break;case 60:n="&lt;";break;case 62:n="&gt;";break;default:continue}s!==r&&(a+=t.substring(s,r)),s=r+1,a+=n}return s!==r?a+t.substring(s,r):a}},function(e,n,t){!function(){"use strict";e.exports={polyfill:function(){var e=window,n=document;if(!("scrollBehavior"in n.documentElement.style)||!0===e.__forceSmoothScrollPolyfill__){var t,o=e.HTMLElement||e.Element,i={scroll:e.scroll||e.scrollTo,scrollBy:e.scrollBy,elementScroll:o.prototype.scroll||s,scrollIntoView:o.prototype.scrollIntoView},a=e.performance&&e.performance.now?e.performance.now.bind(e.performance):Date.now,r=(t=e.navigator.userAgent,new RegExp(["MSIE ","Trident/","Edge/"].join("|")).test(t)?1:0);e.scroll=e.scrollTo=function(){void 0!==arguments[0]&&(!0!==l(arguments[0])?f.call(e,n.body,void 0!==arguments[0].left?~~arguments[0].left:e.scrollX||e.pageXOffset,void 0!==arguments[0].top?~~arguments[0].top:e.scrollY||e.pageYOffset):i.scroll.call(e,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:e.scrollX||e.pageXOffset,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:e.scrollY||e.pageYOffset))},e.scrollBy=function(){void 0!==arguments[0]&&(l(arguments[0])?i.scrollBy.call(e,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:0,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:0):f.call(e,n.body,~~arguments[0].left+(e.scrollX||e.pageXOffset),~~arguments[0].top+(e.scrollY||e.pageYOffset)))},o.prototype.scroll=o.prototype.scrollTo=function(){if(void 0!==arguments[0])if(!0!==l(arguments[0])){var e=arguments[0].left,n=arguments[0].top;f.call(this,this,void 0===e?this.scrollLeft:~~e,void 0===n?this.scrollTop:~~n)}else{if("number"==typeof arguments[0]&&void 0===arguments[1])throw new SyntaxError("Value could not be converted");i.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left:"object"!=typeof arguments[0]?~~arguments[0]:this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top:void 0!==arguments[1]?~~arguments[1]:this.scrollTop)}},o.prototype.scrollBy=function(){void 0!==arguments[0]&&(!0!==l(arguments[0])?this.scroll({left:~~arguments[0].left+this.scrollLeft,top:~~arguments[0].top+this.scrollTop,behavior:arguments[0].behavior}):i.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left+this.scrollLeft:~~arguments[0]+this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top+this.scrollTop:~~arguments[1]+this.scrollTop))},o.prototype.scrollIntoView=function(){if(!0!==l(arguments[0])){var t=u(this),o=t.getBoundingClientRect(),a=this.getBoundingClientRect();t!==n.body?(f.call(this,t,t.scrollLeft+a.left-o.left,t.scrollTop+a.top-o.top),"fixed"!==e.getComputedStyle(t).position&&e.scrollBy({left:o.left,top:o.top,behavior:"smooth"})):e.scrollBy({left:a.left,top:a.top,behavior:"smooth"})}else i.scrollIntoView.call(this,void 0===arguments[0]||arguments[0])}}function s(e,n){this.scrollLeft=e,this.scrollTop=n}function l(e){if(null===e||"object"!=typeof e||void 0===e.behavior||"auto"===e.behavior||"instant"===e.behavior)return!0;if("object"==typeof e&&"smooth"===e.behavior)return!1;throw new TypeError("behavior member of ScrollOptions "+e.behavior+" is not a valid value for enumeration ScrollBehavior.")}function d(e,n){return"Y"===n?e.clientHeight+r<e.scrollHeight:"X"===n?e.clientWidth+r<e.scrollWidth:void 0}function c(n,t){var o=e.getComputedStyle(n,null)["overflow"+t];return"auto"===o||"scroll"===o}function h(e){var n=d(e,"Y")&&c(e,"Y"),t=d(e,"X")&&c(e,"X");return n||t}function u(e){for(;e!==n.body&&!1===h(e);)e=e.parentNode||e.host;return e}function p(n){var t,o,i,r,s=(a()-n.startTime)/468;r=s=s>1?1:s,t=.5*(1-Math.cos(Math.PI*r)),o=n.startX+(n.x-n.startX)*t,i=n.startY+(n.y-n.startY)*t,n.method.call(n.scrollable,o,i),o===n.x&&i===n.y||e.requestAnimationFrame(p.bind(e,n))}function f(t,o,r){var l,d,c,h,u=a();t===n.body?(l=e,d=e.scrollX||e.pageXOffset,c=e.scrollY||e.pageYOffset,h=i.scroll):(l=t,d=t.scrollLeft,c=t.scrollTop,h=s),p({scrollable:l,method:h,startTime:u,startX:d,startY:c,x:o,y:r})}}}}()},function(e,n,t){"use strict";var o=t(26),i=t(30),a=t(31),r=t(125),s=t(127),l=t(2)((function(){return 4294967297!==[].push.call({length:4294967296},1)})),d=!function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(e){return e instanceof TypeError}}();o({target:"Array",proto:!0,arity:1,forced:l||d},{push:function(e){var n=i(this),t=a(n),o=arguments.length;s(t+o);for(var l=0;l<o;l++)n[t]=arguments[l],t++;return r(n,t),t}})},function(e,n){e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(e,n,t){var o=t(1),i=t(8),a=o.document,r=i(a)&&i(a.createElement);e.exports=function(e){return r?a.createElement(e):{}}},function(e,n,t){var o=t(4),i=t(2);e.exports=o&&i((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},function(e,n,t){var o=t(59),i=t(61),a=o("keys");e.exports=function(e){return a[e]||(a[e]=i(e))}},function(e,n,t){var o=t(3),i=t(7),a=t(28),r=t(116).indexOf,s=t(47),l=o([].push);e.exports=function(e,n){var t,o=a(e),d=0,c=[];for(t in o)!i(s,t)&&i(o,t)&&l(c,t);for(;n.length>d;)i(o,t=n[d++])&&(~r(c,t)||l(c,t));return c}},function(e,n){e.exports=function(e){var n=null==e?0:e.length;return n?e[n-1]:void 0}},function(e,n,t){e.exports=t(242)},function(e,n,t){"use strict";var o=t(26),i=t(122).left,a=t(123),r=t(58),s=t(124);o({target:"Array",proto:!0,forced:!a("reduce")||!s&&r>79&&r<83},{reduce:function(e){var n=arguments.length;return i(this,e,n,n>1?arguments[1]:void 0)}})},function(e,n,t){"use strict";var o={}.propertyIsEnumerable,i=Object.getOwnPropertyDescriptor,a=i&&!o.call({1:2},1);n.f=a?function(e){var n=i(this,e);return!!n&&n.enumerable}:o},function(e,n,t){var o=t(32),i=t(8),a=t(54),r=t(105),s=t(107),l=t(29),d=TypeError,c=l("toPrimitive");e.exports=function(e,n){if(!i(e)||a(e))return e;var t,l=r(e,c);if(l){if(void 0===n&&(n="default"),t=o(l,e,n),!i(t)||a(t))return t;throw d("Can't convert object to primitive value")}return void 0===n&&(n="number"),s(e,n)}},function(e,n,t){var o=t(16);e.exports=o("navigator","userAgent")||""},function(e,n,t){var o=t(46),i=t(51);e.exports=function(e,n){var t=e[n];return i(t)?void 0:o(t)}},function(e,n){var t=String;e.exports=function(e){try{return t(e)}catch(e){return"Object"}}},function(e,n,t){var o=t(32),i=t(0),a=t(8),r=TypeError;e.exports=function(e,n){var t,s;if("string"===n&&i(t=e.toString)&&!a(s=o(t,e)))return s;if(i(t=e.valueOf)&&!a(s=o(t,e)))return s;if("string"!==n&&i(t=e.toString)&&!a(s=o(t,e)))return s;throw r("Can't convert object to primitive value")}},function(e,n,t){var o=t(0),i=t(14),a=t(109),r=t(35);e.exports=function(e,n,t,s){s||(s={});var l=s.enumerable,d=void 0!==s.name?s.name:n;if(o(t)&&a(t,d,s),s.global)l?e[n]=t:r(n,t);else{try{s.unsafe?e[n]&&(l=!0):delete e[n]}catch(e){}l?e[n]=t:i.f(e,n,{value:t,enumerable:!1,configurable:!s.nonConfigurable,writable:!s.nonWritable})}return e}},function(e,n,t){var o=t(2),i=t(0),a=t(7),r=t(4),s=t(110).CONFIGURABLE,l=t(111),d=t(112),c=d.enforce,h=d.get,u=Object.defineProperty,p=r&&!o((function(){return 8!==u((function(){}),"length",{value:8}).length})),f=String(String).split("String"),m=e.exports=function(e,n,t){"Symbol("===String(n).slice(0,7)&&(n="["+String(n).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),t&&t.getter&&(n="get "+n),t&&t.setter&&(n="set "+n),(!a(e,"name")||s&&e.name!==n)&&(r?u(e,"name",{value:n,configurable:!0}):e.name=n),p&&t&&a(t,"arity")&&e.length!==t.arity&&u(e,"length",{value:t.arity});try{t&&a(t,"constructor")&&t.constructor?r&&u(e,"prototype",{writable:!1}):e.prototype&&(e.prototype=void 0)}catch(e){}var o=c(e);return a(o,"source")||(o.source=f.join("string"==typeof n?n:"")),e};Function.prototype.toString=m((function(){return i(this)&&h(this).source||l(this)}),"toString")},function(e,n,t){var o=t(4),i=t(7),a=Function.prototype,r=o&&Object.getOwnPropertyDescriptor,s=i(a,"name"),l=s&&"something"===function(){}.name,d=s&&(!o||o&&r(a,"name").configurable);e.exports={EXISTS:s,PROPER:l,CONFIGURABLE:d}},function(e,n,t){var o=t(3),i=t(0),a=t(34),r=o(Function.toString);i(a.inspectSource)||(a.inspectSource=function(e){return r(e)}),e.exports=a.inspectSource},function(e,n,t){var o,i,a,r=t(113),s=t(1),l=t(8),d=t(17),c=t(7),h=t(34),u=t(97),p=t(47),f=s.TypeError,m=s.WeakMap;if(r||h.state){var g=h.state||(h.state=new m);g.get=g.get,g.has=g.has,g.set=g.set,o=function(e,n){if(g.has(e))throw f("Object already initialized");return n.facade=e,g.set(e,n),n},i=function(e){return g.get(e)||{}},a=function(e){return g.has(e)}}else{var y=u("state");p[y]=!0,o=function(e,n){if(c(e,y))throw f("Object already initialized");return n.facade=e,d(e,y,n),n},i=function(e){return c(e,y)?e[y]:{}},a=function(e){return c(e,y)}}e.exports={set:o,get:i,has:a,enforce:function(e){return a(e)?i(e):o(e,{})},getterFor:function(e){return function(n){var t;if(!l(n)||(t=i(n)).type!==e)throw f("Incompatible receiver, "+e+" required");return t}}}},function(e,n,t){var o=t(1),i=t(0),a=o.WeakMap;e.exports=i(a)&&/native code/.test(String(a))},function(e,n,t){var o=t(16),i=t(3),a=t(115),r=t(120),s=t(25),l=i([].concat);e.exports=o("Reflect","ownKeys")||function(e){var n=a.f(s(e)),t=r.f;return t?l(n,t(e)):n}},function(e,n,t){var o=t(98),i=t(94).concat("length","prototype");n.f=Object.getOwnPropertyNames||function(e){return o(e,i)}},function(e,n,t){var o=t(28),i=t(117),a=t(31),r=function(e){return function(n,t,r){var s,l=o(n),d=a(l),c=i(r,d);if(e&&t!=t){for(;d>c;)if((s=l[c++])!=s)return!0}else for(;d>c;c++)if((e||c in l)&&l[c]===t)return e||c||0;return!e&&-1}};e.exports={includes:r(!0),indexOf:r(!1)}},function(e,n,t){var o=t(64),i=Math.max,a=Math.min;e.exports=function(e,n){var t=o(e);return t<0?i(t+n,0):a(t,n)}},function(e,n){var t=Math.ceil,o=Math.floor;e.exports=Math.trunc||function(e){var n=+e;return(n>0?o:t)(n)}},function(e,n,t){var o=t(64),i=Math.min;e.exports=function(e){return e>0?i(o(e),9007199254740991):0}},function(e,n){n.f=Object.getOwnPropertySymbols},function(e,n,t){var o=t(2),i=t(0),a=/#|\.prototype\./,r=function(e,n){var t=l[s(e)];return t==c||t!=d&&(i(n)?o(n):!!n)},s=r.normalize=function(e){return String(e).replace(a,".").toLowerCase()},l=r.data={},d=r.NATIVE="N",c=r.POLYFILL="P";e.exports=r},function(e,n,t){var o=t(46),i=t(30),a=t(45),r=t(31),s=TypeError,l=function(e){return function(n,t,l,d){o(t);var c=i(n),h=a(c),u=r(c),p=e?u-1:0,f=e?-1:1;if(l<2)for(;;){if(p in h){d=h[p],p+=f;break}if(p+=f,e?p<0:u<=p)throw s("Reduce of empty array with no initial value")}for(;e?p>=0:u>p;p+=f)p in h&&(d=t(d,h[p],p,c));return d}};e.exports={left:l(!1),right:l(!0)}},function(e,n,t){"use strict";var o=t(2);e.exports=function(e,n){var t=[][e];return!!t&&o((function(){t.call(null,n||function(){return 1},1)}))}},function(e,n,t){var o=t(15),i=t(1);e.exports="process"==o(i.process)},function(e,n,t){"use strict";var o=t(4),i=t(126),a=TypeError,r=Object.getOwnPropertyDescriptor,s=o&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(e){return e instanceof TypeError}}();e.exports=s?function(e,n){if(i(e)&&!r(e,"length").writable)throw a("Cannot set read only .length");return e.length=n}:function(e,n){return e.length=n}},function(e,n,t){var o=t(15);e.exports=Array.isArray||function(e){return"Array"==o(e)}},function(e,n){var t=TypeError;e.exports=function(e){if(e>9007199254740991)throw t("Maximum allowed index exceeded");return e}},function(e,n,t){var o=t(26),i=t(1),a=t(129),r=t(130),s=i.WebAssembly,l=7!==Error("e",{cause:7}).cause,d=function(e,n){var t={};t[e]=r(e,n,l),o({global:!0,constructor:!0,arity:1,forced:l},t)},c=function(e,n){if(s&&s[e]){var t={};t[e]=r("WebAssembly."+e,n,l),o({target:"WebAssembly",stat:!0,constructor:!0,arity:1,forced:l},t)}};d("Error",(function(e){return function(n){return a(e,this,arguments)}})),d("EvalError",(function(e){return function(n){return a(e,this,arguments)}})),d("RangeError",(function(e){return function(n){return a(e,this,arguments)}})),d("ReferenceError",(function(e){return function(n){return a(e,this,arguments)}})),d("SyntaxError",(function(e){return function(n){return a(e,this,arguments)}})),d("TypeError",(function(e){return function(n){return a(e,this,arguments)}})),d("URIError",(function(e){return function(n){return a(e,this,arguments)}})),c("CompileError",(function(e){return function(n){return a(e,this,arguments)}})),c("LinkError",(function(e){return function(n){return a(e,this,arguments)}})),c("RuntimeError",(function(e){return function(n){return a(e,this,arguments)}}))},function(e,n,t){var o=t(27),i=Function.prototype,a=i.apply,r=i.call;e.exports="object"==typeof Reflect&&Reflect.apply||(o?r.bind(a):function(){return r.apply(a,arguments)})},function(e,n,t){"use strict";var o=t(16),i=t(7),a=t(17),r=t(55),s=t(65),l=t(63),d=t(132),c=t(133),h=t(134),u=t(138),p=t(139),f=t(140),m=t(4),g=t(60);e.exports=function(e,n,t,y){var v=y?2:1,b=e.split("."),w=b[b.length-1],S=o.apply(null,b);if(S){var k=S.prototype;if(!g&&i(k,"cause")&&delete k.cause,!t)return S;var T=o("Error"),x=n((function(e,n){var t=h(y?n:e,void 0),o=y?new S(e):new S;return void 0!==t&&a(o,"message",t),f&&a(o,"stack",p(o.stack,2)),this&&r(k,this)&&c(o,this,x),arguments.length>v&&u(o,arguments[v]),o}));if(x.prototype=k,"Error"!==w?s?s(x,T):l(x,T,{name:!0}):m&&"stackTraceLimit"in S&&(d(x,S,"stackTraceLimit"),d(x,S,"prepareStackTrace")),l(x,S),!g)try{k.name!==w&&a(k,"name",w),k.constructor=x}catch(e){}return x}}},function(e,n,t){var o=t(0),i=String,a=TypeError;e.exports=function(e){if("object"==typeof e||o(e))return e;throw a("Can't set "+i(e)+" as a prototype")}},function(e,n,t){var o=t(14).f;e.exports=function(e,n,t){t in e||o(e,t,{configurable:!0,get:function(){return n[t]},set:function(e){n[t]=e}})}},function(e,n,t){var o=t(0),i=t(8),a=t(65);e.exports=function(e,n,t){var r,s;return a&&o(r=n.constructor)&&r!==t&&i(s=r.prototype)&&s!==t.prototype&&a(e,s),e}},function(e,n,t){var o=t(135);e.exports=function(e,n){return void 0===e?arguments.length<2?"":n:o(e)}},function(e,n,t){var o=t(136),i=String;e.exports=function(e){if("Symbol"===o(e))throw TypeError("Cannot convert a Symbol value to a string");return i(e)}},function(e,n,t){var o=t(137),i=t(0),a=t(15),r=t(29)("toStringTag"),s=Object,l="Arguments"==a(function(){return arguments}());e.exports=o?a:function(e){var n,t,o;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(t=function(e,n){try{return e[n]}catch(e){}}(n=s(e),r))?t:l?a(n):"Object"==(o=a(n))&&i(n.callee)?"Arguments":o}},function(e,n,t){var o={};o[t(29)("toStringTag")]="z",e.exports="[object z]"===String(o)},function(e,n,t){var o=t(8),i=t(17);e.exports=function(e,n){o(n)&&"cause"in n&&i(e,"cause",n.cause)}},function(e,n,t){var o=t(3),i=Error,a=o("".replace),r=String(i("zxcasd").stack),s=/\n\s*at [^:]*:[^\n]*/,l=s.test(r);e.exports=function(e,n){if(l&&"string"==typeof e&&!i.prepareStackTrace)for(;n--;)e=a(e,s,"");return e}},function(e,n,t){var o=t(2),i=t(33);e.exports=!o((function(){var e=Error("a");return!("stack"in e)||(Object.defineProperty(e,"stack",i(1,7)),7!==e.stack)}))},function(e,n,t){var o=t(66),i=t(142);e.exports=function e(n,t,a,r,s){var l=-1,d=n.length;for(a||(a=i),s||(s=[]);++l<d;){var c=n[l];t>0&&a(c)?t>1?e(c,t-1,a,r,s):o(s,c):r||(s[s.length]=c)}return s}},function(e,n,t){var o=t(13),i=t(36),a=t(5),r=o?o.isConcatSpreadable:void 0;e.exports=function(e){return a(e)||i(e)||!!(r&&e&&e[r])}},function(e,n,t){var o=t(12),i=t(11);e.exports=function(e){return i(e)&&"[object Arguments]"==o(e)}},function(e,n,t){var o=t(13),i=Object.prototype,a=i.hasOwnProperty,r=i.toString,s=o?o.toStringTag:void 0;e.exports=function(e){var n=a.call(e,s),t=e[s];try{e[s]=void 0;var o=!0}catch(e){}var i=r.call(e);return o&&(n?e[s]=t:delete e[s]),i}},function(e,n){var t=Object.prototype.toString;e.exports=function(e){return t.call(e)}},function(e,n,t){var o=t(147),i=t(203),a=t(44),r=t(5),s=t(214);e.exports=function(e){return"function"==typeof e?e:null==e?a:"object"==typeof e?r(e)?i(e[0],e[1]):o(e):s(e)}},function(e,n,t){var o=t(148),i=t(202),a=t(83);e.exports=function(e){var n=i(e);return 1==n.length&&n[0][2]?a(n[0][0],n[0][1]):function(t){return t===e||o(t,e,n)}}},function(e,n,t){var o=t(68),i=t(72);e.exports=function(e,n,t,a){var r=t.length,s=r,l=!a;if(null==e)return!s;for(e=Object(e);r--;){var d=t[r];if(l&&d[2]?d[1]!==e[d[0]]:!(d[0]in e))return!1}for(;++r<s;){var c=(d=t[r])[0],h=e[c],u=d[1];if(l&&d[2]){if(void 0===h&&!(c in e))return!1}else{var p=new o;if(a)var f=a(h,u,c,e,n,p);if(!(void 0===f?i(u,h,3,a,p):f))return!1}}return!0}},function(e,n){e.exports=function(){this.__data__=[],this.size=0}},function(e,n,t){var o=t(19),i=Array.prototype.splice;e.exports=function(e){var n=this.__data__,t=o(n,e);return!(t<0)&&(t==n.length-1?n.pop():i.call(n,t,1),--this.size,!0)}},function(e,n,t){var o=t(19);e.exports=function(e){var n=this.__data__,t=o(n,e);return t<0?void 0:n[t][1]}},function(e,n,t){var o=t(19);e.exports=function(e){return o(this.__data__,e)>-1}},function(e,n,t){var o=t(19);e.exports=function(e,n){var t=this.__data__,i=o(t,e);return i<0?(++this.size,t.push([e,n])):t[i][1]=n,this}},function(e,n,t){var o=t(18);e.exports=function(){this.__data__=new o,this.size=0}},function(e,n){e.exports=function(e){var n=this.__data__,t=n.delete(e);return this.size=n.size,t}},function(e,n){e.exports=function(e){return this.__data__.get(e)}},function(e,n){e.exports=function(e){return this.__data__.has(e)}},function(e,n,t){var o=t(18),i=t(37),a=t(39);e.exports=function(e,n){var t=this.__data__;if(t instanceof o){var r=t.__data__;if(!i||r.length<199)return r.push([e,n]),this.size=++t.size,this;t=this.__data__=new a(r)}return t.set(e,n),this.size=t.size,this}},function(e,n,t){var o=t(70),i=t(160),a=t(38),r=t(71),s=/^\[object .+?Constructor\]$/,l=Function.prototype,d=Object.prototype,c=l.toString,h=d.hasOwnProperty,u=RegExp("^"+c.call(h).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=function(e){return!(!a(e)||i(e))&&(o(e)?u:s).test(r(e))}},function(e,n,t){var o,i=t(161),a=(o=/[^.]+$/.exec(i&&i.keys&&i.keys.IE_PROTO||""))?"Symbol(src)_1."+o:"";e.exports=function(e){return!!a&&a in e}},function(e,n,t){var o=t(6)["__core-js_shared__"];e.exports=o},function(e,n){e.exports=function(e,n){return null==e?void 0:e[n]}},function(e,n,t){var o=t(164),i=t(18),a=t(37);e.exports=function(){this.size=0,this.__data__={hash:new o,map:new(a||i),string:new o}}},function(e,n,t){var o=t(165),i=t(166),a=t(167),r=t(168),s=t(169);function l(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var o=e[n];this.set(o[0],o[1])}}l.prototype.clear=o,l.prototype.delete=i,l.prototype.get=a,l.prototype.has=r,l.prototype.set=s,e.exports=l},function(e,n,t){var o=t(20);e.exports=function(){this.__data__=o?o(null):{},this.size=0}},function(e,n){e.exports=function(e){var n=this.has(e)&&delete this.__data__[e];return this.size-=n?1:0,n}},function(e,n,t){var o=t(20),i=Object.prototype.hasOwnProperty;e.exports=function(e){var n=this.__data__;if(o){var t=n[e];return"__lodash_hash_undefined__"===t?void 0:t}return i.call(n,e)?n[e]:void 0}},function(e,n,t){var o=t(20),i=Object.prototype.hasOwnProperty;e.exports=function(e){var n=this.__data__;return o?void 0!==n[e]:i.call(n,e)}},function(e,n,t){var o=t(20);e.exports=function(e,n){var t=this.__data__;return this.size+=this.has(e)?0:1,t[e]=o&&void 0===n?"__lodash_hash_undefined__":n,this}},function(e,n,t){var o=t(21);e.exports=function(e){var n=o(this,e).delete(e);return this.size-=n?1:0,n}},function(e,n){e.exports=function(e){var n=typeof e;return"string"==n||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==e:null===e}},function(e,n,t){var o=t(21);e.exports=function(e){return o(this,e).get(e)}},function(e,n,t){var o=t(21);e.exports=function(e){return o(this,e).has(e)}},function(e,n,t){var o=t(21);e.exports=function(e,n){var t=o(this,e),i=t.size;return t.set(e,n),this.size+=t.size==i?0:1,this}},function(e,n,t){var o=t(68),i=t(73),a=t(179),r=t(182),s=t(198),l=t(5),d=t(77),c=t(79),h="[object Object]",u=Object.prototype.hasOwnProperty;e.exports=function(e,n,t,p,f,m){var g=l(e),y=l(n),v=g?"[object Array]":s(e),b=y?"[object Array]":s(n),w=(v="[object Arguments]"==v?h:v)==h,S=(b="[object Arguments]"==b?h:b)==h,k=v==b;if(k&&d(e)){if(!d(n))return!1;g=!0,w=!1}if(k&&!w)return m||(m=new o),g||c(e)?i(e,n,t,p,f,m):a(e,n,v,t,p,f,m);if(!(1&t)){var T=w&&u.call(e,"__wrapped__"),x=S&&u.call(n,"__wrapped__");if(T||x){var C=T?e.value():e,D=x?n.value():n;return m||(m=new o),f(C,D,t,p,m)}}return!!k&&(m||(m=new o),r(e,n,t,p,f,m))}},function(e,n){e.exports=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this}},function(e,n){e.exports=function(e){return this.__data__.has(e)}},function(e,n){e.exports=function(e,n){for(var t=-1,o=null==e?0:e.length;++t<o;)if(n(e[t],t,e))return!0;return!1}},function(e,n,t){var o=t(13),i=t(180),a=t(69),r=t(73),s=t(181),l=t(40),d=o?o.prototype:void 0,c=d?d.valueOf:void 0;e.exports=function(e,n,t,o,d,h,u){switch(t){case"[object DataView]":if(e.byteLength!=n.byteLength||e.byteOffset!=n.byteOffset)return!1;e=e.buffer,n=n.buffer;case"[object ArrayBuffer]":return!(e.byteLength!=n.byteLength||!h(new i(e),new i(n)));case"[object Boolean]":case"[object Date]":case"[object Number]":return a(+e,+n);case"[object Error]":return e.name==n.name&&e.message==n.message;case"[object RegExp]":case"[object String]":return e==n+"";case"[object Map]":var p=s;case"[object Set]":var f=1&o;if(p||(p=l),e.size!=n.size&&!f)return!1;var m=u.get(e);if(m)return m==n;o|=2,u.set(e,n);var g=r(p(e),p(n),o,d,h,u);return u.delete(e),g;case"[object Symbol]":if(c)return c.call(e)==c.call(n)}return!1}},function(e,n,t){var o=t(6).Uint8Array;e.exports=o},function(e,n){e.exports=function(e){var n=-1,t=Array(e.size);return e.forEach((function(e,o){t[++n]=[o,e]})),t}},function(e,n,t){var o=t(183),i=Object.prototype.hasOwnProperty;e.exports=function(e,n,t,a,r,s){var l=1&t,d=o(e),c=d.length;if(c!=o(n).length&&!l)return!1;for(var h=c;h--;){var u=d[h];if(!(l?u in n:i.call(n,u)))return!1}var p=s.get(e),f=s.get(n);if(p&&f)return p==n&&f==e;var m=!0;s.set(e,n),s.set(n,e);for(var g=l;++h<c;){var y=e[u=d[h]],v=n[u];if(a)var b=l?a(v,y,u,n,e,s):a(y,v,u,e,n,s);if(!(void 0===b?y===v||r(y,v,t,a,s):b)){m=!1;break}g||(g="constructor"==u)}if(m&&!g){var w=e.constructor,S=n.constructor;w==S||!("constructor"in e)||!("constructor"in n)||"function"==typeof w&&w instanceof w&&"function"==typeof S&&S instanceof S||(m=!1)}return s.delete(e),s.delete(n),m}},function(e,n,t){var o=t(184),i=t(185),a=t(76);e.exports=function(e){return o(e,a,i)}},function(e,n,t){var o=t(66),i=t(5);e.exports=function(e,n,t){var a=n(e);return i(e)?a:o(a,t(e))}},function(e,n,t){var o=t(186),i=t(187),a=Object.prototype.propertyIsEnumerable,r=Object.getOwnPropertySymbols,s=r?function(e){return null==e?[]:(e=Object(e),o(r(e),(function(n){return a.call(e,n)})))}:i;e.exports=s},function(e,n){e.exports=function(e,n){for(var t=-1,o=null==e?0:e.length,i=0,a=[];++t<o;){var r=e[t];n(r,t,e)&&(a[i++]=r)}return a}},function(e,n){e.exports=function(){return[]}},function(e,n,t){var o=t(189),i=t(36),a=t(5),r=t(77),s=t(78),l=t(79),d=Object.prototype.hasOwnProperty;e.exports=function(e,n){var t=a(e),c=!t&&i(e),h=!t&&!c&&r(e),u=!t&&!c&&!h&&l(e),p=t||c||h||u,f=p?o(e.length,String):[],m=f.length;for(var g in e)!n&&!d.call(e,g)||p&&("length"==g||h&&("offset"==g||"parent"==g)||u&&("buffer"==g||"byteLength"==g||"byteOffset"==g)||s(g,m))||f.push(g);return f}},function(e,n){e.exports=function(e,n){for(var t=-1,o=Array(e);++t<e;)o[t]=n(t);return o}},function(e,n){e.exports=function(){return!1}},function(e,n,t){var o=t(12),i=t(41),a=t(11),r={};r["[object Float32Array]"]=r["[object Float64Array]"]=r["[object Int8Array]"]=r["[object Int16Array]"]=r["[object Int32Array]"]=r["[object Uint8Array]"]=r["[object Uint8ClampedArray]"]=r["[object Uint16Array]"]=r["[object Uint32Array]"]=!0,r["[object Arguments]"]=r["[object Array]"]=r["[object ArrayBuffer]"]=r["[object Boolean]"]=r["[object DataView]"]=r["[object Date]"]=r["[object Error]"]=r["[object Function]"]=r["[object Map]"]=r["[object Number]"]=r["[object Object]"]=r["[object RegExp]"]=r["[object Set]"]=r["[object String]"]=r["[object WeakMap]"]=!1,e.exports=function(e){return a(e)&&i(e.length)&&!!r[o(e)]}},function(e,n){e.exports=function(e){return function(n){return e(n)}}},function(e,n,t){(function(e){var o=t(67),i=n&&!n.nodeType&&n,a=i&&"object"==typeof e&&e&&!e.nodeType&&e,r=a&&a.exports===i&&o.process,s=function(){try{var e=a&&a.require&&a.require("util").types;return e||r&&r.binding&&r.binding("util")}catch(e){}}();e.exports=s}).call(this,t(48)(e))},function(e,n,t){var o=t(195),i=t(196),a=Object.prototype.hasOwnProperty;e.exports=function(e){if(!o(e))return i(e);var n=[];for(var t in Object(e))a.call(e,t)&&"constructor"!=t&&n.push(t);return n}},function(e,n){var t=Object.prototype;e.exports=function(e){var n=e&&e.constructor;return e===("function"==typeof n&&n.prototype||t)}},function(e,n,t){var o=t(197)(Object.keys,Object);e.exports=o},function(e,n){e.exports=function(e,n){return function(t){return e(n(t))}}},function(e,n,t){var o=t(199),i=t(37),a=t(200),r=t(81),s=t(201),l=t(12),d=t(71),c=d(o),h=d(i),u=d(a),p=d(r),f=d(s),m=l;(o&&"[object DataView]"!=m(new o(new ArrayBuffer(1)))||i&&"[object Map]"!=m(new i)||a&&"[object Promise]"!=m(a.resolve())||r&&"[object Set]"!=m(new r)||s&&"[object WeakMap]"!=m(new s))&&(m=function(e){var n=l(e),t="[object Object]"==n?e.constructor:void 0,o=t?d(t):"";if(o)switch(o){case c:return"[object DataView]";case h:return"[object Map]";case u:return"[object Promise]";case p:return"[object Set]";case f:return"[object WeakMap]"}return n}),e.exports=m},function(e,n,t){var o=t(9)(t(6),"DataView");e.exports=o},function(e,n,t){var o=t(9)(t(6),"Promise");e.exports=o},function(e,n,t){var o=t(9)(t(6),"WeakMap");e.exports=o},function(e,n,t){var o=t(82),i=t(76);e.exports=function(e){for(var n=i(e),t=n.length;t--;){var a=n[t],r=e[a];n[t]=[a,r,o(r)]}return n}},function(e,n,t){var o=t(72),i=t(204),a=t(211),r=t(42),s=t(82),l=t(83),d=t(22);e.exports=function(e,n){return r(e)&&s(n)?l(d(e),n):function(t){var r=i(t,e);return void 0===r&&r===n?a(t,e):o(n,r,3)}}},function(e,n,t){var o=t(84);e.exports=function(e,n,t){var i=null==e?void 0:o(e,n);return void 0===i?t:i}},function(e,n,t){var o=t(206),i=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,a=/\\(\\)?/g,r=o((function(e){var n=[];return 46===e.charCodeAt(0)&&n.push(""),e.replace(i,(function(e,t,o,i){n.push(o?i.replace(a,"$1"):t||e)})),n}));e.exports=r},function(e,n,t){var o=t(207);e.exports=function(e){var n=o(e,(function(e){return 500===t.size&&t.clear(),e})),t=n.cache;return n}},function(e,n,t){var o=t(39);function i(e,n){if("function"!=typeof e||null!=n&&"function"!=typeof n)throw new TypeError("Expected a function");var t=function(){var o=arguments,i=n?n.apply(this,o):o[0],a=t.cache;if(a.has(i))return a.get(i);var r=e.apply(this,o);return t.cache=a.set(i,r)||a,r};return t.cache=new(i.Cache||o),t}i.Cache=o,e.exports=i},function(e,n,t){var o=t(209);e.exports=function(e){return null==e?"":o(e)}},function(e,n,t){var o=t(13),i=t(210),a=t(5),r=t(43),s=o?o.prototype:void 0,l=s?s.toString:void 0;e.exports=function e(n){if("string"==typeof n)return n;if(a(n))return i(n,e)+"";if(r(n))return l?l.call(n):"";var t=n+"";return"0"==t&&1/n==-1/0?"-0":t}},function(e,n){e.exports=function(e,n){for(var t=-1,o=null==e?0:e.length,i=Array(o);++t<o;)i[t]=n(e[t],t,e);return i}},function(e,n,t){var o=t(212),i=t(213);e.exports=function(e,n){return null!=e&&i(e,n,o)}},function(e,n){e.exports=function(e,n){return null!=e&&n in Object(e)}},function(e,n,t){var o=t(85),i=t(36),a=t(5),r=t(78),s=t(41),l=t(22);e.exports=function(e,n,t){for(var d=-1,c=(n=o(n,e)).length,h=!1;++d<c;){var u=l(n[d]);if(!(h=null!=e&&t(e,u)))break;e=e[u]}return h||++d!=c?h:!!(c=null==e?0:e.length)&&s(c)&&r(u,c)&&(a(e)||i(e))}},function(e,n,t){var o=t(215),i=t(216),a=t(42),r=t(22);e.exports=function(e){return a(e)?o(r(e)):i(e)}},function(e,n){e.exports=function(e){return function(n){return null==n?void 0:n[e]}}},function(e,n,t){var o=t(84);e.exports=function(e){return function(n){return o(n,e)}}},function(e,n,t){var o=t(44),i=t(218),a=t(220);e.exports=function(e,n){return a(i(e,n,o),e+"")}},function(e,n,t){var o=t(219),i=Math.max;e.exports=function(e,n,t){return n=i(void 0===n?e.length-1:n,0),function(){for(var a=arguments,r=-1,s=i(a.length-n,0),l=Array(s);++r<s;)l[r]=a[n+r];r=-1;for(var d=Array(n+1);++r<n;)d[r]=a[r];return d[n]=t(l),o(e,this,d)}}},function(e,n){e.exports=function(e,n,t){switch(t.length){case 0:return e.call(n);case 1:return e.call(n,t[0]);case 2:return e.call(n,t[0],t[1]);case 3:return e.call(n,t[0],t[1],t[2])}return e.apply(n,t)}},function(e,n,t){var o=t(221),i=t(224)(o);e.exports=i},function(e,n,t){var o=t(222),i=t(223),a=t(44),r=i?function(e,n){return i(e,"toString",{configurable:!0,enumerable:!1,value:o(n),writable:!0})}:a;e.exports=r},function(e,n){e.exports=function(e){return function(){return e}}},function(e,n,t){var o=t(9),i=function(){try{var e=o(Object,"defineProperty");return e({},"",{}),e}catch(e){}}();e.exports=i},function(e,n){var t=Date.now;e.exports=function(e){var n=0,o=0;return function(){var i=t(),a=16-(i-o);if(o=i,a>0){if(++n>=800)return arguments[0]}else n=0;return e.apply(void 0,arguments)}}},function(e,n,t){var o=t(74),i=t(226),a=t(231),r=t(75),s=t(232),l=t(40);e.exports=function(e,n,t){var d=-1,c=i,h=e.length,u=!0,p=[],f=p;if(t)u=!1,c=a;else if(h>=200){var m=n?null:s(e);if(m)return l(m);u=!1,c=r,f=new o}else f=n?[]:p;e:for(;++d<h;){var g=e[d],y=n?n(g):g;if(g=t||0!==g?g:0,u&&y==y){for(var v=f.length;v--;)if(f[v]===y)continue e;n&&f.push(y),p.push(g)}else c(f,y,t)||(f!==p&&f.push(y),p.push(g))}return p}},function(e,n,t){var o=t(227);e.exports=function(e,n){return!!(null==e?0:e.length)&&o(e,n,0)>-1}},function(e,n,t){var o=t(228),i=t(229),a=t(230);e.exports=function(e,n,t){return n==n?a(e,n,t):o(e,i,t)}},function(e,n){e.exports=function(e,n,t,o){for(var i=e.length,a=t+(o?1:-1);o?a--:++a<i;)if(n(e[a],a,e))return a;return-1}},function(e,n){e.exports=function(e){return e!=e}},function(e,n){e.exports=function(e,n,t){for(var o=t-1,i=e.length;++o<i;)if(e[o]===n)return o;return-1}},function(e,n){e.exports=function(e,n,t){for(var o=-1,i=null==e?0:e.length;++o<i;)if(t(n,e[o]))return!0;return!1}},function(e,n,t){var o=t(81),i=t(233),a=t(40),r=o&&1/a(new o([,-0]))[1]==1/0?function(e){return new o(e)}:i;e.exports=r},function(e,n){e.exports=function(){}},function(e,n,t){var o=t(80),i=t(11);e.exports=function(e){return i(e)&&o(e)}},function(e,n,t){},function(e,n,t){},function(e,n,t){},function(e,n,t){"use strict";t(86)},function(e,n,t){},function(e,n,t){"use strict";t(88)},function(e,n,t){"use strict";t(89)},function(e,n,t){"use strict";t.r(n);
/*!
 * Vue.js v2.7.14
 * (c) 2014-2022 Evan You
 * Released under the MIT License.
 */
var o=Object.freeze({}),i=Array.isArray;function a(e){return null==e}function r(e){return null!=e}function s(e){return!0===e}function l(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function d(e){return"function"==typeof e}function c(e){return null!==e&&"object"==typeof e}var h=Object.prototype.toString;function u(e){return"[object Object]"===h.call(e)}function p(e){return"[object RegExp]"===h.call(e)}function f(e){var n=parseFloat(String(e));return n>=0&&Math.floor(n)===n&&isFinite(e)}function m(e){return r(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function g(e){return null==e?"":Array.isArray(e)||u(e)&&e.toString===h?JSON.stringify(e,null,2):String(e)}function y(e){var n=parseFloat(e);return isNaN(n)?e:n}function v(e,n){for(var t=Object.create(null),o=e.split(","),i=0;i<o.length;i++)t[o[i]]=!0;return n?function(e){return t[e.toLowerCase()]}:function(e){return t[e]}}v("slot,component",!0);var b=v("key,ref,slot,slot-scope,is");function w(e,n){var t=e.length;if(t){if(n===e[t-1])return void(e.length=t-1);var o=e.indexOf(n);if(o>-1)return e.splice(o,1)}}var S=Object.prototype.hasOwnProperty;function k(e,n){return S.call(e,n)}function T(e){var n=Object.create(null);return function(t){return n[t]||(n[t]=e(t))}}var x=/-(\w)/g,C=T((function(e){return e.replace(x,(function(e,n){return n?n.toUpperCase():""}))})),D=T((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),P=/\B([A-Z])/g,I=T((function(e){return e.replace(P,"-$1").toLowerCase()}));var _=Function.prototype.bind?function(e,n){return e.bind(n)}:function(e,n){function t(t){var o=arguments.length;return o?o>1?e.apply(n,arguments):e.call(n,t):e.call(n)}return t._length=e.length,t};function E(e,n){n=n||0;for(var t=e.length-n,o=new Array(t);t--;)o[t]=e[t+n];return o}function O(e,n){for(var t in n)e[t]=n[t];return e}function A(e){for(var n={},t=0;t<e.length;t++)e[t]&&O(n,e[t]);return n}function U(e,n,t){}var M=function(e,n,t){return!1},L=function(e){return e};function B(e,n){if(e===n)return!0;var t=c(e),o=c(n);if(!t||!o)return!t&&!o&&String(e)===String(n);try{var i=Array.isArray(e),a=Array.isArray(n);if(i&&a)return e.length===n.length&&e.every((function(e,t){return B(e,n[t])}));if(e instanceof Date&&n instanceof Date)return e.getTime()===n.getTime();if(i||a)return!1;var r=Object.keys(e),s=Object.keys(n);return r.length===s.length&&r.every((function(t){return B(e[t],n[t])}))}catch(e){return!1}}function R(e,n){for(var t=0;t<e.length;t++)if(B(e[t],n))return t;return-1}function F(e){var n=!1;return function(){n||(n=!0,e.apply(this,arguments))}}function j(e,n){return e===n?0===e&&1/e!=1/n:e==e||n==n}var z=["component","directive","filter"],N=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch","renderTracked","renderTriggered"],W={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:M,isReservedAttr:M,isUnknownElement:M,getTagNamespace:U,parsePlatformTagName:L,mustUseProp:M,async:!0,_lifecycleHooks:N},$=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function G(e){var n=(e+"").charCodeAt(0);return 36===n||95===n}function q(e,n,t,o){Object.defineProperty(e,n,{value:t,enumerable:!!o,writable:!0,configurable:!0})}var H=new RegExp("[^".concat($.source,".$_\\d]"));var X="__proto__"in{},V="undefined"!=typeof window,Y=V&&window.navigator.userAgent.toLowerCase(),K=Y&&/msie|trident/.test(Y),Z=Y&&Y.indexOf("msie 9.0")>0,Q=Y&&Y.indexOf("edge/")>0;Y&&Y.indexOf("android");var J=Y&&/iphone|ipad|ipod|ios/.test(Y);Y&&/chrome\/\d+/.test(Y),Y&&/phantomjs/.test(Y);var ee,ne=Y&&Y.match(/firefox\/(\d+)/),te={}.watch,oe=!1;if(V)try{var ie={};Object.defineProperty(ie,"passive",{get:function(){oe=!0}}),window.addEventListener("test-passive",null,ie)}catch(e){}var ae=function(){return void 0===ee&&(ee=!V&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),ee},re=V&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function se(e){return"function"==typeof e&&/native code/.test(e.toString())}var le,de="undefined"!=typeof Symbol&&se(Symbol)&&"undefined"!=typeof Reflect&&se(Reflect.ownKeys);le="undefined"!=typeof Set&&se(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var ce=null;function he(e){void 0===e&&(e=null),e||ce&&ce._scope.off(),ce=e,e&&e._scope.on()}var ue=function(){function e(e,n,t,o,i,a,r,s){this.tag=e,this.data=n,this.children=t,this.text=o,this.elm=i,this.ns=void 0,this.context=a,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=n&&n.key,this.componentOptions=r,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1}return Object.defineProperty(e.prototype,"child",{get:function(){return this.componentInstance},enumerable:!1,configurable:!0}),e}(),pe=function(e){void 0===e&&(e="");var n=new ue;return n.text=e,n.isComment=!0,n};function fe(e){return new ue(void 0,void 0,void 0,String(e))}function me(e){var n=new ue(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return n.ns=e.ns,n.isStatic=e.isStatic,n.key=e.key,n.isComment=e.isComment,n.fnContext=e.fnContext,n.fnOptions=e.fnOptions,n.fnScopeId=e.fnScopeId,n.asyncMeta=e.asyncMeta,n.isCloned=!0,n}var ge=0,ye=[],ve=function(){function e(){this._pending=!1,this.id=ge++,this.subs=[]}return e.prototype.addSub=function(e){this.subs.push(e)},e.prototype.removeSub=function(e){this.subs[this.subs.indexOf(e)]=null,this._pending||(this._pending=!0,ye.push(this))},e.prototype.depend=function(n){e.target&&e.target.addDep(this)},e.prototype.notify=function(e){var n=this.subs.filter((function(e){return e}));for(var t=0,o=n.length;t<o;t++){0,n[t].update()}},e}();ve.target=null;var be=[];function we(e){be.push(e),ve.target=e}function Se(){be.pop(),ve.target=be[be.length-1]}var ke=Array.prototype,Te=Object.create(ke);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var n=ke[e];q(Te,e,(function(){for(var t=[],o=0;o<arguments.length;o++)t[o]=arguments[o];var i,a=n.apply(this,t),r=this.__ob__;switch(e){case"push":case"unshift":i=t;break;case"splice":i=t.slice(2)}return i&&r.observeArray(i),r.dep.notify(),a}))}));var xe=Object.getOwnPropertyNames(Te),Ce={},De=!0;function Pe(e){De=e}var Ie={notify:U,depend:U,addSub:U,removeSub:U},_e=function(){function e(e,n,t){if(void 0===n&&(n=!1),void 0===t&&(t=!1),this.value=e,this.shallow=n,this.mock=t,this.dep=t?Ie:new ve,this.vmCount=0,q(e,"__ob__",this),i(e)){if(!t)if(X)e.__proto__=Te;else for(var o=0,a=xe.length;o<a;o++){q(e,s=xe[o],Te[s])}n||this.observeArray(e)}else{var r=Object.keys(e);for(o=0;o<r.length;o++){var s;Oe(e,s=r[o],Ce,void 0,n,t)}}}return e.prototype.observeArray=function(e){for(var n=0,t=e.length;n<t;n++)Ee(e[n],!1,this.mock)},e}();function Ee(e,n,t){return e&&k(e,"__ob__")&&e.__ob__ instanceof _e?e.__ob__:!De||!t&&ae()||!i(e)&&!u(e)||!Object.isExtensible(e)||e.__v_skip||Fe(e)||e instanceof ue?void 0:new _e(e,n,t)}function Oe(e,n,t,o,a,r){var s=new ve,l=Object.getOwnPropertyDescriptor(e,n);if(!l||!1!==l.configurable){var d=l&&l.get,c=l&&l.set;d&&!c||t!==Ce&&2!==arguments.length||(t=e[n]);var h=!a&&Ee(t,!1,r);return Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:function(){var n=d?d.call(e):t;return ve.target&&(s.depend(),h&&(h.dep.depend(),i(n)&&Me(n))),Fe(n)&&!a?n.value:n},set:function(n){var o=d?d.call(e):t;if(j(o,n)){if(c)c.call(e,n);else{if(d)return;if(!a&&Fe(o)&&!Fe(n))return void(o.value=n);t=n}h=!a&&Ee(n,!1,r),s.notify()}}}),s}}function Ae(e,n,t){if(!Re(e)){var o=e.__ob__;return i(e)&&f(n)?(e.length=Math.max(e.length,n),e.splice(n,1,t),o&&!o.shallow&&o.mock&&Ee(t,!1,!0),t):n in e&&!(n in Object.prototype)?(e[n]=t,t):e._isVue||o&&o.vmCount?t:o?(Oe(o.value,n,t,void 0,o.shallow,o.mock),o.dep.notify(),t):(e[n]=t,t)}}function Ue(e,n){if(i(e)&&f(n))e.splice(n,1);else{var t=e.__ob__;e._isVue||t&&t.vmCount||Re(e)||k(e,n)&&(delete e[n],t&&t.dep.notify())}}function Me(e){for(var n=void 0,t=0,o=e.length;t<o;t++)(n=e[t])&&n.__ob__&&n.__ob__.dep.depend(),i(n)&&Me(n)}function Le(e){return Be(e,!0),q(e,"__v_isShallow",!0),e}function Be(e,n){if(!Re(e)){Ee(e,n,ae());0}}function Re(e){return!(!e||!e.__v_isReadonly)}function Fe(e){return!(!e||!0!==e.__v_isRef)}function je(e,n,t){Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var e=n[t];if(Fe(e))return e.value;var o=e&&e.__ob__;return o&&o.dep.depend(),e},set:function(e){var o=n[t];Fe(o)&&!Fe(e)?o.value=e:n[t]=e}})}"".concat("watcher"," callback"),"".concat("watcher"," getter"),"".concat("watcher"," cleanup");var ze;var Ne=function(){function e(e){void 0===e&&(e=!1),this.detached=e,this.active=!0,this.effects=[],this.cleanups=[],this.parent=ze,!e&&ze&&(this.index=(ze.scopes||(ze.scopes=[])).push(this)-1)}return e.prototype.run=function(e){if(this.active){var n=ze;try{return ze=this,e()}finally{ze=n}}else 0},e.prototype.on=function(){ze=this},e.prototype.off=function(){ze=this.parent},e.prototype.stop=function(e){if(this.active){var n=void 0,t=void 0;for(n=0,t=this.effects.length;n<t;n++)this.effects[n].teardown();for(n=0,t=this.cleanups.length;n<t;n++)this.cleanups[n]();if(this.scopes)for(n=0,t=this.scopes.length;n<t;n++)this.scopes[n].stop(!0);if(!this.detached&&this.parent&&!e){var o=this.parent.scopes.pop();o&&o!==this&&(this.parent.scopes[this.index]=o,o.index=this.index)}this.parent=void 0,this.active=!1}},e}();function We(e){var n=e._provided,t=e.$parent&&e.$parent._provided;return t===n?e._provided=Object.create(t):n}var $e=T((function(e){var n="&"===e.charAt(0),t="~"===(e=n?e.slice(1):e).charAt(0),o="!"===(e=t?e.slice(1):e).charAt(0);return{name:e=o?e.slice(1):e,once:t,capture:o,passive:n}}));function Ge(e,n){function t(){var e=t.fns;if(!i(e))return Pn(e,null,arguments,n,"v-on handler");for(var o=e.slice(),a=0;a<o.length;a++)Pn(o[a],null,arguments,n,"v-on handler")}return t.fns=e,t}function qe(e,n,t,o,i,r){var l,d,c,h;for(l in e)d=e[l],c=n[l],h=$e(l),a(d)||(a(c)?(a(d.fns)&&(d=e[l]=Ge(d,r)),s(h.once)&&(d=e[l]=i(h.name,d,h.capture)),t(h.name,d,h.capture,h.passive,h.params)):d!==c&&(c.fns=d,e[l]=c));for(l in n)a(e[l])&&o((h=$e(l)).name,n[l],h.capture)}function He(e,n,t){var o;e instanceof ue&&(e=e.data.hook||(e.data.hook={}));var i=e[n];function l(){t.apply(this,arguments),w(o.fns,l)}a(i)?o=Ge([l]):r(i.fns)&&s(i.merged)?(o=i).fns.push(l):o=Ge([i,l]),o.merged=!0,e[n]=o}function Xe(e,n,t,o,i){if(r(n)){if(k(n,t))return e[t]=n[t],i||delete n[t],!0;if(k(n,o))return e[t]=n[o],i||delete n[o],!0}return!1}function Ve(e){return l(e)?[fe(e)]:i(e)?function e(n,t){var o,d,c,h,u=[];for(o=0;o<n.length;o++)a(d=n[o])||"boolean"==typeof d||(c=u.length-1,h=u[c],i(d)?d.length>0&&(Ye((d=e(d,"".concat(t||"","_").concat(o)))[0])&&Ye(h)&&(u[c]=fe(h.text+d[0].text),d.shift()),u.push.apply(u,d)):l(d)?Ye(h)?u[c]=fe(h.text+d):""!==d&&u.push(fe(d)):Ye(d)&&Ye(h)?u[c]=fe(h.text+d.text):(s(n._isVList)&&r(d.tag)&&a(d.key)&&r(t)&&(d.key="__vlist".concat(t,"_").concat(o,"__")),u.push(d)));return u}(e):void 0}function Ye(e){return r(e)&&r(e.text)&&!1===e.isComment}function Ke(e,n){var t,o,a,s,l=null;if(i(e)||"string"==typeof e)for(l=new Array(e.length),t=0,o=e.length;t<o;t++)l[t]=n(e[t],t);else if("number"==typeof e)for(l=new Array(e),t=0;t<e;t++)l[t]=n(t+1,t);else if(c(e))if(de&&e[Symbol.iterator]){l=[];for(var d=e[Symbol.iterator](),h=d.next();!h.done;)l.push(n(h.value,l.length)),h=d.next()}else for(a=Object.keys(e),l=new Array(a.length),t=0,o=a.length;t<o;t++)s=a[t],l[t]=n(e[s],s,t);return r(l)||(l=[]),l._isVList=!0,l}function Ze(e,n,t,o){var i,a=this.$scopedSlots[e];a?(t=t||{},o&&(t=O(O({},o),t)),i=a(t)||(d(n)?n():n)):i=this.$slots[e]||(d(n)?n():n);var r=t&&t.slot;return r?this.$createElement("template",{slot:r},i):i}function Qe(e){return Et(this.$options,"filters",e,!0)||L}function Je(e,n){return i(e)?-1===e.indexOf(n):e!==n}function en(e,n,t,o,i){var a=W.keyCodes[n]||t;return i&&o&&!W.keyCodes[n]?Je(i,o):a?Je(a,e):o?I(o)!==n:void 0===e}function nn(e,n,t,o,a){if(t)if(c(t)){i(t)&&(t=A(t));var r=void 0,s=function(i){if("class"===i||"style"===i||b(i))r=e;else{var s=e.attrs&&e.attrs.type;r=o||W.mustUseProp(n,s,i)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var l=C(i),d=I(i);l in r||d in r||(r[i]=t[i],a&&((e.on||(e.on={}))["update:".concat(i)]=function(e){t[i]=e}))};for(var l in t)s(l)}else;return e}function tn(e,n){var t=this._staticTrees||(this._staticTrees=[]),o=t[e];return o&&!n||an(o=t[e]=this.$options.staticRenderFns[e].call(this._renderProxy,this._c,this),"__static__".concat(e),!1),o}function on(e,n,t){return an(e,"__once__".concat(n).concat(t?"_".concat(t):""),!0),e}function an(e,n,t){if(i(e))for(var o=0;o<e.length;o++)e[o]&&"string"!=typeof e[o]&&rn(e[o],"".concat(n,"_").concat(o),t);else rn(e,n,t)}function rn(e,n,t){e.isStatic=!0,e.key=n,e.isOnce=t}function sn(e,n){if(n)if(u(n)){var t=e.on=e.on?O({},e.on):{};for(var o in n){var i=t[o],a=n[o];t[o]=i?[].concat(i,a):a}}else;return e}function ln(e,n,t,o){n=n||{$stable:!t};for(var a=0;a<e.length;a++){var r=e[a];i(r)?ln(r,n,t):r&&(r.proxy&&(r.fn.proxy=!0),n[r.key]=r.fn)}return o&&(n.$key=o),n}function dn(e,n){for(var t=0;t<n.length;t+=2){var o=n[t];"string"==typeof o&&o&&(e[n[t]]=n[t+1])}return e}function cn(e,n){return"string"==typeof e?n+e:e}function hn(e){e._o=on,e._n=y,e._s=g,e._l=Ke,e._t=Ze,e._q=B,e._i=R,e._m=tn,e._f=Qe,e._k=en,e._b=nn,e._v=fe,e._e=pe,e._u=ln,e._g=sn,e._d=dn,e._p=cn}function un(e,n){if(!e||!e.length)return{};for(var t={},o=0,i=e.length;o<i;o++){var a=e[o],r=a.data;if(r&&r.attrs&&r.attrs.slot&&delete r.attrs.slot,a.context!==n&&a.fnContext!==n||!r||null==r.slot)(t.default||(t.default=[])).push(a);else{var s=r.slot,l=t[s]||(t[s]=[]);"template"===a.tag?l.push.apply(l,a.children||[]):l.push(a)}}for(var d in t)t[d].every(pn)&&delete t[d];return t}function pn(e){return e.isComment&&!e.asyncFactory||" "===e.text}function fn(e){return e.isComment&&e.asyncFactory}function mn(e,n,t,i){var a,r=Object.keys(t).length>0,s=n?!!n.$stable:!r,l=n&&n.$key;if(n){if(n._normalized)return n._normalized;if(s&&i&&i!==o&&l===i.$key&&!r&&!i.$hasNormal)return i;for(var d in a={},n)n[d]&&"$"!==d[0]&&(a[d]=gn(e,t,d,n[d]))}else a={};for(var c in t)c in a||(a[c]=yn(t,c));return n&&Object.isExtensible(n)&&(n._normalized=a),q(a,"$stable",s),q(a,"$key",l),q(a,"$hasNormal",r),a}function gn(e,n,t,o){var a=function(){var n=ce;he(e);var t=arguments.length?o.apply(null,arguments):o({}),a=(t=t&&"object"==typeof t&&!i(t)?[t]:Ve(t))&&t[0];return he(n),t&&(!a||1===t.length&&a.isComment&&!fn(a))?void 0:t};return o.proxy&&Object.defineProperty(n,t,{get:a,enumerable:!0,configurable:!0}),a}function yn(e,n){return function(){return e[n]}}function vn(e){return{get attrs(){if(!e._attrsProxy){var n=e._attrsProxy={};q(n,"_v_attr_proxy",!0),bn(n,e.$attrs,o,e,"$attrs")}return e._attrsProxy},get listeners(){e._listenersProxy||bn(e._listenersProxy={},e.$listeners,o,e,"$listeners");return e._listenersProxy},get slots(){return function(e){e._slotsProxy||Sn(e._slotsProxy={},e.$scopedSlots);return e._slotsProxy}(e)},emit:_(e.$emit,e),expose:function(n){n&&Object.keys(n).forEach((function(t){return je(e,n,t)}))}}}function bn(e,n,t,o,i){var a=!1;for(var r in n)r in e?n[r]!==t[r]&&(a=!0):(a=!0,wn(e,r,o,i));for(var r in e)r in n||(a=!0,delete e[r]);return a}function wn(e,n,t,o){Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:function(){return t[o][n]}})}function Sn(e,n){for(var t in n)e[t]=n[t];for(var t in e)t in n||delete e[t]}var kn=null;function Tn(e,n){return(e.__esModule||de&&"Module"===e[Symbol.toStringTag])&&(e=e.default),c(e)?n.extend(e):e}function xn(e){if(i(e))for(var n=0;n<e.length;n++){var t=e[n];if(r(t)&&(r(t.componentOptions)||fn(t)))return t}}function Cn(e,n,t,o,h,u){return(i(t)||l(t))&&(h=o,o=t,t=void 0),s(u)&&(h=2),function(e,n,t,o,l){if(r(t)&&r(t.__ob__))return pe();r(t)&&r(t.is)&&(n=t.is);if(!n)return pe();0;i(o)&&d(o[0])&&((t=t||{}).scopedSlots={default:o[0]},o.length=0);2===l?o=Ve(o):1===l&&(o=function(e){for(var n=0;n<e.length;n++)if(i(e[n]))return Array.prototype.concat.apply([],e);return e}(o));var h,u;if("string"==typeof n){var p=void 0;u=e.$vnode&&e.$vnode.ns||W.getTagNamespace(n),h=W.isReservedTag(n)?new ue(W.parsePlatformTagName(n),t,o,void 0,void 0,e):t&&t.pre||!r(p=Et(e.$options,"components",n))?new ue(n,t,o,void 0,void 0,e):wt(p,t,e,o,n)}else h=wt(n,t,e,o);return i(h)?h:r(h)?(r(u)&&function e(n,t,o){n.ns=t,"foreignObject"===n.tag&&(t=void 0,o=!0);if(r(n.children))for(var i=0,l=n.children.length;i<l;i++){var d=n.children[i];r(d.tag)&&(a(d.ns)||s(o)&&"svg"!==d.tag)&&e(d,t,o)}}(h,u),r(t)&&function(e){c(e.style)&&Wn(e.style);c(e.class)&&Wn(e.class)}(t),h):pe()}(e,n,t,o,h)}function Dn(e,n,t){we();try{if(n)for(var o=n;o=o.$parent;){var i=o.$options.errorCaptured;if(i)for(var a=0;a<i.length;a++)try{if(!1===i[a].call(o,e,n,t))return}catch(e){In(e,o,"errorCaptured hook")}}In(e,n,t)}finally{Se()}}function Pn(e,n,t,o,i){var a;try{(a=t?e.apply(n,t):e.call(n))&&!a._isVue&&m(a)&&!a._handled&&(a.catch((function(e){return Dn(e,o,i+" (Promise/async)")})),a._handled=!0)}catch(e){Dn(e,o,i)}return a}function In(e,n,t){if(W.errorHandler)try{return W.errorHandler.call(null,e,n,t)}catch(n){n!==e&&_n(n,null,"config.errorHandler")}_n(e,n,t)}function _n(e,n,t){if(!V||"undefined"==typeof console)throw e;console.error(e)}var En,On=!1,An=[],Un=!1;function Mn(){Un=!1;var e=An.slice(0);An.length=0;for(var n=0;n<e.length;n++)e[n]()}if("undefined"!=typeof Promise&&se(Promise)){var Ln=Promise.resolve();En=function(){Ln.then(Mn),J&&setTimeout(U)},On=!0}else if(K||"undefined"==typeof MutationObserver||!se(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())En="undefined"!=typeof setImmediate&&se(setImmediate)?function(){setImmediate(Mn)}:function(){setTimeout(Mn,0)};else{var Bn=1,Rn=new MutationObserver(Mn),Fn=document.createTextNode(String(Bn));Rn.observe(Fn,{characterData:!0}),En=function(){Bn=(Bn+1)%2,Fn.data=String(Bn)},On=!0}function jn(e,n){var t;if(An.push((function(){if(e)try{e.call(n)}catch(e){Dn(e,n,"nextTick")}else t&&t(n)})),Un||(Un=!0,En()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){t=e}))}function zn(e){return function(n,t){if(void 0===t&&(t=ce),t)return function(e,n,t){var o=e.$options;o[n]=Dt(o[n],t)}(t,e,n)}}zn("beforeMount"),zn("mounted"),zn("beforeUpdate"),zn("updated"),zn("beforeDestroy"),zn("destroyed"),zn("activated"),zn("deactivated"),zn("serverPrefetch"),zn("renderTracked"),zn("renderTriggered"),zn("errorCaptured");var Nn=new le;function Wn(e){return function e(n,t){var o,a,r=i(n);if(!r&&!c(n)||n.__v_skip||Object.isFrozen(n)||n instanceof ue)return;if(n.__ob__){var s=n.__ob__.dep.id;if(t.has(s))return;t.add(s)}if(r)for(o=n.length;o--;)e(n[o],t);else if(Fe(n))e(n.value,t);else for(a=Object.keys(n),o=a.length;o--;)e(n[a[o]],t)}(e,Nn),Nn.clear(),e}var $n,Gn=0,qn=function(){function e(e,n,t,o,i){var a,r;a=this,void 0===(r=ze&&!ze._vm?ze:e?e._scope:void 0)&&(r=ze),r&&r.active&&r.effects.push(a),(this.vm=e)&&i&&(e._watcher=this),o?(this.deep=!!o.deep,this.user=!!o.user,this.lazy=!!o.lazy,this.sync=!!o.sync,this.before=o.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=t,this.id=++Gn,this.active=!0,this.post=!1,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new le,this.newDepIds=new le,this.expression="",d(n)?this.getter=n:(this.getter=function(e){if(!H.test(e)){var n=e.split(".");return function(e){for(var t=0;t<n.length;t++){if(!e)return;e=e[n[t]]}return e}}}(n),this.getter||(this.getter=U)),this.value=this.lazy?void 0:this.get()}return e.prototype.get=function(){var e;we(this);var n=this.vm;try{e=this.getter.call(n,n)}catch(e){if(!this.user)throw e;Dn(e,n,'getter for watcher "'.concat(this.expression,'"'))}finally{this.deep&&Wn(e),Se(),this.cleanupDeps()}return e},e.prototype.addDep=function(e){var n=e.id;this.newDepIds.has(n)||(this.newDepIds.add(n),this.newDeps.push(e),this.depIds.has(n)||e.addSub(this))},e.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var n=this.deps[e];this.newDepIds.has(n.id)||n.removeSub(this)}var t=this.depIds;this.depIds=this.newDepIds,this.newDepIds=t,this.newDepIds.clear(),t=this.deps,this.deps=this.newDeps,this.newDeps=t,this.newDeps.length=0},e.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():ut(this)},e.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||c(e)||this.deep){var n=this.value;if(this.value=e,this.user){var t='callback for watcher "'.concat(this.expression,'"');Pn(this.cb,this.vm,[e,n],this.vm,t)}else this.cb.call(this.vm,e,n)}}},e.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},e.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},e.prototype.teardown=function(){if(this.vm&&!this.vm._isBeingDestroyed&&w(this.vm._scope.effects,this),this.active){for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1,this.onStop&&this.onStop()}},e}();function Hn(e,n){$n.$on(e,n)}function Xn(e,n){$n.$off(e,n)}function Vn(e,n){var t=$n;return function o(){var i=n.apply(null,arguments);null!==i&&t.$off(e,o)}}function Yn(e,n,t){$n=e,qe(n,t||{},Hn,Xn,Vn,e),$n=void 0}var Kn=null;function Zn(e){var n=Kn;return Kn=e,function(){Kn=n}}function Qn(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function Jn(e,n){if(n){if(e._directInactive=!1,Qn(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var t=0;t<e.$children.length;t++)Jn(e.$children[t]);et(e,"activated")}}function et(e,n,t,o){void 0===o&&(o=!0),we();var i=ce;o&&he(e);var a=e.$options[n],r="".concat(n," hook");if(a)for(var s=0,l=a.length;s<l;s++)Pn(a[s],e,t||null,e,r);e._hasHookEvent&&e.$emit("hook:"+n),o&&he(i),Se()}var nt=[],tt=[],ot={},it=!1,at=!1,rt=0;var st=0,lt=Date.now;if(V&&!K){var dt=window.performance;dt&&"function"==typeof dt.now&&lt()>document.createEvent("Event").timeStamp&&(lt=function(){return dt.now()})}var ct=function(e,n){if(e.post){if(!n.post)return 1}else if(n.post)return-1;return e.id-n.id};function ht(){var e,n;for(st=lt(),at=!0,nt.sort(ct),rt=0;rt<nt.length;rt++)(e=nt[rt]).before&&e.before(),n=e.id,ot[n]=null,e.run();var t=tt.slice(),o=nt.slice();rt=nt.length=tt.length=0,ot={},it=at=!1,function(e){for(var n=0;n<e.length;n++)e[n]._inactive=!0,Jn(e[n],!0)}(t),function(e){var n=e.length;for(;n--;){var t=e[n],o=t.vm;o&&o._watcher===t&&o._isMounted&&!o._isDestroyed&&et(o,"updated")}}(o),function(){for(var e=0;e<ye.length;e++){var n=ye[e];n.subs=n.subs.filter((function(e){return e})),n._pending=!1}ye.length=0}(),re&&W.devtools&&re.emit("flush")}function ut(e){var n=e.id;if(null==ot[n]&&(e!==ve.target||!e.noRecurse)){if(ot[n]=!0,at){for(var t=nt.length-1;t>rt&&nt[t].id>e.id;)t--;nt.splice(t+1,0,e)}else nt.push(e);it||(it=!0,jn(ht))}}function pt(e,n){if(e){for(var t=Object.create(null),o=de?Reflect.ownKeys(e):Object.keys(e),i=0;i<o.length;i++){var a=o[i];if("__ob__"!==a){var r=e[a].from;if(r in n._provided)t[a]=n._provided[r];else if("default"in e[a]){var s=e[a].default;t[a]=d(s)?s.call(n):s}else 0}}return t}}function ft(e,n,t,a,r){var l,d=this,c=r.options;k(a,"_uid")?(l=Object.create(a))._original=a:(l=a,a=a._original);var h=s(c._compiled),u=!h;this.data=e,this.props=n,this.children=t,this.parent=a,this.listeners=e.on||o,this.injections=pt(c.inject,a),this.slots=function(){return d.$slots||mn(a,e.scopedSlots,d.$slots=un(t,a)),d.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return mn(a,e.scopedSlots,this.slots())}}),h&&(this.$options=c,this.$slots=this.slots(),this.$scopedSlots=mn(a,e.scopedSlots,this.$slots)),c._scopeId?this._c=function(e,n,t,o){var r=Cn(l,e,n,t,o,u);return r&&!i(r)&&(r.fnScopeId=c._scopeId,r.fnContext=a),r}:this._c=function(e,n,t,o){return Cn(l,e,n,t,o,u)}}function mt(e,n,t,o,i){var a=me(e);return a.fnContext=t,a.fnOptions=o,n.slot&&((a.data||(a.data={})).slot=n.slot),a}function gt(e,n){for(var t in n)e[C(t)]=n[t]}function yt(e){return e.name||e.__name||e._componentTag}hn(ft.prototype);var vt={init:function(e,n){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var t=e;vt.prepatch(t,t)}else{(e.componentInstance=function(e,n){var t={_isComponent:!0,_parentVnode:e,parent:n},o=e.data.inlineTemplate;r(o)&&(t.render=o.render,t.staticRenderFns=o.staticRenderFns);return new e.componentOptions.Ctor(t)}(e,Kn)).$mount(n?e.elm:void 0,n)}},prepatch:function(e,n){var t=n.componentOptions;!function(e,n,t,i,a){var r=i.data.scopedSlots,s=e.$scopedSlots,l=!!(r&&!r.$stable||s!==o&&!s.$stable||r&&e.$scopedSlots.$key!==r.$key||!r&&e.$scopedSlots.$key),d=!!(a||e.$options._renderChildren||l),c=e.$vnode;e.$options._parentVnode=i,e.$vnode=i,e._vnode&&(e._vnode.parent=i),e.$options._renderChildren=a;var h=i.data.attrs||o;e._attrsProxy&&bn(e._attrsProxy,h,c.data&&c.data.attrs||o,e,"$attrs")&&(d=!0),e.$attrs=h,t=t||o;var u=e.$options._parentListeners;if(e._listenersProxy&&bn(e._listenersProxy,t,u||o,e,"$listeners"),e.$listeners=e.$options._parentListeners=t,Yn(e,t,u),n&&e.$options.props){Pe(!1);for(var p=e._props,f=e.$options._propKeys||[],m=0;m<f.length;m++){var g=f[m],y=e.$options.props;p[g]=Ot(g,y,n,e)}Pe(!0),e.$options.propsData=n}d&&(e.$slots=un(a,i.context),e.$forceUpdate())}(n.componentInstance=e.componentInstance,t.propsData,t.listeners,n,t.children)},insert:function(e){var n,t=e.context,o=e.componentInstance;o._isMounted||(o._isMounted=!0,et(o,"mounted")),e.data.keepAlive&&(t._isMounted?((n=o)._inactive=!1,tt.push(n)):Jn(o,!0))},destroy:function(e){var n=e.componentInstance;n._isDestroyed||(e.data.keepAlive?function e(n,t){if(!(t&&(n._directInactive=!0,Qn(n))||n._inactive)){n._inactive=!0;for(var o=0;o<n.$children.length;o++)e(n.$children[o]);et(n,"deactivated")}}(n,!0):n.$destroy())}},bt=Object.keys(vt);function wt(e,n,t,l,d){if(!a(e)){var h=t.$options._base;if(c(e)&&(e=h.extend(e)),"function"==typeof e){var u;if(a(e.cid)&&void 0===(e=function(e,n){if(s(e.error)&&r(e.errorComp))return e.errorComp;if(r(e.resolved))return e.resolved;var t=kn;if(t&&r(e.owners)&&-1===e.owners.indexOf(t)&&e.owners.push(t),s(e.loading)&&r(e.loadingComp))return e.loadingComp;if(t&&!r(e.owners)){var o=e.owners=[t],i=!0,l=null,d=null;t.$on("hook:destroyed",(function(){return w(o,t)}));var h=function(e){for(var n=0,t=o.length;n<t;n++)o[n].$forceUpdate();e&&(o.length=0,null!==l&&(clearTimeout(l),l=null),null!==d&&(clearTimeout(d),d=null))},u=F((function(t){e.resolved=Tn(t,n),i?o.length=0:h(!0)})),p=F((function(n){r(e.errorComp)&&(e.error=!0,h(!0))})),f=e(u,p);return c(f)&&(m(f)?a(e.resolved)&&f.then(u,p):m(f.component)&&(f.component.then(u,p),r(f.error)&&(e.errorComp=Tn(f.error,n)),r(f.loading)&&(e.loadingComp=Tn(f.loading,n),0===f.delay?e.loading=!0:l=setTimeout((function(){l=null,a(e.resolved)&&a(e.error)&&(e.loading=!0,h(!1))}),f.delay||200)),r(f.timeout)&&(d=setTimeout((function(){d=null,a(e.resolved)&&p(null)}),f.timeout)))),i=!1,e.loading?e.loadingComp:e.resolved}}(u=e,h)))return function(e,n,t,o,i){var a=pe();return a.asyncFactory=e,a.asyncMeta={data:n,context:t,children:o,tag:i},a}(u,n,t,l,d);n=n||{},qt(e),r(n.model)&&function(e,n){var t=e.model&&e.model.prop||"value",o=e.model&&e.model.event||"input";(n.attrs||(n.attrs={}))[t]=n.model.value;var a=n.on||(n.on={}),s=a[o],l=n.model.callback;r(s)?(i(s)?-1===s.indexOf(l):s!==l)&&(a[o]=[l].concat(s)):a[o]=l}(e.options,n);var p=function(e,n,t){var o=n.options.props;if(!a(o)){var i={},s=e.attrs,l=e.props;if(r(s)||r(l))for(var d in o){var c=I(d);Xe(i,l,d,c,!0)||Xe(i,s,d,c,!1)}return i}}(n,e);if(s(e.options.functional))return function(e,n,t,a,s){var l=e.options,d={},c=l.props;if(r(c))for(var h in c)d[h]=Ot(h,c,n||o);else r(t.attrs)&&gt(d,t.attrs),r(t.props)&&gt(d,t.props);var u=new ft(t,d,s,a,e),p=l.render.call(null,u._c,u);if(p instanceof ue)return mt(p,t,u.parent,l,u);if(i(p)){for(var f=Ve(p)||[],m=new Array(f.length),g=0;g<f.length;g++)m[g]=mt(f[g],t,u.parent,l,u);return m}}(e,p,n,t,l);var f=n.on;if(n.on=n.nativeOn,s(e.options.abstract)){var g=n.slot;n={},g&&(n.slot=g)}!function(e){for(var n=e.hook||(e.hook={}),t=0;t<bt.length;t++){var o=bt[t],i=n[o],a=vt[o];i===a||i&&i._merged||(n[o]=i?St(a,i):a)}}(n);var y=yt(e.options)||d;return new ue("vue-component-".concat(e.cid).concat(y?"-".concat(y):""),n,void 0,void 0,void 0,t,{Ctor:e,propsData:p,listeners:f,tag:d,children:l},u)}}}function St(e,n){var t=function(t,o){e(t,o),n(t,o)};return t._merged=!0,t}var kt=U,Tt=W.optionMergeStrategies;function xt(e,n,t){if(void 0===t&&(t=!0),!n)return e;for(var o,i,a,r=de?Reflect.ownKeys(n):Object.keys(n),s=0;s<r.length;s++)"__ob__"!==(o=r[s])&&(i=e[o],a=n[o],t&&k(e,o)?i!==a&&u(i)&&u(a)&&xt(i,a):Ae(e,o,a));return e}function Ct(e,n,t){return t?function(){var o=d(n)?n.call(t,t):n,i=d(e)?e.call(t,t):e;return o?xt(o,i):i}:n?e?function(){return xt(d(n)?n.call(this,this):n,d(e)?e.call(this,this):e)}:n:e}function Dt(e,n){var t=n?e?e.concat(n):i(n)?n:[n]:e;return t?function(e){for(var n=[],t=0;t<e.length;t++)-1===n.indexOf(e[t])&&n.push(e[t]);return n}(t):t}function Pt(e,n,t,o){var i=Object.create(e||null);return n?O(i,n):i}Tt.data=function(e,n,t){return t?Ct(e,n,t):n&&"function"!=typeof n?e:Ct(e,n)},N.forEach((function(e){Tt[e]=Dt})),z.forEach((function(e){Tt[e+"s"]=Pt})),Tt.watch=function(e,n,t,o){if(e===te&&(e=void 0),n===te&&(n=void 0),!n)return Object.create(e||null);if(!e)return n;var a={};for(var r in O(a,e),n){var s=a[r],l=n[r];s&&!i(s)&&(s=[s]),a[r]=s?s.concat(l):i(l)?l:[l]}return a},Tt.props=Tt.methods=Tt.inject=Tt.computed=function(e,n,t,o){if(!e)return n;var i=Object.create(null);return O(i,e),n&&O(i,n),i},Tt.provide=function(e,n){return e?function(){var t=Object.create(null);return xt(t,d(e)?e.call(this):e),n&&xt(t,d(n)?n.call(this):n,!1),t}:n};var It=function(e,n){return void 0===n?e:n};function _t(e,n,t){if(d(n)&&(n=n.options),function(e,n){var t=e.props;if(t){var o,a,r={};if(i(t))for(o=t.length;o--;)"string"==typeof(a=t[o])&&(r[C(a)]={type:null});else if(u(t))for(var s in t)a=t[s],r[C(s)]=u(a)?a:{type:a};else 0;e.props=r}}(n),function(e,n){var t=e.inject;if(t){var o=e.inject={};if(i(t))for(var a=0;a<t.length;a++)o[t[a]]={from:t[a]};else if(u(t))for(var r in t){var s=t[r];o[r]=u(s)?O({from:r},s):{from:s}}else 0}}(n),function(e){var n=e.directives;if(n)for(var t in n){var o=n[t];d(o)&&(n[t]={bind:o,update:o})}}(n),!n._base&&(n.extends&&(e=_t(e,n.extends,t)),n.mixins))for(var o=0,a=n.mixins.length;o<a;o++)e=_t(e,n.mixins[o],t);var r,s={};for(r in e)l(r);for(r in n)k(e,r)||l(r);function l(o){var i=Tt[o]||It;s[o]=i(e[o],n[o],t,o)}return s}function Et(e,n,t,o){if("string"==typeof t){var i=e[n];if(k(i,t))return i[t];var a=C(t);if(k(i,a))return i[a];var r=D(a);return k(i,r)?i[r]:i[t]||i[a]||i[r]}}function Ot(e,n,t,o){var i=n[e],a=!k(t,e),r=t[e],s=Lt(Boolean,i.type);if(s>-1)if(a&&!k(i,"default"))r=!1;else if(""===r||r===I(e)){var l=Lt(String,i.type);(l<0||s<l)&&(r=!0)}if(void 0===r){r=function(e,n,t){if(!k(n,"default"))return;var o=n.default;0;if(e&&e.$options.propsData&&void 0===e.$options.propsData[t]&&void 0!==e._props[t])return e._props[t];return d(o)&&"Function"!==Ut(n.type)?o.call(e):o}(o,i,e);var c=De;Pe(!0),Ee(r),Pe(c)}return r}var At=/^\s*function (\w+)/;function Ut(e){var n=e&&e.toString().match(At);return n?n[1]:""}function Mt(e,n){return Ut(e)===Ut(n)}function Lt(e,n){if(!i(n))return Mt(n,e)?0:-1;for(var t=0,o=n.length;t<o;t++)if(Mt(n[t],e))return t;return-1}var Bt={enumerable:!0,configurable:!0,get:U,set:U};function Rt(e,n,t){Bt.get=function(){return this[n][t]},Bt.set=function(e){this[n][t]=e},Object.defineProperty(e,t,Bt)}function Ft(e){var n=e.$options;if(n.props&&function(e,n){var t=e.$options.propsData||{},o=e._props=Le({}),i=e.$options._propKeys=[];e.$parent&&Pe(!1);var a=function(a){i.push(a);var r=Ot(a,n,t,e);Oe(o,a,r),a in e||Rt(e,"_props",a)};for(var r in n)a(r);Pe(!0)}(e,n.props),function(e){var n=e.$options,t=n.setup;if(t){var o=e._setupContext=vn(e);he(e),we();var i=Pn(t,null,[e._props||Le({}),o],e,"setup");if(Se(),he(),d(i))n.render=i;else if(c(i))if(e._setupState=i,i.__sfc){var a=e._setupProxy={};for(var r in i)"__sfc"!==r&&je(a,i,r)}else for(var r in i)G(r)||je(e,i,r);else 0}}(e),n.methods&&function(e,n){e.$options.props;for(var t in n)e[t]="function"!=typeof n[t]?U:_(n[t],e)}(e,n.methods),n.data)!function(e){var n=e.$options.data;u(n=e._data=d(n)?function(e,n){we();try{return e.call(n,n)}catch(e){return Dn(e,n,"data()"),{}}finally{Se()}}(n,e):n||{})||(n={});var t=Object.keys(n),o=e.$options.props,i=(e.$options.methods,t.length);for(;i--;){var a=t[i];0,o&&k(o,a)||G(a)||Rt(e,"_data",a)}var r=Ee(n);r&&r.vmCount++}(e);else{var t=Ee(e._data={});t&&t.vmCount++}n.computed&&function(e,n){var t=e._computedWatchers=Object.create(null),o=ae();for(var i in n){var a=n[i],r=d(a)?a:a.get;0,o||(t[i]=new qn(e,r||U,U,jt)),i in e||zt(e,i,a)}}(e,n.computed),n.watch&&n.watch!==te&&function(e,n){for(var t in n){var o=n[t];if(i(o))for(var a=0;a<o.length;a++)$t(e,t,o[a]);else $t(e,t,o)}}(e,n.watch)}var jt={lazy:!0};function zt(e,n,t){var o=!ae();d(t)?(Bt.get=o?Nt(n):Wt(t),Bt.set=U):(Bt.get=t.get?o&&!1!==t.cache?Nt(n):Wt(t.get):U,Bt.set=t.set||U),Object.defineProperty(e,n,Bt)}function Nt(e){return function(){var n=this._computedWatchers&&this._computedWatchers[e];if(n)return n.dirty&&n.evaluate(),ve.target&&n.depend(),n.value}}function Wt(e){return function(){return e.call(this,this)}}function $t(e,n,t,o){return u(t)&&(o=t,t=t.handler),"string"==typeof t&&(t=e[t]),e.$watch(n,t,o)}var Gt=0;function qt(e){var n=e.options;if(e.super){var t=qt(e.super);if(t!==e.superOptions){e.superOptions=t;var o=function(e){var n,t=e.options,o=e.sealedOptions;for(var i in t)t[i]!==o[i]&&(n||(n={}),n[i]=t[i]);return n}(e);o&&O(e.extendOptions,o),(n=e.options=_t(t,e.extendOptions)).name&&(n.components[n.name]=e)}}return n}function Ht(e){this._init(e)}function Xt(e){e.cid=0;var n=1;e.extend=function(e){e=e||{};var t=this,o=t.cid,i=e._Ctor||(e._Ctor={});if(i[o])return i[o];var a=yt(e)||yt(t.options);var r=function(e){this._init(e)};return(r.prototype=Object.create(t.prototype)).constructor=r,r.cid=n++,r.options=_t(t.options,e),r.super=t,r.options.props&&function(e){var n=e.options.props;for(var t in n)Rt(e.prototype,"_props",t)}(r),r.options.computed&&function(e){var n=e.options.computed;for(var t in n)zt(e.prototype,t,n[t])}(r),r.extend=t.extend,r.mixin=t.mixin,r.use=t.use,z.forEach((function(e){r[e]=t[e]})),a&&(r.options.components[a]=r),r.superOptions=t.options,r.extendOptions=e,r.sealedOptions=O({},r.options),i[o]=r,r}}function Vt(e){return e&&(yt(e.Ctor.options)||e.tag)}function Yt(e,n){return i(e)?e.indexOf(n)>-1:"string"==typeof e?e.split(",").indexOf(n)>-1:!!p(e)&&e.test(n)}function Kt(e,n){var t=e.cache,o=e.keys,i=e._vnode;for(var a in t){var r=t[a];if(r){var s=r.name;s&&!n(s)&&Zt(t,a,o,i)}}}function Zt(e,n,t,o){var i=e[n];!i||o&&i.tag===o.tag||i.componentInstance.$destroy(),e[n]=null,w(t,n)}Ht.prototype._init=function(e){var n=this;n._uid=Gt++,n._isVue=!0,n.__v_skip=!0,n._scope=new Ne(!0),n._scope._vm=!0,e&&e._isComponent?function(e,n){var t=e.$options=Object.create(e.constructor.options),o=n._parentVnode;t.parent=n.parent,t._parentVnode=o;var i=o.componentOptions;t.propsData=i.propsData,t._parentListeners=i.listeners,t._renderChildren=i.children,t._componentTag=i.tag,n.render&&(t.render=n.render,t.staticRenderFns=n.staticRenderFns)}(n,e):n.$options=_t(qt(n.constructor),e||{},n),n._renderProxy=n,n._self=n,function(e){var n=e.$options,t=n.parent;if(t&&!n.abstract){for(;t.$options.abstract&&t.$parent;)t=t.$parent;t.$children.push(e)}e.$parent=t,e.$root=t?t.$root:e,e.$children=[],e.$refs={},e._provided=t?t._provided:Object.create(null),e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(n),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var n=e.$options._parentListeners;n&&Yn(e,n)}(n),function(e){e._vnode=null,e._staticTrees=null;var n=e.$options,t=e.$vnode=n._parentVnode,i=t&&t.context;e.$slots=un(n._renderChildren,i),e.$scopedSlots=t?mn(e.$parent,t.data.scopedSlots,e.$slots):o,e._c=function(n,t,o,i){return Cn(e,n,t,o,i,!1)},e.$createElement=function(n,t,o,i){return Cn(e,n,t,o,i,!0)};var a=t&&t.data;Oe(e,"$attrs",a&&a.attrs||o,null,!0),Oe(e,"$listeners",n._parentListeners||o,null,!0)}(n),et(n,"beforeCreate",void 0,!1),function(e){var n=pt(e.$options.inject,e);n&&(Pe(!1),Object.keys(n).forEach((function(t){Oe(e,t,n[t])})),Pe(!0))}(n),Ft(n),function(e){var n=e.$options.provide;if(n){var t=d(n)?n.call(e):n;if(!c(t))return;for(var o=We(e),i=de?Reflect.ownKeys(t):Object.keys(t),a=0;a<i.length;a++){var r=i[a];Object.defineProperty(o,r,Object.getOwnPropertyDescriptor(t,r))}}}(n),et(n,"created"),n.$options.el&&n.$mount(n.$options.el)},function(e){var n={get:function(){return this._data}},t={get:function(){return this._props}};Object.defineProperty(e.prototype,"$data",n),Object.defineProperty(e.prototype,"$props",t),e.prototype.$set=Ae,e.prototype.$delete=Ue,e.prototype.$watch=function(e,n,t){if(u(n))return $t(this,e,n,t);(t=t||{}).user=!0;var o=new qn(this,e,n,t);if(t.immediate){var i='callback for immediate watcher "'.concat(o.expression,'"');we(),Pn(n,this,[o.value],this,i),Se()}return function(){o.teardown()}}}(Ht),function(e){var n=/^hook:/;e.prototype.$on=function(e,t){var o=this;if(i(e))for(var a=0,r=e.length;a<r;a++)o.$on(e[a],t);else(o._events[e]||(o._events[e]=[])).push(t),n.test(e)&&(o._hasHookEvent=!0);return o},e.prototype.$once=function(e,n){var t=this;function o(){t.$off(e,o),n.apply(t,arguments)}return o.fn=n,t.$on(e,o),t},e.prototype.$off=function(e,n){var t=this;if(!arguments.length)return t._events=Object.create(null),t;if(i(e)){for(var o=0,a=e.length;o<a;o++)t.$off(e[o],n);return t}var r,s=t._events[e];if(!s)return t;if(!n)return t._events[e]=null,t;for(var l=s.length;l--;)if((r=s[l])===n||r.fn===n){s.splice(l,1);break}return t},e.prototype.$emit=function(e){var n=this,t=n._events[e];if(t){t=t.length>1?E(t):t;for(var o=E(arguments,1),i='event handler for "'.concat(e,'"'),a=0,r=t.length;a<r;a++)Pn(t[a],n,o,n,i)}return n}}(Ht),function(e){e.prototype._update=function(e,n){var t=this,o=t.$el,i=t._vnode,a=Zn(t);t._vnode=e,t.$el=i?t.__patch__(i,e):t.__patch__(t.$el,e,n,!1),a(),o&&(o.__vue__=null),t.$el&&(t.$el.__vue__=t);for(var r=t;r&&r.$vnode&&r.$parent&&r.$vnode===r.$parent._vnode;)r.$parent.$el=r.$el,r=r.$parent},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){et(e,"beforeDestroy"),e._isBeingDestroyed=!0;var n=e.$parent;!n||n._isBeingDestroyed||e.$options.abstract||w(n.$children,e),e._scope.stop(),e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),et(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(Ht),function(e){hn(e.prototype),e.prototype.$nextTick=function(e){return jn(e,this)},e.prototype._render=function(){var e,n=this,t=n.$options,o=t.render,a=t._parentVnode;a&&n._isMounted&&(n.$scopedSlots=mn(n.$parent,a.data.scopedSlots,n.$slots,n.$scopedSlots),n._slotsProxy&&Sn(n._slotsProxy,n.$scopedSlots)),n.$vnode=a;try{he(n),kn=n,e=o.call(n._renderProxy,n.$createElement)}catch(t){Dn(t,n,"render"),e=n._vnode}finally{kn=null,he()}return i(e)&&1===e.length&&(e=e[0]),e instanceof ue||(e=pe()),e.parent=a,e}}(Ht);var Qt=[String,RegExp,Array],Jt={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Qt,exclude:Qt,max:[String,Number]},methods:{cacheVNode:function(){var e=this.cache,n=this.keys,t=this.vnodeToCache,o=this.keyToCache;if(t){var i=t.tag,a=t.componentInstance,r=t.componentOptions;e[o]={name:Vt(r),tag:i,componentInstance:a},n.push(o),this.max&&n.length>parseInt(this.max)&&Zt(e,n[0],n,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)Zt(this.cache,e,this.keys)},mounted:function(){var e=this;this.cacheVNode(),this.$watch("include",(function(n){Kt(e,(function(e){return Yt(n,e)}))})),this.$watch("exclude",(function(n){Kt(e,(function(e){return!Yt(n,e)}))}))},updated:function(){this.cacheVNode()},render:function(){var e=this.$slots.default,n=xn(e),t=n&&n.componentOptions;if(t){var o=Vt(t),i=this.include,a=this.exclude;if(i&&(!o||!Yt(i,o))||a&&o&&Yt(a,o))return n;var r=this.cache,s=this.keys,l=null==n.key?t.Ctor.cid+(t.tag?"::".concat(t.tag):""):n.key;r[l]?(n.componentInstance=r[l].componentInstance,w(s,l),s.push(l)):(this.vnodeToCache=n,this.keyToCache=l),n.data.keepAlive=!0}return n||e&&e[0]}}};!function(e){var n={get:function(){return W}};Object.defineProperty(e,"config",n),e.util={warn:kt,extend:O,mergeOptions:_t,defineReactive:Oe},e.set=Ae,e.delete=Ue,e.nextTick=jn,e.observable=function(e){return Ee(e),e},e.options=Object.create(null),z.forEach((function(n){e.options[n+"s"]=Object.create(null)})),e.options._base=e,O(e.options.components,Jt),function(e){e.use=function(e){var n=this._installedPlugins||(this._installedPlugins=[]);if(n.indexOf(e)>-1)return this;var t=E(arguments,1);return t.unshift(this),d(e.install)?e.install.apply(e,t):d(e)&&e.apply(null,t),n.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=_t(this.options,e),this}}(e),Xt(e),function(e){z.forEach((function(n){e[n]=function(e,t){return t?("component"===n&&u(t)&&(t.name=t.name||e,t=this.options._base.extend(t)),"directive"===n&&d(t)&&(t={bind:t,update:t}),this.options[n+"s"][e]=t,t):this.options[n+"s"][e]}}))}(e)}(Ht),Object.defineProperty(Ht.prototype,"$isServer",{get:ae}),Object.defineProperty(Ht.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Ht,"FunctionalRenderContext",{value:ft}),Ht.version="2.7.14";var eo=v("style,class"),no=v("input,textarea,option,select,progress"),to=v("contenteditable,draggable,spellcheck"),oo=v("events,caret,typing,plaintext-only"),io=v("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),ao="http://www.w3.org/1999/xlink",ro=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},so=function(e){return ro(e)?e.slice(6,e.length):""},lo=function(e){return null==e||!1===e};function co(e){for(var n=e.data,t=e,o=e;r(o.componentInstance);)(o=o.componentInstance._vnode)&&o.data&&(n=ho(o.data,n));for(;r(t=t.parent);)t&&t.data&&(n=ho(n,t.data));return function(e,n){if(r(e)||r(n))return uo(e,po(n));return""}(n.staticClass,n.class)}function ho(e,n){return{staticClass:uo(e.staticClass,n.staticClass),class:r(e.class)?[e.class,n.class]:n.class}}function uo(e,n){return e?n?e+" "+n:e:n||""}function po(e){return Array.isArray(e)?function(e){for(var n,t="",o=0,i=e.length;o<i;o++)r(n=po(e[o]))&&""!==n&&(t&&(t+=" "),t+=n);return t}(e):c(e)?function(e){var n="";for(var t in e)e[t]&&(n&&(n+=" "),n+=t);return n}(e):"string"==typeof e?e:""}var fo={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},mo=v("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),go=v("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),yo=function(e){return mo(e)||go(e)};var vo=Object.create(null);var bo=v("text,number,password,search,email,tel,url");var wo=Object.freeze({__proto__:null,createElement:function(e,n){var t=document.createElement(e);return"select"!==e||n.data&&n.data.attrs&&void 0!==n.data.attrs.multiple&&t.setAttribute("multiple","multiple"),t},createElementNS:function(e,n){return document.createElementNS(fo[e],n)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,n,t){e.insertBefore(n,t)},removeChild:function(e,n){e.removeChild(n)},appendChild:function(e,n){e.appendChild(n)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,n){e.textContent=n},setStyleScope:function(e,n){e.setAttribute(n,"")}}),So={create:function(e,n){ko(n)},update:function(e,n){e.data.ref!==n.data.ref&&(ko(e,!0),ko(n))},destroy:function(e){ko(e,!0)}};function ko(e,n){var t=e.data.ref;if(r(t)){var o=e.context,a=e.componentInstance||e.elm,s=n?null:a,l=n?void 0:a;if(d(t))Pn(t,o,[s],o,"template ref function");else{var c=e.data.refInFor,h="string"==typeof t||"number"==typeof t,u=Fe(t),p=o.$refs;if(h||u)if(c){var f=h?p[t]:t.value;n?i(f)&&w(f,a):i(f)?f.includes(a)||f.push(a):h?(p[t]=[a],To(o,t,p[t])):t.value=[a]}else if(h){if(n&&p[t]!==a)return;p[t]=l,To(o,t,s)}else if(u){if(n&&t.value!==a)return;t.value=s}else 0}}}function To(e,n,t){var o=e._setupState;o&&k(o,n)&&(Fe(o[n])?o[n].value=t:o[n]=t)}var xo=new ue("",{},[]),Co=["create","activate","update","remove","destroy"];function Do(e,n){return e.key===n.key&&e.asyncFactory===n.asyncFactory&&(e.tag===n.tag&&e.isComment===n.isComment&&r(e.data)===r(n.data)&&function(e,n){if("input"!==e.tag)return!0;var t,o=r(t=e.data)&&r(t=t.attrs)&&t.type,i=r(t=n.data)&&r(t=t.attrs)&&t.type;return o===i||bo(o)&&bo(i)}(e,n)||s(e.isAsyncPlaceholder)&&a(n.asyncFactory.error))}function Po(e,n,t){var o,i,a={};for(o=n;o<=t;++o)r(i=e[o].key)&&(a[i]=o);return a}var Io={create:_o,update:_o,destroy:function(e){_o(e,xo)}};function _o(e,n){(e.data.directives||n.data.directives)&&function(e,n){var t,o,i,a=e===xo,r=n===xo,s=Oo(e.data.directives,e.context),l=Oo(n.data.directives,n.context),d=[],c=[];for(t in l)o=s[t],i=l[t],o?(i.oldValue=o.value,i.oldArg=o.arg,Uo(i,"update",n,e),i.def&&i.def.componentUpdated&&c.push(i)):(Uo(i,"bind",n,e),i.def&&i.def.inserted&&d.push(i));if(d.length){var h=function(){for(var t=0;t<d.length;t++)Uo(d[t],"inserted",n,e)};a?He(n,"insert",h):h()}c.length&&He(n,"postpatch",(function(){for(var t=0;t<c.length;t++)Uo(c[t],"componentUpdated",n,e)}));if(!a)for(t in s)l[t]||Uo(s[t],"unbind",e,e,r)}(e,n)}var Eo=Object.create(null);function Oo(e,n){var t,o,i=Object.create(null);if(!e)return i;for(t=0;t<e.length;t++){if((o=e[t]).modifiers||(o.modifiers=Eo),i[Ao(o)]=o,n._setupState&&n._setupState.__sfc){var a=o.def||Et(n,"_setupState","v-"+o.name);o.def="function"==typeof a?{bind:a,update:a}:a}o.def=o.def||Et(n.$options,"directives",o.name)}return i}function Ao(e){return e.rawName||"".concat(e.name,".").concat(Object.keys(e.modifiers||{}).join("."))}function Uo(e,n,t,o,i){var a=e.def&&e.def[n];if(a)try{a(t.elm,e,t,o,i)}catch(o){Dn(o,t.context,"directive ".concat(e.name," ").concat(n," hook"))}}var Mo=[So,Io];function Lo(e,n){var t=n.componentOptions;if(!(r(t)&&!1===t.Ctor.options.inheritAttrs||a(e.data.attrs)&&a(n.data.attrs))){var o,i,l=n.elm,d=e.data.attrs||{},c=n.data.attrs||{};for(o in(r(c.__ob__)||s(c._v_attr_proxy))&&(c=n.data.attrs=O({},c)),c)i=c[o],d[o]!==i&&Bo(l,o,i,n.data.pre);for(o in(K||Q)&&c.value!==d.value&&Bo(l,"value",c.value),d)a(c[o])&&(ro(o)?l.removeAttributeNS(ao,so(o)):to(o)||l.removeAttribute(o))}}function Bo(e,n,t,o){o||e.tagName.indexOf("-")>-1?Ro(e,n,t):io(n)?lo(t)?e.removeAttribute(n):(t="allowfullscreen"===n&&"EMBED"===e.tagName?"true":n,e.setAttribute(n,t)):to(n)?e.setAttribute(n,function(e,n){return lo(n)||"false"===n?"false":"contenteditable"===e&&oo(n)?n:"true"}(n,t)):ro(n)?lo(t)?e.removeAttributeNS(ao,so(n)):e.setAttributeNS(ao,n,t):Ro(e,n,t)}function Ro(e,n,t){if(lo(t))e.removeAttribute(n);else{if(K&&!Z&&"TEXTAREA"===e.tagName&&"placeholder"===n&&""!==t&&!e.__ieph){var o=function(n){n.stopImmediatePropagation(),e.removeEventListener("input",o)};e.addEventListener("input",o),e.__ieph=!0}e.setAttribute(n,t)}}var Fo={create:Lo,update:Lo};function jo(e,n){var t=n.elm,o=n.data,i=e.data;if(!(a(o.staticClass)&&a(o.class)&&(a(i)||a(i.staticClass)&&a(i.class)))){var s=co(n),l=t._transitionClasses;r(l)&&(s=uo(s,po(l))),s!==t._prevClass&&(t.setAttribute("class",s),t._prevClass=s)}}var zo,No={create:jo,update:jo};function Wo(e,n,t){var o=zo;return function i(){var a=n.apply(null,arguments);null!==a&&qo(e,i,t,o)}}var $o=On&&!(ne&&Number(ne[1])<=53);function Go(e,n,t,o){if($o){var i=st,a=n;n=a._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=i||e.timeStamp<=0||e.target.ownerDocument!==document)return a.apply(this,arguments)}}zo.addEventListener(e,n,oe?{capture:t,passive:o}:t)}function qo(e,n,t,o){(o||zo).removeEventListener(e,n._wrapper||n,t)}function Ho(e,n){if(!a(e.data.on)||!a(n.data.on)){var t=n.data.on||{},o=e.data.on||{};zo=n.elm||e.elm,function(e){if(r(e.__r)){var n=K?"change":"input";e[n]=[].concat(e.__r,e[n]||[]),delete e.__r}r(e.__c)&&(e.change=[].concat(e.__c,e.change||[]),delete e.__c)}(t),qe(t,o,Go,qo,Wo,n.context),zo=void 0}}var Xo,Vo={create:Ho,update:Ho,destroy:function(e){return Ho(e,xo)}};function Yo(e,n){if(!a(e.data.domProps)||!a(n.data.domProps)){var t,o,i=n.elm,l=e.data.domProps||{},d=n.data.domProps||{};for(t in(r(d.__ob__)||s(d._v_attr_proxy))&&(d=n.data.domProps=O({},d)),l)t in d||(i[t]="");for(t in d){if(o=d[t],"textContent"===t||"innerHTML"===t){if(n.children&&(n.children.length=0),o===l[t])continue;1===i.childNodes.length&&i.removeChild(i.childNodes[0])}if("value"===t&&"PROGRESS"!==i.tagName){i._value=o;var c=a(o)?"":String(o);Ko(i,c)&&(i.value=c)}else if("innerHTML"===t&&go(i.tagName)&&a(i.innerHTML)){(Xo=Xo||document.createElement("div")).innerHTML="<svg>".concat(o,"</svg>");for(var h=Xo.firstChild;i.firstChild;)i.removeChild(i.firstChild);for(;h.firstChild;)i.appendChild(h.firstChild)}else if(o!==l[t])try{i[t]=o}catch(e){}}}}function Ko(e,n){return!e.composing&&("OPTION"===e.tagName||function(e,n){var t=!0;try{t=document.activeElement!==e}catch(e){}return t&&e.value!==n}(e,n)||function(e,n){var t=e.value,o=e._vModifiers;if(r(o)){if(o.number)return y(t)!==y(n);if(o.trim)return t.trim()!==n.trim()}return t!==n}(e,n))}var Zo={create:Yo,update:Yo},Qo=T((function(e){var n={},t=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var o=e.split(t);o.length>1&&(n[o[0].trim()]=o[1].trim())}})),n}));function Jo(e){var n=ei(e.style);return e.staticStyle?O(e.staticStyle,n):n}function ei(e){return Array.isArray(e)?A(e):"string"==typeof e?Qo(e):e}var ni,ti=/^--/,oi=/\s*!important$/,ii=function(e,n,t){if(ti.test(n))e.style.setProperty(n,t);else if(oi.test(t))e.style.setProperty(I(n),t.replace(oi,""),"important");else{var o=ri(n);if(Array.isArray(t))for(var i=0,a=t.length;i<a;i++)e.style[o]=t[i];else e.style[o]=t}},ai=["Webkit","Moz","ms"],ri=T((function(e){if(ni=ni||document.createElement("div").style,"filter"!==(e=C(e))&&e in ni)return e;for(var n=e.charAt(0).toUpperCase()+e.slice(1),t=0;t<ai.length;t++){var o=ai[t]+n;if(o in ni)return o}}));function si(e,n){var t=n.data,o=e.data;if(!(a(t.staticStyle)&&a(t.style)&&a(o.staticStyle)&&a(o.style))){var i,s,l=n.elm,d=o.staticStyle,c=o.normalizedStyle||o.style||{},h=d||c,u=ei(n.data.style)||{};n.data.normalizedStyle=r(u.__ob__)?O({},u):u;var p=function(e,n){var t,o={};if(n)for(var i=e;i.componentInstance;)(i=i.componentInstance._vnode)&&i.data&&(t=Jo(i.data))&&O(o,t);(t=Jo(e.data))&&O(o,t);for(var a=e;a=a.parent;)a.data&&(t=Jo(a.data))&&O(o,t);return o}(n,!0);for(s in h)a(p[s])&&ii(l,s,"");for(s in p)(i=p[s])!==h[s]&&ii(l,s,null==i?"":i)}}var li={create:si,update:si},di=/\s+/;function ci(e,n){if(n&&(n=n.trim()))if(e.classList)n.indexOf(" ")>-1?n.split(di).forEach((function(n){return e.classList.add(n)})):e.classList.add(n);else{var t=" ".concat(e.getAttribute("class")||""," ");t.indexOf(" "+n+" ")<0&&e.setAttribute("class",(t+n).trim())}}function hi(e,n){if(n&&(n=n.trim()))if(e.classList)n.indexOf(" ")>-1?n.split(di).forEach((function(n){return e.classList.remove(n)})):e.classList.remove(n),e.classList.length||e.removeAttribute("class");else{for(var t=" ".concat(e.getAttribute("class")||""," "),o=" "+n+" ";t.indexOf(o)>=0;)t=t.replace(o," ");(t=t.trim())?e.setAttribute("class",t):e.removeAttribute("class")}}function ui(e){if(e){if("object"==typeof e){var n={};return!1!==e.css&&O(n,pi(e.name||"v")),O(n,e),n}return"string"==typeof e?pi(e):void 0}}var pi=T((function(e){return{enterClass:"".concat(e,"-enter"),enterToClass:"".concat(e,"-enter-to"),enterActiveClass:"".concat(e,"-enter-active"),leaveClass:"".concat(e,"-leave"),leaveToClass:"".concat(e,"-leave-to"),leaveActiveClass:"".concat(e,"-leave-active")}})),fi=V&&!Z,mi="transition",gi="transitionend",yi="animation",vi="animationend";fi&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(mi="WebkitTransition",gi="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(yi="WebkitAnimation",vi="webkitAnimationEnd"));var bi=V?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function wi(e){bi((function(){bi(e)}))}function Si(e,n){var t=e._transitionClasses||(e._transitionClasses=[]);t.indexOf(n)<0&&(t.push(n),ci(e,n))}function ki(e,n){e._transitionClasses&&w(e._transitionClasses,n),hi(e,n)}function Ti(e,n,t){var o=Ci(e,n),i=o.type,a=o.timeout,r=o.propCount;if(!i)return t();var s="transition"===i?gi:vi,l=0,d=function(){e.removeEventListener(s,c),t()},c=function(n){n.target===e&&++l>=r&&d()};setTimeout((function(){l<r&&d()}),a+1),e.addEventListener(s,c)}var xi=/\b(transform|all)(,|$)/;function Ci(e,n){var t,o=window.getComputedStyle(e),i=(o[mi+"Delay"]||"").split(", "),a=(o[mi+"Duration"]||"").split(", "),r=Di(i,a),s=(o[yi+"Delay"]||"").split(", "),l=(o[yi+"Duration"]||"").split(", "),d=Di(s,l),c=0,h=0;return"transition"===n?r>0&&(t="transition",c=r,h=a.length):"animation"===n?d>0&&(t="animation",c=d,h=l.length):h=(t=(c=Math.max(r,d))>0?r>d?"transition":"animation":null)?"transition"===t?a.length:l.length:0,{type:t,timeout:c,propCount:h,hasTransform:"transition"===t&&xi.test(o[mi+"Property"])}}function Di(e,n){for(;e.length<n.length;)e=e.concat(e);return Math.max.apply(null,n.map((function(n,t){return Pi(n)+Pi(e[t])})))}function Pi(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function Ii(e,n){var t=e.elm;r(t._leaveCb)&&(t._leaveCb.cancelled=!0,t._leaveCb());var o=ui(e.data.transition);if(!a(o)&&!r(t._enterCb)&&1===t.nodeType){for(var i=o.css,s=o.type,l=o.enterClass,h=o.enterToClass,u=o.enterActiveClass,p=o.appearClass,f=o.appearToClass,m=o.appearActiveClass,g=o.beforeEnter,v=o.enter,b=o.afterEnter,w=o.enterCancelled,S=o.beforeAppear,k=o.appear,T=o.afterAppear,x=o.appearCancelled,C=o.duration,D=Kn,P=Kn.$vnode;P&&P.parent;)D=P.context,P=P.parent;var I=!D._isMounted||!e.isRootInsert;if(!I||k||""===k){var _=I&&p?p:l,E=I&&m?m:u,O=I&&f?f:h,A=I&&S||g,U=I&&d(k)?k:v,M=I&&T||b,L=I&&x||w,B=y(c(C)?C.enter:C);0;var R=!1!==i&&!Z,j=Oi(U),z=t._enterCb=F((function(){R&&(ki(t,O),ki(t,E)),z.cancelled?(R&&ki(t,_),L&&L(t)):M&&M(t),t._enterCb=null}));e.data.show||He(e,"insert",(function(){var n=t.parentNode,o=n&&n._pending&&n._pending[e.key];o&&o.tag===e.tag&&o.elm._leaveCb&&o.elm._leaveCb(),U&&U(t,z)})),A&&A(t),R&&(Si(t,_),Si(t,E),wi((function(){ki(t,_),z.cancelled||(Si(t,O),j||(Ei(B)?setTimeout(z,B):Ti(t,s,z)))}))),e.data.show&&(n&&n(),U&&U(t,z)),R||j||z()}}}function _i(e,n){var t=e.elm;r(t._enterCb)&&(t._enterCb.cancelled=!0,t._enterCb());var o=ui(e.data.transition);if(a(o)||1!==t.nodeType)return n();if(!r(t._leaveCb)){var i=o.css,s=o.type,l=o.leaveClass,d=o.leaveToClass,h=o.leaveActiveClass,u=o.beforeLeave,p=o.leave,f=o.afterLeave,m=o.leaveCancelled,g=o.delayLeave,v=o.duration,b=!1!==i&&!Z,w=Oi(p),S=y(c(v)?v.leave:v);0;var k=t._leaveCb=F((function(){t.parentNode&&t.parentNode._pending&&(t.parentNode._pending[e.key]=null),b&&(ki(t,d),ki(t,h)),k.cancelled?(b&&ki(t,l),m&&m(t)):(n(),f&&f(t)),t._leaveCb=null}));g?g(T):T()}function T(){k.cancelled||(!e.data.show&&t.parentNode&&((t.parentNode._pending||(t.parentNode._pending={}))[e.key]=e),u&&u(t),b&&(Si(t,l),Si(t,h),wi((function(){ki(t,l),k.cancelled||(Si(t,d),w||(Ei(S)?setTimeout(k,S):Ti(t,s,k)))}))),p&&p(t,k),b||w||k())}}function Ei(e){return"number"==typeof e&&!isNaN(e)}function Oi(e){if(a(e))return!1;var n=e.fns;return r(n)?Oi(Array.isArray(n)?n[0]:n):(e._length||e.length)>1}function Ai(e,n){!0!==n.data.show&&Ii(n)}var Ui=function(e){var n,t,o={},d=e.modules,c=e.nodeOps;for(n=0;n<Co.length;++n)for(o[Co[n]]=[],t=0;t<d.length;++t)r(d[t][Co[n]])&&o[Co[n]].push(d[t][Co[n]]);function h(e){var n=c.parentNode(e);r(n)&&c.removeChild(n,e)}function u(e,n,t,i,a,l,d){if(r(e.elm)&&r(l)&&(e=l[d]=me(e)),e.isRootInsert=!a,!function(e,n,t,i){var a=e.data;if(r(a)){var l=r(e.componentInstance)&&a.keepAlive;if(r(a=a.hook)&&r(a=a.init)&&a(e,!1),r(e.componentInstance))return p(e,n),f(t,e.elm,i),s(l)&&function(e,n,t,i){var a,s=e;for(;s.componentInstance;)if(s=s.componentInstance._vnode,r(a=s.data)&&r(a=a.transition)){for(a=0;a<o.activate.length;++a)o.activate[a](xo,s);n.push(s);break}f(t,e.elm,i)}(e,n,t,i),!0}}(e,n,t,i)){var h=e.data,u=e.children,g=e.tag;r(g)?(e.elm=e.ns?c.createElementNS(e.ns,g):c.createElement(g,e),b(e),m(e,u,n),r(h)&&y(e,n),f(t,e.elm,i)):s(e.isComment)?(e.elm=c.createComment(e.text),f(t,e.elm,i)):(e.elm=c.createTextNode(e.text),f(t,e.elm,i))}}function p(e,n){r(e.data.pendingInsert)&&(n.push.apply(n,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,g(e)?(y(e,n),b(e)):(ko(e),n.push(e))}function f(e,n,t){r(e)&&(r(t)?c.parentNode(t)===e&&c.insertBefore(e,n,t):c.appendChild(e,n))}function m(e,n,t){if(i(n)){0;for(var o=0;o<n.length;++o)u(n[o],t,e.elm,null,!0,n,o)}else l(e.text)&&c.appendChild(e.elm,c.createTextNode(String(e.text)))}function g(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return r(e.tag)}function y(e,t){for(var i=0;i<o.create.length;++i)o.create[i](xo,e);r(n=e.data.hook)&&(r(n.create)&&n.create(xo,e),r(n.insert)&&t.push(e))}function b(e){var n;if(r(n=e.fnScopeId))c.setStyleScope(e.elm,n);else for(var t=e;t;)r(n=t.context)&&r(n=n.$options._scopeId)&&c.setStyleScope(e.elm,n),t=t.parent;r(n=Kn)&&n!==e.context&&n!==e.fnContext&&r(n=n.$options._scopeId)&&c.setStyleScope(e.elm,n)}function w(e,n,t,o,i,a){for(;o<=i;++o)u(t[o],a,e,n,!1,t,o)}function S(e){var n,t,i=e.data;if(r(i))for(r(n=i.hook)&&r(n=n.destroy)&&n(e),n=0;n<o.destroy.length;++n)o.destroy[n](e);if(r(n=e.children))for(t=0;t<e.children.length;++t)S(e.children[t])}function k(e,n,t){for(;n<=t;++n){var o=e[n];r(o)&&(r(o.tag)?(T(o),S(o)):h(o.elm))}}function T(e,n){if(r(n)||r(e.data)){var t,i=o.remove.length+1;for(r(n)?n.listeners+=i:n=function(e,n){function t(){0==--t.listeners&&h(e)}return t.listeners=n,t}(e.elm,i),r(t=e.componentInstance)&&r(t=t._vnode)&&r(t.data)&&T(t,n),t=0;t<o.remove.length;++t)o.remove[t](e,n);r(t=e.data.hook)&&r(t=t.remove)?t(e,n):n()}else h(e.elm)}function x(e,n,t,o){for(var i=t;i<o;i++){var a=n[i];if(r(a)&&Do(e,a))return i}}function C(e,n,t,i,l,d){if(e!==n){r(n.elm)&&r(i)&&(n=i[l]=me(n));var h=n.elm=e.elm;if(s(e.isAsyncPlaceholder))r(n.asyncFactory.resolved)?I(e.elm,n,t):n.isAsyncPlaceholder=!0;else if(s(n.isStatic)&&s(e.isStatic)&&n.key===e.key&&(s(n.isCloned)||s(n.isOnce)))n.componentInstance=e.componentInstance;else{var p,f=n.data;r(f)&&r(p=f.hook)&&r(p=p.prepatch)&&p(e,n);var m=e.children,y=n.children;if(r(f)&&g(n)){for(p=0;p<o.update.length;++p)o.update[p](e,n);r(p=f.hook)&&r(p=p.update)&&p(e,n)}a(n.text)?r(m)&&r(y)?m!==y&&function(e,n,t,o,i){var s,l,d,h=0,p=0,f=n.length-1,m=n[0],g=n[f],y=t.length-1,v=t[0],b=t[y],S=!i;for(0;h<=f&&p<=y;)a(m)?m=n[++h]:a(g)?g=n[--f]:Do(m,v)?(C(m,v,o,t,p),m=n[++h],v=t[++p]):Do(g,b)?(C(g,b,o,t,y),g=n[--f],b=t[--y]):Do(m,b)?(C(m,b,o,t,y),S&&c.insertBefore(e,m.elm,c.nextSibling(g.elm)),m=n[++h],b=t[--y]):Do(g,v)?(C(g,v,o,t,p),S&&c.insertBefore(e,g.elm,m.elm),g=n[--f],v=t[++p]):(a(s)&&(s=Po(n,h,f)),a(l=r(v.key)?s[v.key]:x(v,n,h,f))?u(v,o,e,m.elm,!1,t,p):Do(d=n[l],v)?(C(d,v,o,t,p),n[l]=void 0,S&&c.insertBefore(e,d.elm,m.elm)):u(v,o,e,m.elm,!1,t,p),v=t[++p]);h>f?w(e,a(t[y+1])?null:t[y+1].elm,t,p,y,o):p>y&&k(n,h,f)}(h,m,y,t,d):r(y)?(r(e.text)&&c.setTextContent(h,""),w(h,null,y,0,y.length-1,t)):r(m)?k(m,0,m.length-1):r(e.text)&&c.setTextContent(h,""):e.text!==n.text&&c.setTextContent(h,n.text),r(f)&&r(p=f.hook)&&r(p=p.postpatch)&&p(e,n)}}}function D(e,n,t){if(s(t)&&r(e.parent))e.parent.data.pendingInsert=n;else for(var o=0;o<n.length;++o)n[o].data.hook.insert(n[o])}var P=v("attrs,class,staticClass,staticStyle,key");function I(e,n,t,o){var i,a=n.tag,l=n.data,d=n.children;if(o=o||l&&l.pre,n.elm=e,s(n.isComment)&&r(n.asyncFactory))return n.isAsyncPlaceholder=!0,!0;if(r(l)&&(r(i=l.hook)&&r(i=i.init)&&i(n,!0),r(i=n.componentInstance)))return p(n,t),!0;if(r(a)){if(r(d))if(e.hasChildNodes())if(r(i=l)&&r(i=i.domProps)&&r(i=i.innerHTML)){if(i!==e.innerHTML)return!1}else{for(var c=!0,h=e.firstChild,u=0;u<d.length;u++){if(!h||!I(h,d[u],t,o)){c=!1;break}h=h.nextSibling}if(!c||h)return!1}else m(n,d,t);if(r(l)){var f=!1;for(var g in l)if(!P(g)){f=!0,y(n,t);break}!f&&l.class&&Wn(l.class)}}else e.data!==n.text&&(e.data=n.text);return!0}return function(e,n,t,i){if(!a(n)){var l,d=!1,h=[];if(a(e))d=!0,u(n,h);else{var p=r(e.nodeType);if(!p&&Do(e,n))C(e,n,h,null,null,i);else{if(p){if(1===e.nodeType&&e.hasAttribute("data-server-rendered")&&(e.removeAttribute("data-server-rendered"),t=!0),s(t)&&I(e,n,h))return D(n,h,!0),e;l=e,e=new ue(c.tagName(l).toLowerCase(),{},[],void 0,l)}var f=e.elm,m=c.parentNode(f);if(u(n,h,f._leaveCb?null:m,c.nextSibling(f)),r(n.parent))for(var y=n.parent,v=g(n);y;){for(var b=0;b<o.destroy.length;++b)o.destroy[b](y);if(y.elm=n.elm,v){for(var w=0;w<o.create.length;++w)o.create[w](xo,y);var T=y.data.hook.insert;if(T.merged)for(var x=1;x<T.fns.length;x++)T.fns[x]()}else ko(y);y=y.parent}r(m)?k([e],0,0):r(e.tag)&&S(e)}}return D(n,h,d),n.elm}r(e)&&S(e)}}({nodeOps:wo,modules:[Fo,No,Vo,Zo,li,V?{create:Ai,activate:Ai,remove:function(e,n){!0!==e.data.show?_i(e,n):n()}}:{}].concat(Mo)});Z&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&Ni(e,"input")}));var Mi={inserted:function(e,n,t,o){"select"===t.tag?(o.elm&&!o.elm._vOptions?He(t,"postpatch",(function(){Mi.componentUpdated(e,n,t)})):Li(e,n,t.context),e._vOptions=[].map.call(e.options,Fi)):("textarea"===t.tag||bo(e.type))&&(e._vModifiers=n.modifiers,n.modifiers.lazy||(e.addEventListener("compositionstart",ji),e.addEventListener("compositionend",zi),e.addEventListener("change",zi),Z&&(e.vmodel=!0)))},componentUpdated:function(e,n,t){if("select"===t.tag){Li(e,n,t.context);var o=e._vOptions,i=e._vOptions=[].map.call(e.options,Fi);if(i.some((function(e,n){return!B(e,o[n])})))(e.multiple?n.value.some((function(e){return Ri(e,i)})):n.value!==n.oldValue&&Ri(n.value,i))&&Ni(e,"change")}}};function Li(e,n,t){Bi(e,n,t),(K||Q)&&setTimeout((function(){Bi(e,n,t)}),0)}function Bi(e,n,t){var o=n.value,i=e.multiple;if(!i||Array.isArray(o)){for(var a,r,s=0,l=e.options.length;s<l;s++)if(r=e.options[s],i)a=R(o,Fi(r))>-1,r.selected!==a&&(r.selected=a);else if(B(Fi(r),o))return void(e.selectedIndex!==s&&(e.selectedIndex=s));i||(e.selectedIndex=-1)}}function Ri(e,n){return n.every((function(n){return!B(n,e)}))}function Fi(e){return"_value"in e?e._value:e.value}function ji(e){e.target.composing=!0}function zi(e){e.target.composing&&(e.target.composing=!1,Ni(e.target,"input"))}function Ni(e,n){var t=document.createEvent("HTMLEvents");t.initEvent(n,!0,!0),e.dispatchEvent(t)}function Wi(e){return!e.componentInstance||e.data&&e.data.transition?e:Wi(e.componentInstance._vnode)}var $i={model:Mi,show:{bind:function(e,n,t){var o=n.value,i=(t=Wi(t)).data&&t.data.transition,a=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;o&&i?(t.data.show=!0,Ii(t,(function(){e.style.display=a}))):e.style.display=o?a:"none"},update:function(e,n,t){var o=n.value;!o!=!n.oldValue&&((t=Wi(t)).data&&t.data.transition?(t.data.show=!0,o?Ii(t,(function(){e.style.display=e.__vOriginalDisplay})):_i(t,(function(){e.style.display="none"}))):e.style.display=o?e.__vOriginalDisplay:"none")},unbind:function(e,n,t,o,i){i||(e.style.display=e.__vOriginalDisplay)}}},Gi={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function qi(e){var n=e&&e.componentOptions;return n&&n.Ctor.options.abstract?qi(xn(n.children)):e}function Hi(e){var n={},t=e.$options;for(var o in t.propsData)n[o]=e[o];var i=t._parentListeners;for(var o in i)n[C(o)]=i[o];return n}function Xi(e,n){if(/\d-keep-alive$/.test(n.tag))return e("keep-alive",{props:n.componentOptions.propsData})}var Vi=function(e){return e.tag||fn(e)},Yi=function(e){return"show"===e.name},Ki={name:"transition",props:Gi,abstract:!0,render:function(e){var n=this,t=this.$slots.default;if(t&&(t=t.filter(Vi)).length){0;var o=this.mode;0;var i=t[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return i;var a=qi(i);if(!a)return i;if(this._leaving)return Xi(e,i);var r="__transition-".concat(this._uid,"-");a.key=null==a.key?a.isComment?r+"comment":r+a.tag:l(a.key)?0===String(a.key).indexOf(r)?a.key:r+a.key:a.key;var s=(a.data||(a.data={})).transition=Hi(this),d=this._vnode,c=qi(d);if(a.data.directives&&a.data.directives.some(Yi)&&(a.data.show=!0),c&&c.data&&!function(e,n){return n.key===e.key&&n.tag===e.tag}(a,c)&&!fn(c)&&(!c.componentInstance||!c.componentInstance._vnode.isComment)){var h=c.data.transition=O({},s);if("out-in"===o)return this._leaving=!0,He(h,"afterLeave",(function(){n._leaving=!1,n.$forceUpdate()})),Xi(e,i);if("in-out"===o){if(fn(a))return d;var u,p=function(){u()};He(s,"afterEnter",p),He(s,"enterCancelled",p),He(h,"delayLeave",(function(e){u=e}))}}return i}}},Zi=O({tag:String,moveClass:String},Gi);function Qi(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function Ji(e){e.data.newPos=e.elm.getBoundingClientRect()}function ea(e){var n=e.data.pos,t=e.data.newPos,o=n.left-t.left,i=n.top-t.top;if(o||i){e.data.moved=!0;var a=e.elm.style;a.transform=a.WebkitTransform="translate(".concat(o,"px,").concat(i,"px)"),a.transitionDuration="0s"}}delete Zi.mode;var na={Transition:Ki,TransitionGroup:{props:Zi,beforeMount:function(){var e=this,n=this._update;this._update=function(t,o){var i=Zn(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,i(),n.call(e,t,o)}},render:function(e){for(var n=this.tag||this.$vnode.data.tag||"span",t=Object.create(null),o=this.prevChildren=this.children,i=this.$slots.default||[],a=this.children=[],r=Hi(this),s=0;s<i.length;s++){if((c=i[s]).tag)if(null!=c.key&&0!==String(c.key).indexOf("__vlist"))a.push(c),t[c.key]=c,(c.data||(c.data={})).transition=r;else;}if(o){var l=[],d=[];for(s=0;s<o.length;s++){var c;(c=o[s]).data.transition=r,c.data.pos=c.elm.getBoundingClientRect(),t[c.key]?l.push(c):d.push(c)}this.kept=e(n,null,l),this.removed=d}return e(n,null,a)},updated:function(){var e=this.prevChildren,n=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,n)&&(e.forEach(Qi),e.forEach(Ji),e.forEach(ea),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var t=e.elm,o=t.style;Si(t,n),o.transform=o.WebkitTransform=o.transitionDuration="",t.addEventListener(gi,t._moveCb=function e(o){o&&o.target!==t||o&&!/transform$/.test(o.propertyName)||(t.removeEventListener(gi,e),t._moveCb=null,ki(t,n))})}})))},methods:{hasMove:function(e,n){if(!fi)return!1;if(this._hasMove)return this._hasMove;var t=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){hi(t,e)})),ci(t,n),t.style.display="none",this.$el.appendChild(t);var o=Ci(t);return this.$el.removeChild(t),this._hasMove=o.hasTransform}}}};function ta(e,n){for(var t in n)e[t]=n[t];return e}Ht.config.mustUseProp=function(e,n,t){return"value"===t&&no(e)&&"button"!==n||"selected"===t&&"option"===e||"checked"===t&&"input"===e||"muted"===t&&"video"===e},Ht.config.isReservedTag=yo,Ht.config.isReservedAttr=eo,Ht.config.getTagNamespace=function(e){return go(e)?"svg":"math"===e?"math":void 0},Ht.config.isUnknownElement=function(e){if(!V)return!0;if(yo(e))return!1;if(e=e.toLowerCase(),null!=vo[e])return vo[e];var n=document.createElement(e);return e.indexOf("-")>-1?vo[e]=n.constructor===window.HTMLUnknownElement||n.constructor===window.HTMLElement:vo[e]=/HTMLUnknownElement/.test(n.toString())},O(Ht.options.directives,$i),O(Ht.options.components,na),Ht.prototype.__patch__=V?Ui:U,Ht.prototype.$mount=function(e,n){return function(e,n,t){var o;e.$el=n,e.$options.render||(e.$options.render=pe),et(e,"beforeMount"),o=function(){e._update(e._render(),t)},new qn(e,o,U,{before:function(){e._isMounted&&!e._isDestroyed&&et(e,"beforeUpdate")}},!0),t=!1;var i=e._preWatchers;if(i)for(var a=0;a<i.length;a++)i[a].run();return null==e.$vnode&&(e._isMounted=!0,et(e,"mounted")),e}(this,e=e&&V?function(e){if("string"==typeof e){var n=document.querySelector(e);return n||document.createElement("div")}return e}(e):void 0,n)},V&&setTimeout((function(){W.devtools&&re&&re.emit("init",Ht)}),0);var oa=/[!'()*]/g,ia=function(e){return"%"+e.charCodeAt(0).toString(16)},aa=/%2C/g,ra=function(e){return encodeURIComponent(e).replace(oa,ia).replace(aa,",")};function sa(e){try{return decodeURIComponent(e)}catch(e){0}return e}var la=function(e){return null==e||"object"==typeof e?e:String(e)};function da(e){var n={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var t=e.replace(/\+/g," ").split("="),o=sa(t.shift()),i=t.length>0?sa(t.join("=")):null;void 0===n[o]?n[o]=i:Array.isArray(n[o])?n[o].push(i):n[o]=[n[o],i]})),n):n}function ca(e){var n=e?Object.keys(e).map((function(n){var t=e[n];if(void 0===t)return"";if(null===t)return ra(n);if(Array.isArray(t)){var o=[];return t.forEach((function(e){void 0!==e&&(null===e?o.push(ra(n)):o.push(ra(n)+"="+ra(e)))})),o.join("&")}return ra(n)+"="+ra(t)})).filter((function(e){return e.length>0})).join("&"):null;return n?"?"+n:""}var ha=/\/?$/;function ua(e,n,t,o){var i=o&&o.options.stringifyQuery,a=n.query||{};try{a=pa(a)}catch(e){}var r={name:n.name||e&&e.name,meta:e&&e.meta||{},path:n.path||"/",hash:n.hash||"",query:a,params:n.params||{},fullPath:ga(n,i),matched:e?ma(e):[]};return t&&(r.redirectedFrom=ga(t,i)),Object.freeze(r)}function pa(e){if(Array.isArray(e))return e.map(pa);if(e&&"object"==typeof e){var n={};for(var t in e)n[t]=pa(e[t]);return n}return e}var fa=ua(null,{path:"/"});function ma(e){for(var n=[];e;)n.unshift(e),e=e.parent;return n}function ga(e,n){var t=e.path,o=e.query;void 0===o&&(o={});var i=e.hash;return void 0===i&&(i=""),(t||"/")+(n||ca)(o)+i}function ya(e,n,t){return n===fa?e===n:!!n&&(e.path&&n.path?e.path.replace(ha,"")===n.path.replace(ha,"")&&(t||e.hash===n.hash&&va(e.query,n.query)):!(!e.name||!n.name)&&(e.name===n.name&&(t||e.hash===n.hash&&va(e.query,n.query)&&va(e.params,n.params))))}function va(e,n){if(void 0===e&&(e={}),void 0===n&&(n={}),!e||!n)return e===n;var t=Object.keys(e).sort(),o=Object.keys(n).sort();return t.length===o.length&&t.every((function(t,i){var a=e[t];if(o[i]!==t)return!1;var r=n[t];return null==a||null==r?a===r:"object"==typeof a&&"object"==typeof r?va(a,r):String(a)===String(r)}))}function ba(e){for(var n=0;n<e.matched.length;n++){var t=e.matched[n];for(var o in t.instances){var i=t.instances[o],a=t.enteredCbs[o];if(i&&a){delete t.enteredCbs[o];for(var r=0;r<a.length;r++)i._isBeingDestroyed||a[r](i)}}}}var wa={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,n){var t=n.props,o=n.children,i=n.parent,a=n.data;a.routerView=!0;for(var r=i.$createElement,s=t.name,l=i.$route,d=i._routerViewCache||(i._routerViewCache={}),c=0,h=!1;i&&i._routerRoot!==i;){var u=i.$vnode?i.$vnode.data:{};u.routerView&&c++,u.keepAlive&&i._directInactive&&i._inactive&&(h=!0),i=i.$parent}if(a.routerViewDepth=c,h){var p=d[s],f=p&&p.component;return f?(p.configProps&&Sa(f,a,p.route,p.configProps),r(f,a,o)):r()}var m=l.matched[c],g=m&&m.components[s];if(!m||!g)return d[s]=null,r();d[s]={component:g},a.registerRouteInstance=function(e,n){var t=m.instances[s];(n&&t!==e||!n&&t===e)&&(m.instances[s]=n)},(a.hook||(a.hook={})).prepatch=function(e,n){m.instances[s]=n.componentInstance},a.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==m.instances[s]&&(m.instances[s]=e.componentInstance),ba(l)};var y=m.props&&m.props[s];return y&&(ta(d[s],{route:l,configProps:y}),Sa(g,a,l,y)),r(g,a,o)}};function Sa(e,n,t,o){var i=n.props=function(e,n){switch(typeof n){case"undefined":return;case"object":return n;case"function":return n(e);case"boolean":return n?e.params:void 0;default:0}}(t,o);if(i){i=n.props=ta({},i);var a=n.attrs=n.attrs||{};for(var r in i)e.props&&r in e.props||(a[r]=i[r],delete i[r])}}function ka(e,n,t){var o=e.charAt(0);if("/"===o)return e;if("?"===o||"#"===o)return n+e;var i=n.split("/");t&&i[i.length-1]||i.pop();for(var a=e.replace(/^\//,"").split("/"),r=0;r<a.length;r++){var s=a[r];".."===s?i.pop():"."!==s&&i.push(s)}return""!==i[0]&&i.unshift(""),i.join("/")}function Ta(e){return e.replace(/\/(?:\s*\/)+/g,"/")}var xa=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},Ca=ja,Da=Oa,Pa=function(e,n){return Ua(Oa(e,n),n)},Ia=Ua,_a=Fa,Ea=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function Oa(e,n){for(var t,o=[],i=0,a=0,r="",s=n&&n.delimiter||"/";null!=(t=Ea.exec(e));){var l=t[0],d=t[1],c=t.index;if(r+=e.slice(a,c),a=c+l.length,d)r+=d[1];else{var h=e[a],u=t[2],p=t[3],f=t[4],m=t[5],g=t[6],y=t[7];r&&(o.push(r),r="");var v=null!=u&&null!=h&&h!==u,b="+"===g||"*"===g,w="?"===g||"*"===g,S=t[2]||s,k=f||m;o.push({name:p||i++,prefix:u||"",delimiter:S,optional:w,repeat:b,partial:v,asterisk:!!y,pattern:k?La(k):y?".*":"[^"+Ma(S)+"]+?"})}}return a<e.length&&(r+=e.substr(a)),r&&o.push(r),o}function Aa(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function Ua(e,n){for(var t=new Array(e.length),o=0;o<e.length;o++)"object"==typeof e[o]&&(t[o]=new RegExp("^(?:"+e[o].pattern+")$",Ra(n)));return function(n,o){for(var i="",a=n||{},r=(o||{}).pretty?Aa:encodeURIComponent,s=0;s<e.length;s++){var l=e[s];if("string"!=typeof l){var d,c=a[l.name];if(null==c){if(l.optional){l.partial&&(i+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(xa(c)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(c)+"`");if(0===c.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var h=0;h<c.length;h++){if(d=r(c[h]),!t[s].test(d))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(d)+"`");i+=(0===h?l.prefix:l.delimiter)+d}}else{if(d=l.asterisk?encodeURI(c).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):r(c),!t[s].test(d))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+d+'"');i+=l.prefix+d}}else i+=l}return i}}function Ma(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function La(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function Ba(e,n){return e.keys=n,e}function Ra(e){return e&&e.sensitive?"":"i"}function Fa(e,n,t){xa(n)||(t=n||t,n=[]);for(var o=(t=t||{}).strict,i=!1!==t.end,a="",r=0;r<e.length;r++){var s=e[r];if("string"==typeof s)a+=Ma(s);else{var l=Ma(s.prefix),d="(?:"+s.pattern+")";n.push(s),s.repeat&&(d+="(?:"+l+d+")*"),a+=d=s.optional?s.partial?l+"("+d+")?":"(?:"+l+"("+d+"))?":l+"("+d+")"}}var c=Ma(t.delimiter||"/"),h=a.slice(-c.length)===c;return o||(a=(h?a.slice(0,-c.length):a)+"(?:"+c+"(?=$))?"),a+=i?"$":o&&h?"":"(?="+c+"|$)",Ba(new RegExp("^"+a,Ra(t)),n)}function ja(e,n,t){return xa(n)||(t=n||t,n=[]),t=t||{},e instanceof RegExp?function(e,n){var t=e.source.match(/\((?!\?)/g);if(t)for(var o=0;o<t.length;o++)n.push({name:o,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return Ba(e,n)}(e,n):xa(e)?function(e,n,t){for(var o=[],i=0;i<e.length;i++)o.push(ja(e[i],n,t).source);return Ba(new RegExp("(?:"+o.join("|")+")",Ra(t)),n)}(e,n,t):function(e,n,t){return Fa(Oa(e,t),n,t)}(e,n,t)}Ca.parse=Da,Ca.compile=Pa,Ca.tokensToFunction=Ia,Ca.tokensToRegExp=_a;var za=Object.create(null);function Na(e,n,t){n=n||{};try{var o=za[e]||(za[e]=Ca.compile(e));return"string"==typeof n.pathMatch&&(n[0]=n.pathMatch),o(n,{pretty:!0})}catch(e){return""}finally{delete n[0]}}function Wa(e,n,t,o){var i="string"==typeof e?{path:e}:e;if(i._normalized)return i;if(i.name){var a=(i=ta({},e)).params;return a&&"object"==typeof a&&(i.params=ta({},a)),i}if(!i.path&&i.params&&n){(i=ta({},i))._normalized=!0;var r=ta(ta({},n.params),i.params);if(n.name)i.name=n.name,i.params=r;else if(n.matched.length){var s=n.matched[n.matched.length-1].path;i.path=Na(s,r,n.path)}else 0;return i}var l=function(e){var n="",t="",o=e.indexOf("#");o>=0&&(n=e.slice(o),e=e.slice(0,o));var i=e.indexOf("?");return i>=0&&(t=e.slice(i+1),e=e.slice(0,i)),{path:e,query:t,hash:n}}(i.path||""),d=n&&n.path||"/",c=l.path?ka(l.path,d,t||i.append):d,h=function(e,n,t){void 0===n&&(n={});var o,i=t||da;try{o=i(e||"")}catch(e){o={}}for(var a in n){var r=n[a];o[a]=Array.isArray(r)?r.map(la):la(r)}return o}(l.query,i.query,o&&o.options.parseQuery),u=i.hash||l.hash;return u&&"#"!==u.charAt(0)&&(u="#"+u),{_normalized:!0,path:c,query:h,hash:u}}var $a,Ga=function(){},qa={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(e){var n=this,t=this.$router,o=this.$route,i=t.resolve(this.to,o,this.append),a=i.location,r=i.route,s=i.href,l={},d=t.options.linkActiveClass,c=t.options.linkExactActiveClass,h=null==d?"router-link-active":d,u=null==c?"router-link-exact-active":c,p=null==this.activeClass?h:this.activeClass,f=null==this.exactActiveClass?u:this.exactActiveClass,m=r.redirectedFrom?ua(null,Wa(r.redirectedFrom),null,t):r;l[f]=ya(o,m,this.exactPath),l[p]=this.exact||this.exactPath?l[f]:function(e,n){return 0===e.path.replace(ha,"/").indexOf(n.path.replace(ha,"/"))&&(!n.hash||e.hash===n.hash)&&function(e,n){for(var t in n)if(!(t in e))return!1;return!0}(e.query,n.query)}(o,m);var g=l[f]?this.ariaCurrentValue:null,y=function(e){Ha(e)&&(n.replace?t.replace(a,Ga):t.push(a,Ga))},v={click:Ha};Array.isArray(this.event)?this.event.forEach((function(e){v[e]=y})):v[this.event]=y;var b={class:l},w=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:s,route:r,navigate:y,isActive:l[p],isExactActive:l[f]});if(w){if(1===w.length)return w[0];if(w.length>1||!w.length)return 0===w.length?e():e("span",{},w)}if("a"===this.tag)b.on=v,b.attrs={href:s,"aria-current":g};else{var S=function e(n){var t;if(n)for(var o=0;o<n.length;o++){if("a"===(t=n[o]).tag)return t;if(t.children&&(t=e(t.children)))return t}}(this.$slots.default);if(S){S.isStatic=!1;var k=S.data=ta({},S.data);for(var T in k.on=k.on||{},k.on){var x=k.on[T];T in v&&(k.on[T]=Array.isArray(x)?x:[x])}for(var C in v)C in k.on?k.on[C].push(v[C]):k.on[C]=y;var D=S.data.attrs=ta({},S.data.attrs);D.href=s,D["aria-current"]=g}else b.on=v}return e(this.tag,b,this.$slots.default)}};function Ha(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var n=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(n))return}return e.preventDefault&&e.preventDefault(),!0}}var Xa="undefined"!=typeof window;function Va(e,n,t,o,i){var a=n||[],r=t||Object.create(null),s=o||Object.create(null);e.forEach((function(e){!function e(n,t,o,i,a,r){var s=i.path,l=i.name;0;var d=i.pathToRegexpOptions||{},c=function(e,n,t){t||(e=e.replace(/\/$/,""));if("/"===e[0])return e;if(null==n)return e;return Ta(n.path+"/"+e)}(s,a,d.strict);"boolean"==typeof i.caseSensitive&&(d.sensitive=i.caseSensitive);var h={path:c,regex:Ya(c,d),components:i.components||{default:i.component},alias:i.alias?"string"==typeof i.alias?[i.alias]:i.alias:[],instances:{},enteredCbs:{},name:l,parent:a,matchAs:r,redirect:i.redirect,beforeEnter:i.beforeEnter,meta:i.meta||{},props:null==i.props?{}:i.components?i.props:{default:i.props}};i.children&&i.children.forEach((function(i){var a=r?Ta(r+"/"+i.path):void 0;e(n,t,o,i,h,a)}));t[h.path]||(n.push(h.path),t[h.path]=h);if(void 0!==i.alias)for(var u=Array.isArray(i.alias)?i.alias:[i.alias],p=0;p<u.length;++p){0;var f={path:u[p],children:i.children};e(n,t,o,f,a,h.path||"/")}l&&(o[l]||(o[l]=h))}(a,r,s,e,i)}));for(var l=0,d=a.length;l<d;l++)"*"===a[l]&&(a.push(a.splice(l,1)[0]),d--,l--);return{pathList:a,pathMap:r,nameMap:s}}function Ya(e,n){return Ca(e,[],n)}function Ka(e,n){var t=Va(e),o=t.pathList,i=t.pathMap,a=t.nameMap;function r(e,t,r){var s=Wa(e,t,!1,n),d=s.name;if(d){var c=a[d];if(!c)return l(null,s);var h=c.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof s.params&&(s.params={}),t&&"object"==typeof t.params)for(var u in t.params)!(u in s.params)&&h.indexOf(u)>-1&&(s.params[u]=t.params[u]);return s.path=Na(c.path,s.params),l(c,s,r)}if(s.path){s.params={};for(var p=0;p<o.length;p++){var f=o[p],m=i[f];if(Za(m.regex,s.path,s.params))return l(m,s,r)}}return l(null,s)}function s(e,t){var o=e.redirect,i="function"==typeof o?o(ua(e,t,null,n)):o;if("string"==typeof i&&(i={path:i}),!i||"object"!=typeof i)return l(null,t);var s=i,d=s.name,c=s.path,h=t.query,u=t.hash,p=t.params;if(h=s.hasOwnProperty("query")?s.query:h,u=s.hasOwnProperty("hash")?s.hash:u,p=s.hasOwnProperty("params")?s.params:p,d){a[d];return r({_normalized:!0,name:d,query:h,hash:u,params:p},void 0,t)}if(c){var f=function(e,n){return ka(e,n.parent?n.parent.path:"/",!0)}(c,e);return r({_normalized:!0,path:Na(f,p),query:h,hash:u},void 0,t)}return l(null,t)}function l(e,t,o){return e&&e.redirect?s(e,o||t):e&&e.matchAs?function(e,n,t){var o=r({_normalized:!0,path:Na(t,n.params)});if(o){var i=o.matched,a=i[i.length-1];return n.params=o.params,l(a,n)}return l(null,n)}(0,t,e.matchAs):ua(e,t,o,n)}return{match:r,addRoute:function(e,n){var t="object"!=typeof e?a[e]:void 0;Va([n||e],o,i,a,t),t&&t.alias.length&&Va(t.alias.map((function(e){return{path:e,children:[n]}})),o,i,a,t)},getRoutes:function(){return o.map((function(e){return i[e]}))},addRoutes:function(e){Va(e,o,i,a)}}}function Za(e,n,t){var o=n.match(e);if(!o)return!1;if(!t)return!0;for(var i=1,a=o.length;i<a;++i){var r=e.keys[i-1];r&&(t[r.name||"pathMatch"]="string"==typeof o[i]?sa(o[i]):o[i])}return!0}var Qa=Xa&&window.performance&&window.performance.now?window.performance:Date;function Ja(){return Qa.now().toFixed(3)}var er=Ja();function nr(){return er}function tr(e){return er=e}var or=Object.create(null);function ir(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var e=window.location.protocol+"//"+window.location.host,n=window.location.href.replace(e,""),t=ta({},window.history.state);return t.key=nr(),window.history.replaceState(t,"",n),window.addEventListener("popstate",sr),function(){window.removeEventListener("popstate",sr)}}function ar(e,n,t,o){if(e.app){var i=e.options.scrollBehavior;i&&e.app.$nextTick((function(){var a=function(){var e=nr();if(e)return or[e]}(),r=i.call(e,n,t,o?a:null);r&&("function"==typeof r.then?r.then((function(e){ur(e,a)})).catch((function(e){0})):ur(r,a))}))}}function rr(){var e=nr();e&&(or[e]={x:window.pageXOffset,y:window.pageYOffset})}function sr(e){rr(),e.state&&e.state.key&&tr(e.state.key)}function lr(e){return cr(e.x)||cr(e.y)}function dr(e){return{x:cr(e.x)?e.x:window.pageXOffset,y:cr(e.y)?e.y:window.pageYOffset}}function cr(e){return"number"==typeof e}var hr=/^#\d/;function ur(e,n){var t,o="object"==typeof e;if(o&&"string"==typeof e.selector){var i=hr.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(i){var a=e.offset&&"object"==typeof e.offset?e.offset:{};n=function(e,n){var t=document.documentElement.getBoundingClientRect(),o=e.getBoundingClientRect();return{x:o.left-t.left-n.x,y:o.top-t.top-n.y}}(i,a={x:cr((t=a).x)?t.x:0,y:cr(t.y)?t.y:0})}else lr(e)&&(n=dr(e))}else o&&lr(e)&&(n=dr(e));n&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:n.x,top:n.y,behavior:e.behavior}):window.scrollTo(n.x,n.y))}var pr,fr=Xa&&((-1===(pr=window.navigator.userAgent).indexOf("Android 2.")&&-1===pr.indexOf("Android 4.0")||-1===pr.indexOf("Mobile Safari")||-1!==pr.indexOf("Chrome")||-1!==pr.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function mr(e,n){rr();var t=window.history;try{if(n){var o=ta({},t.state);o.key=nr(),t.replaceState(o,"",e)}else t.pushState({key:tr(Ja())},"",e)}catch(t){window.location[n?"replace":"assign"](e)}}function gr(e){mr(e,!0)}var yr={redirected:2,aborted:4,cancelled:8,duplicated:16};function vr(e,n){return wr(e,n,yr.redirected,'Redirected when going from "'+e.fullPath+'" to "'+function(e){if("string"==typeof e)return e;if("path"in e)return e.path;var n={};return Sr.forEach((function(t){t in e&&(n[t]=e[t])})),JSON.stringify(n,null,2)}(n)+'" via a navigation guard.')}function br(e,n){return wr(e,n,yr.cancelled,'Navigation cancelled from "'+e.fullPath+'" to "'+n.fullPath+'" with a new navigation.')}function wr(e,n,t,o){var i=new Error(o);return i._isRouter=!0,i.from=e,i.to=n,i.type=t,i}var Sr=["params","query","hash"];function kr(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function Tr(e,n){return kr(e)&&e._isRouter&&(null==n||e.type===n)}function xr(e,n,t){var o=function(i){i>=e.length?t():e[i]?n(e[i],(function(){o(i+1)})):o(i+1)};o(0)}function Cr(e){return function(n,t,o){var i=!1,a=0,r=null;Dr(e,(function(e,n,t,s){if("function"==typeof e&&void 0===e.cid){i=!0,a++;var l,d=_r((function(n){var i;((i=n).__esModule||Ir&&"Module"===i[Symbol.toStringTag])&&(n=n.default),e.resolved="function"==typeof n?n:$a.extend(n),t.components[s]=n,--a<=0&&o()})),c=_r((function(e){var n="Failed to resolve async component "+s+": "+e;r||(r=kr(e)?e:new Error(n),o(r))}));try{l=e(d,c)}catch(e){c(e)}if(l)if("function"==typeof l.then)l.then(d,c);else{var h=l.component;h&&"function"==typeof h.then&&h.then(d,c)}}})),i||o()}}function Dr(e,n){return Pr(e.map((function(e){return Object.keys(e.components).map((function(t){return n(e.components[t],e.instances[t],e,t)}))})))}function Pr(e){return Array.prototype.concat.apply([],e)}var Ir="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function _r(e){var n=!1;return function(){for(var t=[],o=arguments.length;o--;)t[o]=arguments[o];if(!n)return n=!0,e.apply(this,t)}}var Er=function(e,n){this.router=e,this.base=function(e){if(!e)if(Xa){var n=document.querySelector("base");e=(e=n&&n.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";"/"!==e.charAt(0)&&(e="/"+e);return e.replace(/\/$/,"")}(n),this.current=fa,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function Or(e,n,t,o){var i=Dr(e,(function(e,o,i,a){var r=function(e,n){"function"!=typeof e&&(e=$a.extend(e));return e.options[n]}(e,n);if(r)return Array.isArray(r)?r.map((function(e){return t(e,o,i,a)})):t(r,o,i,a)}));return Pr(o?i.reverse():i)}function Ar(e,n){if(n)return function(){return e.apply(n,arguments)}}Er.prototype.listen=function(e){this.cb=e},Er.prototype.onReady=function(e,n){this.ready?e():(this.readyCbs.push(e),n&&this.readyErrorCbs.push(n))},Er.prototype.onError=function(e){this.errorCbs.push(e)},Er.prototype.transitionTo=function(e,n,t){var o,i=this;try{o=this.router.match(e,this.current)}catch(e){throw this.errorCbs.forEach((function(n){n(e)})),e}var a=this.current;this.confirmTransition(o,(function(){i.updateRoute(o),n&&n(o),i.ensureURL(),i.router.afterHooks.forEach((function(e){e&&e(o,a)})),i.ready||(i.ready=!0,i.readyCbs.forEach((function(e){e(o)})))}),(function(e){t&&t(e),e&&!i.ready&&(Tr(e,yr.redirected)&&a===fa||(i.ready=!0,i.readyErrorCbs.forEach((function(n){n(e)}))))}))},Er.prototype.confirmTransition=function(e,n,t){var o=this,i=this.current;this.pending=e;var a,r,s=function(e){!Tr(e)&&kr(e)&&(o.errorCbs.length?o.errorCbs.forEach((function(n){n(e)})):console.error(e)),t&&t(e)},l=e.matched.length-1,d=i.matched.length-1;if(ya(e,i)&&l===d&&e.matched[l]===i.matched[d])return this.ensureURL(),e.hash&&ar(this.router,i,e,!1),s(((r=wr(a=i,e,yr.duplicated,'Avoided redundant navigation to current location: "'+a.fullPath+'".')).name="NavigationDuplicated",r));var c=function(e,n){var t,o=Math.max(e.length,n.length);for(t=0;t<o&&e[t]===n[t];t++);return{updated:n.slice(0,t),activated:n.slice(t),deactivated:e.slice(t)}}(this.current.matched,e.matched),h=c.updated,u=c.deactivated,p=c.activated,f=[].concat(function(e){return Or(e,"beforeRouteLeave",Ar,!0)}(u),this.router.beforeHooks,function(e){return Or(e,"beforeRouteUpdate",Ar)}(h),p.map((function(e){return e.beforeEnter})),Cr(p)),m=function(n,t){if(o.pending!==e)return s(br(i,e));try{n(e,i,(function(n){!1===n?(o.ensureURL(!0),s(function(e,n){return wr(e,n,yr.aborted,'Navigation aborted from "'+e.fullPath+'" to "'+n.fullPath+'" via a navigation guard.')}(i,e))):kr(n)?(o.ensureURL(!0),s(n)):"string"==typeof n||"object"==typeof n&&("string"==typeof n.path||"string"==typeof n.name)?(s(vr(i,e)),"object"==typeof n&&n.replace?o.replace(n):o.push(n)):t(n)}))}catch(e){s(e)}};xr(f,m,(function(){xr(function(e){return Or(e,"beforeRouteEnter",(function(e,n,t,o){return function(e,n,t){return function(o,i,a){return e(o,i,(function(e){"function"==typeof e&&(n.enteredCbs[t]||(n.enteredCbs[t]=[]),n.enteredCbs[t].push(e)),a(e)}))}}(e,t,o)}))}(p).concat(o.router.resolveHooks),m,(function(){if(o.pending!==e)return s(br(i,e));o.pending=null,n(e),o.router.app&&o.router.app.$nextTick((function(){ba(e)}))}))}))},Er.prototype.updateRoute=function(e){this.current=e,this.cb&&this.cb(e)},Er.prototype.setupListeners=function(){},Er.prototype.teardown=function(){this.listeners.forEach((function(e){e()})),this.listeners=[],this.current=fa,this.pending=null};var Ur=function(e){function n(n,t){e.call(this,n,t),this._startLocation=Mr(this.base)}return e&&(n.__proto__=e),n.prototype=Object.create(e&&e.prototype),n.prototype.constructor=n,n.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var n=this.router,t=n.options.scrollBehavior,o=fr&&t;o&&this.listeners.push(ir());var i=function(){var t=e.current,i=Mr(e.base);e.current===fa&&i===e._startLocation||e.transitionTo(i,(function(e){o&&ar(n,e,t,!0)}))};window.addEventListener("popstate",i),this.listeners.push((function(){window.removeEventListener("popstate",i)}))}},n.prototype.go=function(e){window.history.go(e)},n.prototype.push=function(e,n,t){var o=this,i=this.current;this.transitionTo(e,(function(e){mr(Ta(o.base+e.fullPath)),ar(o.router,e,i,!1),n&&n(e)}),t)},n.prototype.replace=function(e,n,t){var o=this,i=this.current;this.transitionTo(e,(function(e){gr(Ta(o.base+e.fullPath)),ar(o.router,e,i,!1),n&&n(e)}),t)},n.prototype.ensureURL=function(e){if(Mr(this.base)!==this.current.fullPath){var n=Ta(this.base+this.current.fullPath);e?mr(n):gr(n)}},n.prototype.getCurrentLocation=function(){return Mr(this.base)},n}(Er);function Mr(e){var n=window.location.pathname,t=n.toLowerCase(),o=e.toLowerCase();return!e||t!==o&&0!==t.indexOf(Ta(o+"/"))||(n=n.slice(e.length)),(n||"/")+window.location.search+window.location.hash}var Lr=function(e){function n(n,t,o){e.call(this,n,t),o&&function(e){var n=Mr(e);if(!/^\/#/.test(n))return window.location.replace(Ta(e+"/#"+n)),!0}(this.base)||Br()}return e&&(n.__proto__=e),n.prototype=Object.create(e&&e.prototype),n.prototype.constructor=n,n.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var n=this.router.options.scrollBehavior,t=fr&&n;t&&this.listeners.push(ir());var o=function(){var n=e.current;Br()&&e.transitionTo(Rr(),(function(o){t&&ar(e.router,o,n,!0),fr||zr(o.fullPath)}))},i=fr?"popstate":"hashchange";window.addEventListener(i,o),this.listeners.push((function(){window.removeEventListener(i,o)}))}},n.prototype.push=function(e,n,t){var o=this,i=this.current;this.transitionTo(e,(function(e){jr(e.fullPath),ar(o.router,e,i,!1),n&&n(e)}),t)},n.prototype.replace=function(e,n,t){var o=this,i=this.current;this.transitionTo(e,(function(e){zr(e.fullPath),ar(o.router,e,i,!1),n&&n(e)}),t)},n.prototype.go=function(e){window.history.go(e)},n.prototype.ensureURL=function(e){var n=this.current.fullPath;Rr()!==n&&(e?jr(n):zr(n))},n.prototype.getCurrentLocation=function(){return Rr()},n}(Er);function Br(){var e=Rr();return"/"===e.charAt(0)||(zr("/"+e),!1)}function Rr(){var e=window.location.href,n=e.indexOf("#");return n<0?"":e=e.slice(n+1)}function Fr(e){var n=window.location.href,t=n.indexOf("#");return(t>=0?n.slice(0,t):n)+"#"+e}function jr(e){fr?mr(Fr(e)):window.location.hash=e}function zr(e){fr?gr(Fr(e)):window.location.replace(Fr(e))}var Nr=function(e){function n(n,t){e.call(this,n,t),this.stack=[],this.index=-1}return e&&(n.__proto__=e),n.prototype=Object.create(e&&e.prototype),n.prototype.constructor=n,n.prototype.push=function(e,n,t){var o=this;this.transitionTo(e,(function(e){o.stack=o.stack.slice(0,o.index+1).concat(e),o.index++,n&&n(e)}),t)},n.prototype.replace=function(e,n,t){var o=this;this.transitionTo(e,(function(e){o.stack=o.stack.slice(0,o.index).concat(e),n&&n(e)}),t)},n.prototype.go=function(e){var n=this,t=this.index+e;if(!(t<0||t>=this.stack.length)){var o=this.stack[t];this.confirmTransition(o,(function(){var e=n.current;n.index=t,n.updateRoute(o),n.router.afterHooks.forEach((function(n){n&&n(o,e)}))}),(function(e){Tr(e,yr.duplicated)&&(n.index=t)}))}},n.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},n.prototype.ensureURL=function(){},n}(Er),Wr=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Ka(e.routes||[],this);var n=e.mode||"hash";switch(this.fallback="history"===n&&!fr&&!1!==e.fallback,this.fallback&&(n="hash"),Xa||(n="abstract"),this.mode=n,n){case"history":this.history=new Ur(this,e.base);break;case"hash":this.history=new Lr(this,e.base,this.fallback);break;case"abstract":this.history=new Nr(this,e.base);break;default:0}},$r={currentRoute:{configurable:!0}};Wr.prototype.match=function(e,n,t){return this.matcher.match(e,n,t)},$r.currentRoute.get=function(){return this.history&&this.history.current},Wr.prototype.init=function(e){var n=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var t=n.apps.indexOf(e);t>-1&&n.apps.splice(t,1),n.app===e&&(n.app=n.apps[0]||null),n.app||n.history.teardown()})),!this.app){this.app=e;var t=this.history;if(t instanceof Ur||t instanceof Lr){var o=function(e){t.setupListeners(),function(e){var o=t.current,i=n.options.scrollBehavior;fr&&i&&"fullPath"in e&&ar(n,e,o,!1)}(e)};t.transitionTo(t.getCurrentLocation(),o,o)}t.listen((function(e){n.apps.forEach((function(n){n._route=e}))}))}},Wr.prototype.beforeEach=function(e){return qr(this.beforeHooks,e)},Wr.prototype.beforeResolve=function(e){return qr(this.resolveHooks,e)},Wr.prototype.afterEach=function(e){return qr(this.afterHooks,e)},Wr.prototype.onReady=function(e,n){this.history.onReady(e,n)},Wr.prototype.onError=function(e){this.history.onError(e)},Wr.prototype.push=function(e,n,t){var o=this;if(!n&&!t&&"undefined"!=typeof Promise)return new Promise((function(n,t){o.history.push(e,n,t)}));this.history.push(e,n,t)},Wr.prototype.replace=function(e,n,t){var o=this;if(!n&&!t&&"undefined"!=typeof Promise)return new Promise((function(n,t){o.history.replace(e,n,t)}));this.history.replace(e,n,t)},Wr.prototype.go=function(e){this.history.go(e)},Wr.prototype.back=function(){this.go(-1)},Wr.prototype.forward=function(){this.go(1)},Wr.prototype.getMatchedComponents=function(e){var n=e?e.matched?e:this.resolve(e).route:this.currentRoute;return n?[].concat.apply([],n.matched.map((function(e){return Object.keys(e.components).map((function(n){return e.components[n]}))}))):[]},Wr.prototype.resolve=function(e,n,t){var o=Wa(e,n=n||this.history.current,t,this),i=this.match(o,n),a=i.redirectedFrom||i.fullPath;return{location:o,route:i,href:function(e,n,t){var o="hash"===t?"#"+n:n;return e?Ta(e+"/"+o):o}(this.history.base,a,this.mode),normalizedTo:o,resolved:i}},Wr.prototype.getRoutes=function(){return this.matcher.getRoutes()},Wr.prototype.addRoute=function(e,n){this.matcher.addRoute(e,n),this.history.current!==fa&&this.history.transitionTo(this.history.getCurrentLocation())},Wr.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==fa&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(Wr.prototype,$r);var Gr=Wr;function qr(e,n){return e.push(n),function(){var t=e.indexOf(n);t>-1&&e.splice(t,1)}}Wr.install=function e(n){if(!e.installed||$a!==n){e.installed=!0,$a=n;var t=function(e){return void 0!==e},o=function(e,n){var o=e.$options._parentVnode;t(o)&&t(o=o.data)&&t(o=o.registerRouteInstance)&&o(e,n)};n.mixin({beforeCreate:function(){t(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),n.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,o(this,this)},destroyed:function(){o(this)}}),Object.defineProperty(n.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(n.prototype,"$route",{get:function(){return this._routerRoot._route}}),n.component("RouterView",wa),n.component("RouterLink",qa);var i=n.config.optionMergeStrategies;i.beforeRouteEnter=i.beforeRouteLeave=i.beforeRouteUpdate=i.created}},Wr.version="3.6.5",Wr.isNavigationFailure=Tr,Wr.NavigationFailureType=yr,Wr.START_LOCATION=fa,Xa&&window.Vue&&window.Vue.use(Wr);t(101);t(93),t(128);var Hr={NotFound:()=>t.e(24).then(t.bind(null,342)),Layout:()=>Promise.all([t.e(0),t.e(2)]).then(t.bind(null,341))},Xr={"v-3c70dfbe":()=>t.e(25).then(t.bind(null,346)),"v-3903d112":()=>t.e(16).then(t.bind(null,347)),"v-0295caa9":()=>t.e(26).then(t.bind(null,348)),"v-72ea6c07":()=>t.e(10).then(t.bind(null,349)),"v-3e272bdd":()=>t.e(27).then(t.bind(null,350)),"v-50c102a9":()=>t.e(28).then(t.bind(null,351)),"v-7b1cc85f":()=>t.e(20).then(t.bind(null,352)),"v-3bc1ed2e":()=>t.e(29).then(t.bind(null,353)),"v-685cab09":()=>t.e(6).then(t.bind(null,354)),"v-4a0047e9":()=>t.e(30).then(t.bind(null,355)),"v-683b1e0e":()=>t.e(31).then(t.bind(null,356)),"v-2d4057e1":()=>t.e(17).then(t.bind(null,357)),"v-9a3ecb2e":()=>t.e(21).then(t.bind(null,358)),"v-20cdc812":()=>t.e(32).then(t.bind(null,359)),"v-236170ee":()=>t.e(33).then(t.bind(null,360)),"v-426c69e9":()=>t.e(4).then(t.bind(null,361)),"v-18059cc9":()=>t.e(5).then(t.bind(null,362)),"v-029f7a69":()=>t.e(34).then(t.bind(null,363)),"v-44ef01a9":()=>t.e(35).then(t.bind(null,364)),"v-6ca0e87d":()=>t.e(36).then(t.bind(null,365)),"v-4de68e61":()=>t.e(37).then(t.bind(null,366)),"v-9136e2ee":()=>t.e(7).then(t.bind(null,367)),"v-3b8fbee9":()=>t.e(38).then(t.bind(null,368)),"v-4d1042ae":()=>t.e(39).then(t.bind(null,369)),"v-4b73ca6e":()=>t.e(40).then(t.bind(null,370)),"v-86b8972e":()=>t.e(41).then(t.bind(null,371)),"v-e2b716c6":()=>t.e(42).then(t.bind(null,372)),"v-e20ae26e":()=>t.e(43).then(t.bind(null,373)),"v-8fd4fe0e":()=>t.e(9).then(t.bind(null,374)),"v-23bb50cf":()=>t.e(44).then(t.bind(null,375)),"v-8167976a":()=>t.e(45).then(t.bind(null,376)),"v-66b55b09":()=>t.e(46).then(t.bind(null,377)),"v-2a2d6b89":()=>t.e(3).then(t.bind(null,378)),"v-75d09ea9":()=>t.e(47).then(t.bind(null,379)),"v-8fbfb42e":()=>t.e(48).then(t.bind(null,380)),"v-59fc2811":()=>t.e(49).then(t.bind(null,381)),"v-7e32a629":()=>t.e(11).then(t.bind(null,382)),"v-dbf69aee":()=>t.e(50).then(t.bind(null,383)),"v-57578c6e":()=>t.e(51).then(t.bind(null,384)),"v-59ad2227":()=>t.e(52).then(t.bind(null,385)),"v-9bd253ce":()=>t.e(8).then(t.bind(null,386)),"v-b7b5f5ee":()=>t.e(53).then(t.bind(null,387)),"v-4dd249e9":()=>t.e(18).then(t.bind(null,388)),"v-8a61aaee":()=>t.e(54).then(t.bind(null,389)),"v-1b473ba9":()=>t.e(55).then(t.bind(null,390)),"v-a8d253be":()=>t.e(56).then(t.bind(null,391)),"v-4a34dbe9":()=>t.e(59).then(t.bind(null,392)),"v-ad25710e":()=>t.e(60).then(t.bind(null,393)),"v-c31fbd6e":()=>t.e(61).then(t.bind(null,394)),"v-e960d7ee":()=>t.e(19).then(t.bind(null,395)),"v-ba4bb512":()=>t.e(58).then(t.bind(null,396)),"v-225b852a":()=>t.e(22).then(t.bind(null,397)),"v-31c08e49":()=>t.e(57).then(t.bind(null,398))};function Vr(e){const n=Object.create(null);return function(t){return n[t]||(n[t]=e(t))}}const Yr=/-(\w)/g,Kr=Vr(e=>e.replace(Yr,(e,n)=>n?n.toUpperCase():"")),Zr=/\B([A-Z])/g,Qr=Vr(e=>e.replace(Zr,"-$1").toLowerCase()),Jr=Vr(e=>e.charAt(0).toUpperCase()+e.slice(1));function es(e,n){if(!n)return;if(e(n))return e(n);return n.includes("-")?e(Jr(Kr(n))):e(Jr(n))||e(Qr(n))}const ns=Object.assign({},Hr,Xr),ts=e=>ns[e],os=e=>Xr[e],is=e=>Hr[e],as=e=>Ht.component(e);function rs(e){return es(os,e)}function ss(e){return es(is,e)}function ls(e){return es(ts,e)}function ds(e){return es(as,e)}function cs(...e){return Promise.all(e.filter(e=>e).map(async e=>{if(!ds(e)&&ls(e)){const n=await ls(e)();Ht.component(e,n.default)}}))}function hs(e,n){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[e]=n)}var us=t(90),ps=t.n(us),fs=t(91),ms=t.n(fs),gs={created(){if(this.siteMeta=this.$site.headTags.filter(([e])=>"meta"===e).map(([e,n])=>n),this.$ssrContext){const n=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(e=n)?e.map(e=>{let n="<meta";return Object.keys(e).forEach(t=>{n+=` ${t}="${ms()(e[t])}"`}),n+">"}).join("\n    "):"",this.$ssrContext.canonicalLink=vs(this.$canonicalUrl)}var e},mounted(){this.currentMetaTags=[...document.querySelectorAll("meta")],this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta(){document.title=this.$title,document.documentElement.lang=this.$lang;const e=this.getMergedMetaTags();this.currentMetaTags=bs(e,this.currentMetaTags)},getMergedMetaTags(){const e=this.$page.frontmatter.meta||[];return ps()([{name:"description",content:this.$description}],e,this.siteMeta,ws)},updateCanonicalLink(){ys(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",vs(this.$canonicalUrl))}},watch:{$page(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy(){bs(null,this.currentMetaTags),ys()}};function ys(){const e=document.querySelector("link[rel='canonical']");e&&e.remove()}function vs(e=""){return e?`<link href="${e}" rel="canonical" />`:""}function bs(e,n){if(n&&[...n].filter(e=>e.parentNode===document.head).forEach(e=>document.head.removeChild(e)),e)return e.map(e=>{const n=document.createElement("meta");return Object.keys(e).forEach(t=>{n.setAttribute(t,e[t])}),document.head.appendChild(n),n})}function ws(e){for(const n of["name","property","itemprop"])if(e.hasOwnProperty(n))return e[n]+n;return JSON.stringify(e)}var Ss=t(23),ks=t.n(Ss),Ts={mounted(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:ks()((function(){this.setActiveHash()}),300),setActiveHash(){const e=[].slice.call(document.querySelectorAll(".sidebar-link")),n=[].slice.call(document.querySelectorAll(".header-anchor")).filter(n=>e.some(e=>e.hash===n.hash)),t=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),o=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),i=window.innerHeight+t;for(let e=0;e<n.length;e++){const a=n[e],r=n[e+1],s=0===e&&0===t||t>=a.parentElement.offsetTop+10&&(!r||t<r.parentElement.offsetTop-10),l=decodeURIComponent(this.$route.hash);if(s&&l!==decodeURIComponent(a.hash)){const t=a;if(i===o)for(let t=e+1;t<n.length;t++)if(l===decodeURIComponent(n[t].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(t.hash),()=>{this.$nextTick(()=>{this.$vuepress.$set("disableScrollBehavior",!1)})})}}}},beforeDestroy(){window.removeEventListener("scroll",this.onScroll)}},xs=t(24),Cs=t.n(xs),Ds={mounted(){Cs.a.configure({showSpinner:!1}),this.$router.beforeEach((e,n,t)=>{e.path===n.path||Ht.component(e.name)||Cs.a.start(),t()}),this.$router.afterEach(()=>{Cs.a.done(),this.isSidebarOpen=!1})}},Ps=t(92),Is=t.n(Ps),_s={mounted(){Is.a.polyfill()}},Es=(t(235),Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}),Os=function(e){return"IMG"===e.tagName},As=function(e){return e&&1===e.nodeType},Us=function(e){return".svg"===(e.currentSrc||e.src).substr(-4).toLowerCase()},Ms=function(e){try{return Array.isArray(e)?e.filter(Os):function(e){return NodeList.prototype.isPrototypeOf(e)}(e)?[].slice.call(e).filter(Os):As(e)?[e].filter(Os):"string"==typeof e?[].slice.call(document.querySelectorAll(e)).filter(Os):[]}catch(e){throw new TypeError("The provided selector is invalid.\nExpects a CSS selector, a Node element, a NodeList or an array.\nSee: https://github.com/francoischalifour/medium-zoom")}},Ls=function(e){var n=document.createElement("div");return n.classList.add("medium-zoom-overlay"),n.style.background=e,n},Bs=function(e){var n=e.getBoundingClientRect(),t=n.top,o=n.left,i=n.width,a=n.height,r=e.cloneNode(),s=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,l=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;return r.removeAttribute("id"),r.style.position="absolute",r.style.top=t+s+"px",r.style.left=o+l+"px",r.style.width=i+"px",r.style.height=a+"px",r.style.transform="",r},Rs=function(e,n){var t=Es({bubbles:!1,cancelable:!1,detail:void 0},n);if("function"==typeof window.CustomEvent)return new CustomEvent(e,t);var o=document.createEvent("CustomEvent");return o.initCustomEvent(e,t.bubbles,t.cancelable,t.detail),o};!function(e,n){void 0===n&&(n={});var t=n.insertAt;if(e&&"undefined"!=typeof document){var o=document.head||document.getElementsByTagName("head")[0],i=document.createElement("style");i.type="text/css","top"===t&&o.firstChild?o.insertBefore(i,o.firstChild):o.appendChild(i),i.styleSheet?i.styleSheet.cssText=e:i.appendChild(document.createTextNode(e))}}(".medium-zoom-overlay{position:fixed;top:0;right:0;bottom:0;left:0;opacity:0;transition:opacity .3s;will-change:opacity}.medium-zoom--opened .medium-zoom-overlay{cursor:pointer;cursor:zoom-out;opacity:1}.medium-zoom-image{cursor:pointer;cursor:zoom-in;transition:transform .3s cubic-bezier(.2,0,.2,1)!important}.medium-zoom-image--hidden{visibility:hidden}.medium-zoom-image--opened{position:relative;cursor:pointer;cursor:zoom-out;will-change:transform}");var Fs=function e(n){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=window.Promise||function(e){function n(){}e(n,n)},i=function(e){var n=e.target;n!==C?-1!==b.indexOf(n)&&m({target:n}):f()},a=function(){if(!S&&x.original){var e=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;Math.abs(k-e)>T.scrollOffset&&setTimeout(f,150)}},r=function(e){var n=e.key||e.keyCode;"Escape"!==n&&"Esc"!==n&&27!==n||f()},s=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=e;if(e.background&&(C.style.background=e.background),e.container&&e.container instanceof Object&&(n.container=Es({},T.container,e.container)),e.template){var t=As(e.template)?e.template:document.querySelector(e.template);n.template=t}return T=Es({},T,n),b.forEach((function(e){e.dispatchEvent(Rs("medium-zoom:update",{detail:{zoom:D}}))})),D},l=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return e(Es({},T,n))},d=function(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];var o=n.reduce((function(e,n){return[].concat(e,Ms(n))}),[]);return o.filter((function(e){return-1===b.indexOf(e)})).forEach((function(e){b.push(e),e.classList.add("medium-zoom-image")})),w.forEach((function(e){var n=e.type,t=e.listener,i=e.options;o.forEach((function(e){e.addEventListener(n,t,i)}))})),D},c=function(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];x.zoomed&&f();var o=n.length>0?n.reduce((function(e,n){return[].concat(e,Ms(n))}),[]):b;return o.forEach((function(e){e.classList.remove("medium-zoom-image"),e.dispatchEvent(Rs("medium-zoom:detach",{detail:{zoom:D}}))})),b=b.filter((function(e){return-1===o.indexOf(e)})),D},h=function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return b.forEach((function(o){o.addEventListener("medium-zoom:"+e,n,t)})),w.push({type:"medium-zoom:"+e,listener:n,options:t}),D},u=function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return b.forEach((function(o){o.removeEventListener("medium-zoom:"+e,n,t)})),w=w.filter((function(t){return!(t.type==="medium-zoom:"+e&&t.listener.toString()===n.toString())})),D},p=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=e.target,t=function(){var e={width:document.documentElement.clientWidth,height:document.documentElement.clientHeight,left:0,top:0,right:0,bottom:0},n=void 0,t=void 0;if(T.container)if(T.container instanceof Object)n=(e=Es({},e,T.container)).width-e.left-e.right-2*T.margin,t=e.height-e.top-e.bottom-2*T.margin;else{var o=(As(T.container)?T.container:document.querySelector(T.container)).getBoundingClientRect(),i=o.width,a=o.height,r=o.left,s=o.top;e=Es({},e,{width:i,height:a,left:r,top:s})}n=n||e.width-2*T.margin,t=t||e.height-2*T.margin;var l=x.zoomedHd||x.original,d=Us(l)?n:l.naturalWidth||n,c=Us(l)?t:l.naturalHeight||t,h=l.getBoundingClientRect(),u=h.top,p=h.left,f=h.width,m=h.height,g=Math.min(d,n)/f,y=Math.min(c,t)/m,v=Math.min(g,y),b="scale("+v+") translate3d("+((n-f)/2-p+T.margin+e.left)/v+"px, "+((t-m)/2-u+T.margin+e.top)/v+"px, 0)";x.zoomed.style.transform=b,x.zoomedHd&&(x.zoomedHd.style.transform=b)};return new o((function(e){if(n&&-1===b.indexOf(n))e(D);else{if(x.zoomed)e(D);else{if(n)x.original=n;else{if(!(b.length>0))return void e(D);var o=b;x.original=o[0]}if(x.original.dispatchEvent(Rs("medium-zoom:open",{detail:{zoom:D}})),k=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,S=!0,x.zoomed=Bs(x.original),document.body.appendChild(C),T.template){var i=As(T.template)?T.template:document.querySelector(T.template);x.template=document.createElement("div"),x.template.appendChild(i.content.cloneNode(!0)),document.body.appendChild(x.template)}if(document.body.appendChild(x.zoomed),window.requestAnimationFrame((function(){document.body.classList.add("medium-zoom--opened")})),x.original.classList.add("medium-zoom-image--hidden"),x.zoomed.classList.add("medium-zoom-image--opened"),x.zoomed.addEventListener("click",f),x.zoomed.addEventListener("transitionend",(function n(){S=!1,x.zoomed.removeEventListener("transitionend",n),x.original.dispatchEvent(Rs("medium-zoom:opened",{detail:{zoom:D}})),e(D)})),x.original.getAttribute("data-zoom-src")){x.zoomedHd=x.zoomed.cloneNode(),x.zoomedHd.removeAttribute("srcset"),x.zoomedHd.removeAttribute("sizes"),x.zoomedHd.src=x.zoomed.getAttribute("data-zoom-src"),x.zoomedHd.onerror=function(){clearInterval(a),console.warn("Unable to reach the zoom image target "+x.zoomedHd.src),x.zoomedHd=null,t()};var a=setInterval((function(){x.zoomedHd.complete&&(clearInterval(a),x.zoomedHd.classList.add("medium-zoom-image--opened"),x.zoomedHd.addEventListener("click",f),document.body.appendChild(x.zoomedHd),t())}),10)}else if(x.original.hasAttribute("srcset")){x.zoomedHd=x.zoomed.cloneNode(),x.zoomedHd.removeAttribute("sizes"),x.zoomedHd.removeAttribute("loading");var r=x.zoomedHd.addEventListener("load",(function(){x.zoomedHd.removeEventListener("load",r),x.zoomedHd.classList.add("medium-zoom-image--opened"),x.zoomedHd.addEventListener("click",f),document.body.appendChild(x.zoomedHd),t()}))}else t()}}}))},f=function(){return new o((function(e){if(!S&&x.original){S=!0,document.body.classList.remove("medium-zoom--opened"),x.zoomed.style.transform="",x.zoomedHd&&(x.zoomedHd.style.transform=""),x.template&&(x.template.style.transition="opacity 150ms",x.template.style.opacity=0),x.original.dispatchEvent(Rs("medium-zoom:close",{detail:{zoom:D}})),x.zoomed.addEventListener("transitionend",(function n(){x.original.classList.remove("medium-zoom-image--hidden"),document.body.removeChild(x.zoomed),x.zoomedHd&&document.body.removeChild(x.zoomedHd),document.body.removeChild(C),x.zoomed.classList.remove("medium-zoom-image--opened"),x.template&&document.body.removeChild(x.template),S=!1,x.zoomed.removeEventListener("transitionend",n),x.original.dispatchEvent(Rs("medium-zoom:closed",{detail:{zoom:D}})),x.original=null,x.zoomed=null,x.zoomedHd=null,x.template=null,e(D)}))}else e(D)}))},m=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=e.target;return x.original?f():p({target:n})},g=function(){return T},y=function(){return b},v=function(){return x.original},b=[],w=[],S=!1,k=0,T=t,x={original:null,zoomed:null,zoomedHd:null,template:null};"[object Object]"===Object.prototype.toString.call(n)?T=n:(n||"string"==typeof n)&&d(n),T=Es({margin:0,background:"#fff",scrollOffset:40,container:null,template:null},T);var C=Ls(T.background);document.addEventListener("click",i),document.addEventListener("keyup",r),document.addEventListener("scroll",a),window.addEventListener("resize",f);var D={open:p,close:f,toggle:m,update:s,clone:l,attach:d,detach:c,on:h,off:u,getOptions:g,getImages:y,getZoomedImage:v};return D},js=[gs,Ts,Ds,_s,{data:()=>({zoom:null}),mounted(){this.updateZoom()},updated(){this.updateZoom()},methods:{updateZoom(){setTimeout(()=>{this.zoom&&this.zoom.detach(),this.zoom=Fs(".theme-succinct-content :not(a) > img",{background:"var(--bodyBgColor)"})},1e3)}}}],zs={name:"GlobalLayout",computed:{layout(){const e=this.getLayout();return hs("layout",e),Ht.component(e)}},methods:{getLayout(){if(this.$page.path){const e=this.$page.frontmatter.layout;return e&&(this.$vuepress.getLayoutAsyncComponent(e)||this.$vuepress.getVueComponent(e))?e:"Layout"}return"NotFound"}}},Ns=t(10),Ws=Object(Ns.a)(zs,(function(){return(0,this._self._c)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(e,n,t){switch(n){case"components":e[n]||(e[n]={}),Object.assign(e[n],t);break;case"mixins":e[n]||(e[n]=[]),e[n].push(...t);break;default:throw new Error("Unknown option name.")}}(Ws,"mixins",js);const $s=[{name:"v-3c70dfbe",path:"/CONTRIBUTING.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-3c70dfbe").then(t)}},{name:"v-3903d112",path:"/Desktops/desktop-disable.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-3903d112").then(t)}},{name:"v-0295caa9",path:"/Desktops/desktop-ec.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-0295caa9").then(t)}},{name:"v-72ea6c07",path:"/Laptops/backlight-methods/manual.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-72ea6c07").then(t)}},{name:"v-3e272bdd",path:"/Laptops/backlight-methods/prebuilt.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-3e272bdd").then(t)}},{name:"v-50c102a9",path:"/Laptops/backlight.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-50c102a9").then(t)}},{name:"v-7b1cc85f",path:"/Laptops/laptop-disable.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-7b1cc85f").then(t)}},{name:"v-3bc1ed2e",path:"/Laptops/laptop-ec.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-3bc1ed2e").then(t)}},{name:"v-685cab09",path:"/Laptops/trackpad-methods/manual.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-685cab09").then(t)}},{name:"v-4a0047e9",path:"/Laptops/trackpad-methods/prebuilt.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-4a0047e9").then(t)}},{name:"v-683b1e0e",path:"/Laptops/trackpad.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-683b1e0e").then(t)}},{name:"v-2d4057e1",path:"/Manual/compile.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-2d4057e1").then(t)}},{name:"v-9a3ecb2e",path:"/Manual/dump.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-9a3ecb2e").then(t)}},{name:"v-20cdc812",path:"/",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-20cdc812").then(t)}},{path:"/index.html",redirect:"/"},{name:"v-236170ee",path:"/SUMMARY.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-236170ee").then(t)}},{name:"v-426c69e9",path:"/Universal/awac-methods/manual-hedt.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-426c69e9").then(t)}},{name:"v-18059cc9",path:"/Universal/awac-methods/manual.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-18059cc9").then(t)}},{name:"v-029f7a69",path:"/Universal/awac-methods/prebuilt.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-029f7a69").then(t)}},{name:"v-44ef01a9",path:"/Universal/awac-methods/ssdttime.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-44ef01a9").then(t)}},{name:"v-6ca0e87d",path:"/Universal/awac.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-6ca0e87d").then(t)}},{name:"v-4de68e61",path:"/Universal/ec-fix.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-4de68e61").then(t)}},{name:"v-9136e2ee",path:"/Universal/ec-methods/manual.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-9136e2ee").then(t)}},{name:"v-3b8fbee9",path:"/Universal/ec-methods/prebuilt.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-3b8fbee9").then(t)}},{name:"v-4d1042ae",path:"/Universal/ec-methods/ssdttime.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-4d1042ae").then(t)}},{name:"v-4b73ca6e",path:"/Universal/imei-methods/manual.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-4b73ca6e").then(t)}},{name:"v-86b8972e",path:"/Universal/imei-methods/prebuilt.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-86b8972e").then(t)}},{name:"v-e2b716c6",path:"/Universal/imei.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-e2b716c6").then(t)}},{name:"v-e20ae26e",path:"/Universal/irq.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-e20ae26e").then(t)}},{name:"v-8fd4fe0e",path:"/Universal/nvram-methods/manual.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-8fd4fe0e").then(t)}},{name:"v-23bb50cf",path:"/Universal/nvram-methods/prebuilt.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-23bb50cf").then(t)}},{name:"v-8167976a",path:"/Universal/nvram-methods/ssdttime.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-8167976a").then(t)}},{name:"v-66b55b09",path:"/Universal/nvram.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-66b55b09").then(t)}},{name:"v-2a2d6b89",path:"/Universal/plug-methods/manual.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-2a2d6b89").then(t)}},{name:"v-75d09ea9",path:"/Universal/plug-methods/prebuilt.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-75d09ea9").then(t)}},{name:"v-8fbfb42e",path:"/Universal/plug-methods/ssdttime.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-8fbfb42e").then(t)}},{name:"v-59fc2811",path:"/Universal/plug.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-59fc2811").then(t)}},{name:"v-7e32a629",path:"/Universal/rhub-methods/manual.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-7e32a629").then(t)}},{name:"v-dbf69aee",path:"/Universal/rhub-methods/prebuilt.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-dbf69aee").then(t)}},{name:"v-57578c6e",path:"/Universal/rhub-methods/ssdttime.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-57578c6e").then(t)}},{name:"v-59ad2227",path:"/Universal/rhub.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-59ad2227").then(t)}},{name:"v-9bd253ce",path:"/Universal/smbus-methods/manual.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-9bd253ce").then(t)}},{name:"v-b7b5f5ee",path:"/Universal/smbus.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-b7b5f5ee").then(t)}},{name:"v-4dd249e9",path:"/Universal/spoof.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-4dd249e9").then(t)}},{name:"v-8a61aaee",path:"/Universal/unc0-methods/manual.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-8a61aaee").then(t)}},{name:"v-1b473ba9",path:"/Universal/unc0-methods/prebuilt.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-1b473ba9").then(t)}},{name:"v-a8d253be",path:"/Universal/unc0.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-a8d253be").then(t)}},{name:"v-4a34dbe9",path:"/ssdt-methods/ssdt-methods.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-4a34dbe9").then(t)}},{name:"v-ad25710e",path:"/ssdt-methods/ssdt-prebuilt.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-ad25710e").then(t)}},{name:"v-c31fbd6e",path:"/ssdt-platform.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-c31fbd6e").then(t)}},{name:"v-e960d7ee",path:"/troubleshooting.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-e960d7ee").then(t)}},{name:"v-ba4bb512",path:"/ssdt-methods/ssdt-long.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-ba4bb512").then(t)}},{name:"v-225b852a",path:"/ssdt-methods/ssdt-easy.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-225b852a").then(t)}},{name:"v-31c08e49",path:"/cleanup.html",component:Ws,beforeEnter:(e,n,t)=>{cs("Layout","v-31c08e49").then(t)}},{path:"*",component:Ws}],Gs={title:"Getting Started With ACPI",description:"",base:"/Getting-Started-With-ACPI/",headTags:[["meta",{name:"theme-color",content:"#3eaf7c"}],["meta",{name:"apple-mobile-web-app-capable",content:"yes"}],["meta",{name:"apple-mobile-web-app-status-bar-style",content:"black"}],["link",{rel:"'stylesheet",href:"/Getting-Started-With-ACPI/styles/website.css"}]],pages:[{title:"Supporting the guides",frontmatter:{},regularPath:"/CONTRIBUTING.html",relativePath:"CONTRIBUTING.md",key:"v-3c70dfbe",path:"/CONTRIBUTING.html",headers:[{level:2,title:"Contributing via Issues",slug:"contributing-via-issues",normalizedTitle:"contributing via issues",charIndex:244},{level:2,title:"Contributing via PRs",slug:"contributing-via-prs",normalizedTitle:"contributing via prs",charIndex:271},{level:3,title:"How to Contribute",slug:"how-to-contribute",normalizedTitle:"how to contribute",charIndex:2072},{level:3,title:"Tips",slug:"tips",normalizedTitle:"tips",charIndex:2844}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"Contributing via Issues Contributing via PRs How to Contribute Tips",content:"# Supporting the guides\n\nNote: This is a community run guide which is not officially endorsed by Acidanthera. Please do not bug Acidanthera with issues about this guide.\n\nWant to help support the guide? Well there's some ways you can help!\n\n * Contributing via Issues\n * Contributing via PRs\n\nNote: For those wanting to contribute financially, we seriously appreciate it but we're a non-profit organization. We do this to teach, not to make money. If you have some money left over we highly recommend donating it to a charity. Crohn's and Colitis Canada is one we recommend if you have none on mind.\n\n\n# Contributing via Issues\n\nContributing via Issues is pretty simple but there are some rules:\n\n * Keep issues tab dedicated to guides issues only, no personal hackintosh issues. It is not a place to discuss installation issues.\n * If for a typo or better clarification, please indicate what page it was on. Would appreciate not going for a scavenger hunt on where these issues are.\n\nYou can find the issues tab here: Getting Started With ACPI Issues\n\n\n# Contributing via PRs\n\nSome guidelines when contributing via PRs:\n\n * Use your brain (please).\n * Proofread your submissions.\n * Pull Requests can be denied if we feel it does not fit or has inaccurate information. We will generally tell you why it is rejected though or ask for revisions.\n   * We would also appreciate sources for any bigger commits to make it easier on us to verify the info your provide is valid\n * Images must be hosted locally in the repo under the /images/ folder\n * Your PR must be run through a markdown lint and have all issues fixed.\n * In general, try to avoid using \"non-Acidanthera\" tools when possible. Generally we want to avoid use of third-party tools - though if it's impossible otherwise, then you can link it.\n   * Tools explicitly banned:\n     * UniBeast, MultiBeast and KextBeast\n       * More info can be found here: Tonymacx86-stance\n     * TransMac\n       * Known for creating borked USB drives\n     * Niresh Installers\n       * We'd like to avoid piracy with the guides\n\n\n# How to Contribute\n\nBest way to test your commits and make sure they are formatted correctly is downloading nodejs and yarn then getting the VuePress and markdownlint-cli tools. When you run yarn dev, it will set up a local webserver which you can connect to view the changes you made. markdownlint * will throw any errors at you about formatting as well, and markdownlint -f * will attempt to fix these.\n\n * Fork this repo\n * Install the required tools:\n   * brew install yarn\n   * npm install -g markdownlint-cli\n * Make your changes.\n * Build the site:\n   * yarn install (To install all the required plugins)\n   * yarn dev (Preview the site)\n     * Can be found at http://localhost:8080\n * Check markdown format:\n   * markdownlint -f * (To fix any potential issues)\n\n\n# Tips\n\nSome tools that make contributing a bit easier:\n\n * Typora for real time markdown rendering.\n * TextMate for easy and powerful mass find/replace.\n * Github Desktop for more user friendly GUI.",normalizedContent:"# supporting the guides\n\nnote: this is a community run guide which is not officially endorsed by acidanthera. please do not bug acidanthera with issues about this guide.\n\nwant to help support the guide? well there's some ways you can help!\n\n * contributing via issues\n * contributing via prs\n\nnote: for those wanting to contribute financially, we seriously appreciate it but we're a non-profit organization. we do this to teach, not to make money. if you have some money left over we highly recommend donating it to a charity. crohn's and colitis canada is one we recommend if you have none on mind.\n\n\n# contributing via issues\n\ncontributing via issues is pretty simple but there are some rules:\n\n * keep issues tab dedicated to guides issues only, no personal hackintosh issues. it is not a place to discuss installation issues.\n * if for a typo or better clarification, please indicate what page it was on. would appreciate not going for a scavenger hunt on where these issues are.\n\nyou can find the issues tab here: getting started with acpi issues\n\n\n# contributing via prs\n\nsome guidelines when contributing via prs:\n\n * use your brain (please).\n * proofread your submissions.\n * pull requests can be denied if we feel it does not fit or has inaccurate information. we will generally tell you why it is rejected though or ask for revisions.\n   * we would also appreciate sources for any bigger commits to make it easier on us to verify the info your provide is valid\n * images must be hosted locally in the repo under the /images/ folder\n * your pr must be run through a markdown lint and have all issues fixed.\n * in general, try to avoid using \"non-acidanthera\" tools when possible. generally we want to avoid use of third-party tools - though if it's impossible otherwise, then you can link it.\n   * tools explicitly banned:\n     * unibeast, multibeast and kextbeast\n       * more info can be found here: tonymacx86-stance\n     * transmac\n       * known for creating borked usb drives\n     * niresh installers\n       * we'd like to avoid piracy with the guides\n\n\n# how to contribute\n\nbest way to test your commits and make sure they are formatted correctly is downloading nodejs and yarn then getting the vuepress and markdownlint-cli tools. when you run yarn dev, it will set up a local webserver which you can connect to view the changes you made. markdownlint * will throw any errors at you about formatting as well, and markdownlint -f * will attempt to fix these.\n\n * fork this repo\n * install the required tools:\n   * brew install yarn\n   * npm install -g markdownlint-cli\n * make your changes.\n * build the site:\n   * yarn install (to install all the required plugins)\n   * yarn dev (preview the site)\n     * can be found at http://localhost:8080\n * check markdown format:\n   * markdownlint -f * (to fix any potential issues)\n\n\n# tips\n\nsome tools that make contributing a bit easier:\n\n * typora for real time markdown rendering.\n * textmate for easy and powerful mass find/replace.\n * github desktop for more user friendly gui.",charsets:{}},{title:"Disabling desktops unsupported GPUs(SSDT-GPU-DISABLE)",frontmatter:{},regularPath:"/Desktops/desktop-disable.html",relativePath:"Desktops/desktop-disable.md",key:"v-3903d112",path:"/Desktops/desktop-disable.html",headers:[{level:2,title:"Finding the ACPI Path of the GPU",slug:"finding-the-acpi-path-of-the-gpu",normalizedTitle:"finding the acpi path of the gpu",charIndex:60},{level:2,title:"Making the SSDT",slug:"making-the-ssdt",normalizedTitle:"making the ssdt",charIndex:96},{level:2,title:"Now you're ready to compile the SSDT!",slug:"now-you-re-ready-to-compile-the-ssdt",normalizedTitle:"now you're ready to compile the ssdt!",charIndex:1644}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"Finding the ACPI Path of the GPU Making the SSDT Now you're ready to compile the SSDT!",content:"# Disabling desktops unsupported GPUs(SSDT-GPU-DISABLE)\n\n * Finding the ACPI Path of the GPU\n * Making the SSDT\n\nThis is mainly needed for GPUs that are not supported in macOS, mainly this will be Nvidia users who wish to pair an AMD GPU for macOS use. While WhateverGreen does support the boot-arg -wegnoegpu, this only works when running on iGPU so for the rest of us we'll need to make an SSDT.\n\nSo to disable a specific GPU, we need to find a couple things:\n\n * ACPI Path of the GPU\n * SSDT-GPU-DISABLE\n\n\n# Finding the ACPI Path of the GPU\n\nTo find the PCI path of a GPU is fairly simple, best way to find it is running Windows:\n\n * Open Device Manager\n * Select Display Adapters, then right click your GPU and select Properties\n * Under the Details Tab, search for \"Location Paths\"\n   * Note some GPUs may be hiding under \"BIOS device name\"\n\n\n\n\n\nThe second \"ACPI\" is what we care about:\n\nACPI(_SB_)#ACPI(PC02)#ACPI(BR2A)#ACPI(PEGP)#PCI(0000)#PCI(0000)\n\n\nNow converting this to an ACPI path is quite simple, remove the #ACPI and #PCI(0000):\n\n`_SB_.PC02.BR2A.PEGP\n\n\nAnd voila! We've found our ACPI path, now that we have everything we're ready to get cooking\n\n\n# Making the SSDT\n\nTo start grab our SSDT-GPU-DISABLE and open it up. Here there's a couple things to change:\n\nExternal (_SB_.PCI0.PEG0.PEGP, DeviceObj)\nMethod (_SB.PCI0.PEG0.PEGP._DSM, 4, NotSerialized)\n\n\nFor our example, we'll change all mentions of :\n\n * PCI0 with PC02\n * PEG0 with BR2A\n\nHint: If your ACPI path is a bit shorter than the example, this is fine. Just make sure the ACPI paths are correct to your device, some users may also need to adapt _SB_ to their path\n\n\n# Now you're ready to compile the SSDT!",normalizedContent:"# disabling desktops unsupported gpus(ssdt-gpu-disable)\n\n * finding the acpi path of the gpu\n * making the ssdt\n\nthis is mainly needed for gpus that are not supported in macos, mainly this will be nvidia users who wish to pair an amd gpu for macos use. while whatevergreen does support the boot-arg -wegnoegpu, this only works when running on igpu so for the rest of us we'll need to make an ssdt.\n\nso to disable a specific gpu, we need to find a couple things:\n\n * acpi path of the gpu\n * ssdt-gpu-disable\n\n\n# finding the acpi path of the gpu\n\nto find the pci path of a gpu is fairly simple, best way to find it is running windows:\n\n * open device manager\n * select display adapters, then right click your gpu and select properties\n * under the details tab, search for \"location paths\"\n   * note some gpus may be hiding under \"bios device name\"\n\n\n\n\n\nthe second \"acpi\" is what we care about:\n\nacpi(_sb_)#acpi(pc02)#acpi(br2a)#acpi(pegp)#pci(0000)#pci(0000)\n\n\nnow converting this to an acpi path is quite simple, remove the #acpi and #pci(0000):\n\n`_sb_.pc02.br2a.pegp\n\n\nand voila! we've found our acpi path, now that we have everything we're ready to get cooking\n\n\n# making the ssdt\n\nto start grab our ssdt-gpu-disable and open it up. here there's a couple things to change:\n\nexternal (_sb_.pci0.peg0.pegp, deviceobj)\nmethod (_sb.pci0.peg0.pegp._dsm, 4, notserialized)\n\n\nfor our example, we'll change all mentions of :\n\n * pci0 with pc02\n * peg0 with br2a\n\nhint: if your acpi path is a bit shorter than the example, this is fine. just make sure the acpi paths are correct to your device, some users may also need to adapt _sb_ to their path\n\n\n# now you're ready to compile the ssdt!",charsets:{}},{title:"Fixing Embedded Controller (Desktop)",frontmatter:{},regularPath:"/Desktops/desktop-ec.html",relativePath:"Desktops/desktop-ec.md",key:"v-0295caa9",path:"/Desktops/desktop-ec.html",headers:[{level:2,title:"You'll want to go to SSDT-EC under the Universal tab for the new SSDT-EC page",slug:"you-ll-want-to-go-to-ssdt-ec-under-the-universal-tab-for-the-new-ssdt-ec-page",normalizedTitle:"you'll want to go to ssdt-ec under the universal tab for the new ssdt-ec page",charIndex:43}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"You'll want to go to SSDT-EC under the Universal tab for the new SSDT-EC page",content:"# Fixing Embedded Controller (Desktop)\n\n\n# You'll want to go to SSDT-EC under the Universal tab for the new SSDT-EC page",normalizedContent:"# fixing embedded controller (desktop)\n\n\n# you'll want to go to ssdt-ec under the universal tab for the new ssdt-ec page",charsets:{}},{title:"Fixing Backlight: Manual",frontmatter:{},regularPath:"/Laptops/backlight-methods/manual.html",relativePath:"Laptops/backlight-methods/manual.md",key:"v-72ea6c07",path:"/Laptops/backlight-methods/manual.html",headers:[{level:2,title:"Finding the ACPI path",slug:"finding-the-acpi-path",normalizedTitle:"finding the acpi path",charIndex:31},{level:3,title:"On MacOS",slug:"on-macos",normalizedTitle:"on macos",charIndex:148},{level:3,title:"On Linux",slug:"on-linux",normalizedTitle:"on linux",charIndex:236},{level:3,title:"On Windows",slug:"on-windows",normalizedTitle:"on windows",charIndex:1521},{level:2,title:"Edits to the sample SSDT",slug:"edits-to-the-sample-ssdt",normalizedTitle:"edits to the sample ssdt",charIndex:56},{level:2,title:"Compiling the SSDT",slug:"compiling-the-ssdt",normalizedTitle:"compiling the ssdt",charIndex:84},{level:2,title:"Wrapping up",slug:"wrapping-up",normalizedTitle:"wrapping up",charIndex:106}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"Finding the ACPI path On MacOS On Linux On Windows Edits to the sample SSDT Compiling the SSDT Wrapping up",content:"# Fixing Backlight: Manual\n\n * Finding the ACPI path\n * Edits to the sample SSDT\n * Compiling the SSDT\n * Wrapping up\n\n\n# Finding the ACPI path\n\n\n# On MacOS\n\nUnfortunately there is no guidance for this yet. Try on Linux or Windows.\n\n\n# On Linux\n\nThese steps work on Ubuntu and may work on other distros. If not then try the procedure for Windows.\nUse the lspci command to get your display adapters PCI identification number.\nThe output here will be different on your system!\n\n# lspci -D\n0000:00:00.0 Host bridge: Intel Corporation 440FX - 82441FX PMC [Natoma] (rev 02)\n0000:00:01.0 ISA bridge: Intel Corporation 82371SB PIIX3 ISA [Natoma/Triton II]\n0000:00:01.1 IDE interface: Intel Corporation 82371AB/EB/MB PIIX4 IDE (rev 01)\n0000:00:02.0 VGA compatible controller: VMware SVGA II Adapter\n0000:00:03.0 Ethernet controller: Intel Corporation 82540EM Gigabit Ethernet Controller (rev 02)\n0000:00:04.0 System peripheral: InnoTek Systemberatung GmbH VirtualBox Guest Service\n\n\nSearch the output for an entry that looks like your display adapter. E.g: In this example we have VGA compatible controller with PCI number 0000:00:02.0. The format of this number is domain:bus:device:function.\n\nNow use this command from a Terminal to find the ACPI path for your display adapter\n# cat /sys/class/pci_bus/<domain:bus>/device/<domain:bus:device:function>/firmware_node/path\n\nFor example\n\n# cat /sys/class/pci_bus/0000:00/device/0000:00:02.0/firmware_node/path\n\\_SB_.PCI0.GFX0  <-- The ACPI path\n\n\nFurther details at this link.\n\n\n# On Windows\n\nOpen DeviceManager, and head to the following:\n\nDevice Manager -> Display Adapters -> Properties -> Details > BIOS device name\n\n\n\n\nFrom the above example, we can see our display is hooked up to \\_SB.PCI0.GFX0\n\n\n# Edits to the sample SSDT\n\nNow that we have our ACPI path, lets grab our SSDT and get to work:\n\n * SSDT-PNLF.dsl\n\nBy default, this uses \\_SB.PCI0.GFX0 for the pathing. you'll want to rename accordingly. For this example, we'll assume your pathing is \\_SB.PCI0.GPU0:\n\nBefore:\n\nExternal (_SB_.PCI0.GFX0, DeviceObj) <- Rename this\n\nScope (_SB.PCI0.GFX0) <- Rename this\n\nDevice(_SB.PCI0.GFX0.PNLF) <- Rename this\n\n\n\n\nFollowing the example pathing we found, the SSDT should look something like this:\n\nAfter:\n\nExternal (_SB_.PCI0.GPU0, DeviceObj) <- Renamed\n\nScope (_SB.PCI0.GPU0) <- Renamed\n\nDevice(_SB.PCI0.GPU0.PNLF) <- Renamed\n\n\n\n\n\n# Compiling the SSDT\n\nWith the SSDT done, you're now ready to compile the SSDT!\n\n\n# Wrapping up\n\nOnce you're done making your SSDT, either head to the next page to finish the rest of the SSDTs or head here if you're ready to wrap up:\n\n * Cleanup",normalizedContent:"# fixing backlight: manual\n\n * finding the acpi path\n * edits to the sample ssdt\n * compiling the ssdt\n * wrapping up\n\n\n# finding the acpi path\n\n\n# on macos\n\nunfortunately there is no guidance for this yet. try on linux or windows.\n\n\n# on linux\n\nthese steps work on ubuntu and may work on other distros. if not then try the procedure for windows.\nuse the lspci command to get your display adapters pci identification number.\nthe output here will be different on your system!\n\n# lspci -d\n0000:00:00.0 host bridge: intel corporation 440fx - 82441fx pmc [natoma] (rev 02)\n0000:00:01.0 isa bridge: intel corporation 82371sb piix3 isa [natoma/triton ii]\n0000:00:01.1 ide interface: intel corporation 82371ab/eb/mb piix4 ide (rev 01)\n0000:00:02.0 vga compatible controller: vmware svga ii adapter\n0000:00:03.0 ethernet controller: intel corporation 82540em gigabit ethernet controller (rev 02)\n0000:00:04.0 system peripheral: innotek systemberatung gmbh virtualbox guest service\n\n\nsearch the output for an entry that looks like your display adapter. e.g: in this example we have vga compatible controller with pci number 0000:00:02.0. the format of this number is domain:bus:device:function.\n\nnow use this command from a terminal to find the acpi path for your display adapter\n# cat /sys/class/pci_bus/<domain:bus>/device/<domain:bus:device:function>/firmware_node/path\n\nfor example\n\n# cat /sys/class/pci_bus/0000:00/device/0000:00:02.0/firmware_node/path\n\\_sb_.pci0.gfx0  <-- the acpi path\n\n\nfurther details at this link.\n\n\n# on windows\n\nopen devicemanager, and head to the following:\n\ndevice manager -> display adapters -> properties -> details > bios device name\n\n\n\n\nfrom the above example, we can see our display is hooked up to \\_sb.pci0.gfx0\n\n\n# edits to the sample ssdt\n\nnow that we have our acpi path, lets grab our ssdt and get to work:\n\n * ssdt-pnlf.dsl\n\nby default, this uses \\_sb.pci0.gfx0 for the pathing. you'll want to rename accordingly. for this example, we'll assume your pathing is \\_sb.pci0.gpu0:\n\nbefore:\n\nexternal (_sb_.pci0.gfx0, deviceobj) <- rename this\n\nscope (_sb.pci0.gfx0) <- rename this\n\ndevice(_sb.pci0.gfx0.pnlf) <- rename this\n\n\n\n\nfollowing the example pathing we found, the ssdt should look something like this:\n\nafter:\n\nexternal (_sb_.pci0.gpu0, deviceobj) <- renamed\n\nscope (_sb.pci0.gpu0) <- renamed\n\ndevice(_sb.pci0.gpu0.pnlf) <- renamed\n\n\n\n\n\n# compiling the ssdt\n\nwith the ssdt done, you're now ready to compile the ssdt!\n\n\n# wrapping up\n\nonce you're done making your ssdt, either head to the next page to finish the rest of the ssdts or head here if you're ready to wrap up:\n\n * cleanup",charsets:{}},{title:"Fixing Backlight: Prebuilt",frontmatter:{},regularPath:"/Laptops/backlight-methods/prebuilt.html",relativePath:"Laptops/backlight-methods/prebuilt.md",key:"v-3e272bdd",path:"/Laptops/backlight-methods/prebuilt.html",lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:null,content:"# Fixing Backlight: Prebuilt\n\nBy far the easiest method, all you need to do is download the following file:\n\n * SSDT-PNLF.aml\n\nMain things to note with this method:\n\n * Assumes GPU pathing, works great for 99% of devices but if you're having issues controlling backlight this may be something to look at\n * Doesn't really teach you anything\n   * For most, this doesn't matter. But to some knowing what makes your hackintosh tick is part of the journey",normalizedContent:"# fixing backlight: prebuilt\n\nby far the easiest method, all you need to do is download the following file:\n\n * ssdt-pnlf.aml\n\nmain things to note with this method:\n\n * assumes gpu pathing, works great for 99% of devices but if you're having issues controlling backlight this may be something to look at\n * doesn't really teach you anything\n   * for most, this doesn't matter. but to some knowing what makes your hackintosh tick is part of the journey",charsets:{}},{title:"Fixing Backlight (SSDT-PNLF)",frontmatter:{},regularPath:"/Laptops/backlight.html",relativePath:"Laptops/backlight.md",key:"v-50c102a9",path:"/Laptops/backlight.html",headers:[{level:2,title:"What this SSDT does",slug:"what-this-ssdt-does",normalizedTitle:"what this ssdt does",charIndex:35},{level:2,title:"Methods to make this SSDT",slug:"methods-to-make-this-ssdt",normalizedTitle:"methods to make this ssdt",charIndex:58}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"What this SSDT does Methods to make this SSDT",content:"# Fixing Backlight (SSDT-PNLF)\n\n * What this SSDT does\n * Methods to make this SSDT\n\n\n# What this SSDT does\n\nThe purpose of this SSDT is to create a PNLF device for macOS to play with, specifically one with a hardware ID of APP0002. Luckily WhateverGreen will handle the rest of the work for us.\n\n\n# Methods to make this SSDT\n\nFor the backlight fix, there are 2 methods you can choose from:\n\n * Prebuilt\n * Manual",normalizedContent:"# fixing backlight (ssdt-pnlf)\n\n * what this ssdt does\n * methods to make this ssdt\n\n\n# what this ssdt does\n\nthe purpose of this ssdt is to create a pnlf device for macos to play with, specifically one with a hardware id of app0002. luckily whatevergreen will handle the rest of the work for us.\n\n\n# methods to make this ssdt\n\nfor the backlight fix, there are 2 methods you can choose from:\n\n * prebuilt\n * manual",charsets:{}},{title:"Disabling laptop dGPUs (SSDT-dGPU-Off/NoHybGfx)",frontmatter:{},regularPath:"/Laptops/laptop-disable.html",relativePath:"Laptops/laptop-disable.md",key:"v-7b1cc85f",path:"/Laptops/laptop-disable.html",headers:[{level:2,title:"Optimus Method",slug:"optimus-method",normalizedTitle:"optimus method",charIndex:318},{level:2,title:"Bumblebee Method",slug:"bumblebee-method",normalizedTitle:"bumblebee method",charIndex:336},{level:2,title:"Now you're ready to compile the SSDT!",slug:"now-you-re-ready-to-compile-the-ssdt",normalizedTitle:"now you're ready to compile the ssdt!",charIndex:2568}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"Optimus Method Bumblebee Method Now you're ready to compile the SSDT!",content:"# Disabling laptop dGPUs (SSDT-dGPU-Off/NoHybGfx)\n\nSo with laptops, we can hide the dGPU from macOS with the little boot-arg called -wegnoegpu from WhateverGreen. But one small problem, the dGPU is still pulling power draining your battery slowly. We'll be going over 2 methods for disabling the dGPU in a laptop:\n\n * Optimus Method\n * Bumblebee Method\n\nNote that this is not needed for install, but recommended for post-install\n\n\n# Optimus Method\n\nHow this works is that we call the .off method found on Optimus GPUs, this is the expected way to power off a GPU but some may find their dGPU will power back up later on. Mainly seen in Lenovo's, the Optimus method should work for most users:\n\nTo start, grab SSDT-dGPU-Off.dsl\n\nNext we need to get on Windows, and head to the following:\n\nDevice Manager -> Display Adapters -> dGPU -> Properties -> Details > BIOS device name\n\n\n * Note some GPUs may be hiding under \"BIOS device name\"\n\nThis should provided you with an ACPI path for your dGPU, most commonly:\n\n * Nvidia dGPU: \\_SB.PCI0.PEG0.PEGP\n * AMD dGPU: \\_SB.PCI0.PEGP.DGFX\n\n\n\nNow with that, we'll need to change the ACPI path in the SSDT. Main sections:\n\nExternal(_SB.PCI0.PEG0.PEGP._OFF, MethodObj)\n\n\nIf (CondRefOf(\\_SB.PCI0.PEG0.PEGP._OFF)) { \\_SB.PCI0.PEG0.PEGP._OFF() }\n\n\nOnce adapted to your config, head to the compile section\n\n * For those with sleep issues, you can refer to the original Rehabman thread\n\n\n# Bumblebee Method\n\nWith some machines, the simple .off call won't keep the card off properly, that's where the Bumblebee method comes in. This SSDT will actually send the dGPU into D3 state being the lowest power state a device can support. Credit to Maemo for the original adaptation.\n\nTo start, grab SSDT-NoHybGfx.dsl\n\nNext we need to get on Windows, and head to the following:\n\nDevice Manager -> Display Adapters -> dGPU -> Properties -> Details > BIOS device name\n\n\nThis should provided you with an ACPI path for your dGPU, most commonly:\n\n * Nvidia dGPU: \\_SB.PCI0.PEG0.PEGP\n * AMD dGPU: \\_SB.PCI0.PEGP.DGFX\n\nNow with that, we'll need to change the ACPI path in the SSDT. Main sections:\n\nExternal (_SB_.PCI0.PEG0.PEGP._DSM, MethodObj)    // dGPU ACPI Path\nExternal (_SB_.PCI0.PEG0.PEGP._PS3, MethodObj)    // dGPU ACPI Path\n\n\nIf ((CondRefOf (\\_SB.PCI0.PEG0.PEGP._DSM) && CondRefOf (\\_SB.PCI0.PEG0.PEGP._PS3)))\n\n\n // Card Off Request\n \\_SB.PCI0.PEG0.PEGP._DSM (ToUUID (\"a486d8f8-0bda-471b-a72b-6042a6b5bee0\"), 0x0100, 0x1A, Buffer (0x04)\n\n\n // Card Off\n\\_SB.PCI0.PEG0.PEGP._PS3 ()\n\n\nOnce adapted to your config, head to the compile section\n\n\n# Now you're ready to compile the SSDT!",normalizedContent:"# disabling laptop dgpus (ssdt-dgpu-off/nohybgfx)\n\nso with laptops, we can hide the dgpu from macos with the little boot-arg called -wegnoegpu from whatevergreen. but one small problem, the dgpu is still pulling power draining your battery slowly. we'll be going over 2 methods for disabling the dgpu in a laptop:\n\n * optimus method\n * bumblebee method\n\nnote that this is not needed for install, but recommended for post-install\n\n\n# optimus method\n\nhow this works is that we call the .off method found on optimus gpus, this is the expected way to power off a gpu but some may find their dgpu will power back up later on. mainly seen in lenovo's, the optimus method should work for most users:\n\nto start, grab ssdt-dgpu-off.dsl\n\nnext we need to get on windows, and head to the following:\n\ndevice manager -> display adapters -> dgpu -> properties -> details > bios device name\n\n\n * note some gpus may be hiding under \"bios device name\"\n\nthis should provided you with an acpi path for your dgpu, most commonly:\n\n * nvidia dgpu: \\_sb.pci0.peg0.pegp\n * amd dgpu: \\_sb.pci0.pegp.dgfx\n\n\n\nnow with that, we'll need to change the acpi path in the ssdt. main sections:\n\nexternal(_sb.pci0.peg0.pegp._off, methodobj)\n\n\nif (condrefof(\\_sb.pci0.peg0.pegp._off)) { \\_sb.pci0.peg0.pegp._off() }\n\n\nonce adapted to your config, head to the compile section\n\n * for those with sleep issues, you can refer to the original rehabman thread\n\n\n# bumblebee method\n\nwith some machines, the simple .off call won't keep the card off properly, that's where the bumblebee method comes in. this ssdt will actually send the dgpu into d3 state being the lowest power state a device can support. credit to maemo for the original adaptation.\n\nto start, grab ssdt-nohybgfx.dsl\n\nnext we need to get on windows, and head to the following:\n\ndevice manager -> display adapters -> dgpu -> properties -> details > bios device name\n\n\nthis should provided you with an acpi path for your dgpu, most commonly:\n\n * nvidia dgpu: \\_sb.pci0.peg0.pegp\n * amd dgpu: \\_sb.pci0.pegp.dgfx\n\nnow with that, we'll need to change the acpi path in the ssdt. main sections:\n\nexternal (_sb_.pci0.peg0.pegp._dsm, methodobj)    // dgpu acpi path\nexternal (_sb_.pci0.peg0.pegp._ps3, methodobj)    // dgpu acpi path\n\n\nif ((condrefof (\\_sb.pci0.peg0.pegp._dsm) && condrefof (\\_sb.pci0.peg0.pegp._ps3)))\n\n\n // card off request\n \\_sb.pci0.peg0.pegp._dsm (touuid (\"a486d8f8-0bda-471b-a72b-6042a6b5bee0\"), 0x0100, 0x1a, buffer (0x04)\n\n\n // card off\n\\_sb.pci0.peg0.pegp._ps3 ()\n\n\nonce adapted to your config, head to the compile section\n\n\n# now you're ready to compile the ssdt!",charsets:{}},{title:"Fixing Embedded Controller (Laptop)",frontmatter:{},regularPath:"/Laptops/laptop-ec.html",relativePath:"Laptops/laptop-ec.md",key:"v-3bc1ed2e",path:"/Laptops/laptop-ec.html",headers:[{level:2,title:"You'll want to go to SSDT-EC under the Universal tab for the new SSDT-EC page",slug:"you-ll-want-to-go-to-ssdt-ec-under-the-universal-tab-for-the-new-ssdt-ec-page",normalizedTitle:"you'll want to go to ssdt-ec under the universal tab for the new ssdt-ec page",charIndex:42}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"You'll want to go to SSDT-EC under the Universal tab for the new SSDT-EC page",content:"# Fixing Embedded Controller (Laptop)\n\n\n# You'll want to go to SSDT-EC under the Universal tab for the new SSDT-EC page",normalizedContent:"# fixing embedded controller (laptop)\n\n\n# you'll want to go to ssdt-ec under the universal tab for the new ssdt-ec page",charsets:{}},{title:"Fixing Trackpads: Manual",frontmatter:{},regularPath:"/Laptops/trackpad-methods/manual.html",relativePath:"Laptops/trackpad-methods/manual.md",key:"v-685cab09",path:"/Laptops/trackpad-methods/manual.html",headers:[{level:2,title:"Checking GPI0",slug:"checking-gpi0",normalizedTitle:"checking gpi0",charIndex:31},{level:2,title:"Edits to the sample SSDT",slug:"edits-to-the-sample-ssdt",normalizedTitle:"edits to the sample ssdt",charIndex:48},{level:2,title:"Enabling Trackpad",slug:"enabling-trackpad",normalizedTitle:"enabling trackpad",charIndex:76},{level:3,title:"_OSI to XOSI",slug:"osi-to-xosi",normalizedTitle:"_osi to xosi",charIndex:4063},{level:3,title:"Create OSYS Variable Under I2C Scope",slug:"create-osys-variable-under-i2c-scope",normalizedTitle:"create osys variable under i2c scope",charIndex:5109},{level:2,title:"Further Setup",slug:"further-setup",normalizedTitle:"further setup",charIndex:6243},{level:2,title:"Wrapping up",slug:"wrapping-up",normalizedTitle:"wrapping up",charIndex:97}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"Checking GPI0 Edits to the sample SSDT Enabling Trackpad _OSI to XOSI Create OSYS Variable Under I2C Scope Further Setup Wrapping up",content:'# Fixing Trackpads: Manual\n\n * Checking GPI0\n * Edits to the sample SSDT\n * Enabling Trackpad\n * Wrapping up\n\n\n# Checking GPI0\n\nThis page assumes that you have macOS installed as well as IORegistryExplorer.\n\nThe first thing to check is whether the GPI0 device exists, which is required for VoodooI2C. The best way to check this is working is to use IORegistryExplorer.\n\n\n\nHere, we can see that VoodooGPIO is attached to GPI0 so no edits are needed for GPI0. If this is the case for you, you can skip to the next section.\n\nIf VoodooGPIO isn\'t attached, then you may need to modify some values to enable the GPI0 device. In that case, you will need to find the GPI0 device in your DSDT.\n\nFirst open your decompiled DSDT you got from Dumping the DSDT and Decompiling and Compiling with either MaciASL (if in macOS) or any other text editor if in Windows or Linux (VSCode has an ACPI extension that can also help).\n\nNext search for Device (GPI0). You should get a result similar to this:\n\n\n\nBelow is the _STA method, which enables or disable the GPI0 device:\n\nMethod (_STA, 0, NotSerialized)\n{\n    If ((SBRG == Zero))\n    {\n        Return (Zero)\n    }\n\n    If ((GPEN == Zero))\n    {\n        Return (Zero)\n    }\n\n    Return (0x0F)\n}\n\n\nWe want the value returned from _STA to be non-zero (0x0F in this case) to enable the GPI0 device. If either SBRG or GPEN is equal to zero, then zero will be returned and GPI0 will be disabled. Generally, SBRG should not be modified, as modifying it can break the GPI0 device. Only modify GPEN if you need to enable the GPI0 device.\n\nHere\'s some more examples:\n\nWhat we care about from this is the _STA method:\n\nMethod (_STA, 0, NotSerialized)\n{\n    If ((GPHD == One))\n    {\n        Return (0x03)\n    }\n\n    Return (0x0F)\n}\n\n\nHere we would want to set GPHD to Zero so that 0x0F is returned.\n\n\n# Edits to the sample SSDT\n\nNow that we know what variables need to be changed, lets grab our SSDT and get to work:\n\n * SSDT-GPI0.dsl\n\nFrom the first example, we\'ll want to set GPEN to One to allow it to operate in macOS:\n\n// This is likely already set in the SSDT-GPIO you just downloaded\nIf (_OSI ("Darwin"))\n{\n    GPEN = One\n}\n\n\nFor the second example, you\'d want to remove GPEN and use the below:\n\nIf (_OSI ("Darwin"))\n{\n    GPHD = Zero\n}\n\n\nYou will want to test the SSDT at this point by compiling the SSDT and adding it to your config.plist. VoodooGPIO should now be attached to the GPI0 device as shown at the top of the GPI0 section. If your trackpad still doesn\'t work after enabling the GPI0 device, move on to the next section.\n\n\n# Enabling Trackpad\n\nOften times, the I2C devices check to see if they are running in Windows before enabling themselves. Similarly to the GPI0 device, these devices contain a _STA method.\n\n_STA Example (Optional)\n\n\n\nThe part we care about is the _STA method:\n\nMethod (_STA, 0, NotSerialized)  // _STA: Status\n{\n    Return (LSTA (SMD1))\n}\n\n\nIn this case, _STA is referring to another method, LSTA. If we search for Method (LSTA, we\'ll see the below:\n\nMethod (LSTA, 1, Serialized)\n{\n    If (((Arg0 == 0x00) || (Arg0 == 0x03)))\n    {\n        Return (0x00)\n    }\n\n    If (CondRefOf (OSYS))\n    {\n        If ((OSYS < 0x07DC))\n        {\n            Return (0x00)\n        }\n    }\n\n    Return (0x0F)\n}\n\n\nThe value OSYS, stores information about the current OS running. We will want to look for any place in which OSYS is set (OSYS = 0x07DC for example). In this DSDT, this is set under \\_SB.PCI0._INI as shown below:\n\n\n\nThere are various checks for many different versions of Windows, but there is no check for Darwin (which Apple\'s ACPI usually checks for). We generally want to set OSYS to the highest possible value to enable the most features. In this case, the highest value is set when the version of Windows is "Windows 2015", or Windows 10. This means that we should set OSYS to 0x07DF. Notice that this value is greater than 0x07DC, which is the value that was checked for earlier. If we set OSYS to 0x07DF, then the check in LSTA should return 0x0F.\n\nThe best way to patch these checks is to use _OSI to XOSI with SSDT-XOSI. You can also set OSYS within the scope of the I2C device, though this may not always work (The above example would not work here as LSTA is not within the scope of the I2C device).\n\n\n# _OSI to XOSI\n\nRequires the below SSDT and patch\n\n * SSDT-XOSI.dsl - If you need to edit which versions of Windows the SSDT checks for.\n * SSDT-XOSI.aml - Precompiled\n * XOSI Rename (Add this under ACPI -> Patch in your config.plist):\n\nCOMMENT   STRING    CHANGE _OSI TO XOSI\nEnabled   Boolean   YES\nCount     Number    0\nLimit     Number    0\nFind      Data      5f4f5349\nReplace   Data      584f5349\n\nDell Machines\n\nYou may need to add the below patch to allow the backlight keys to work. Make sure that this patch appears BEFORE the previous _OSI to XOSI patch in your config.plist Credit to Rehabman for the below patch:\n\nCOMMENT   STRING    CHANGE _OSID TO XSID (TO AVOID MATCH AGAINST _OSI PATCH)\nEnabled   Boolean   YES\nCount     Number    0\nLimit     Number    0\nFind      Data      4F534944\nReplace   Data      58534944\n\n\n# Create OSYS Variable Under I2C Scope\n\nYou will need to find the device path where OSYS is checked, then create a new OSYS variable within that scope. This will only change OSYS for devices under this scope, which can allow for finer control over what is enabled. Note that in the example above, LSTA exists under \\_SB.PCI0.LSTA, meaning that both \\_SB.PCI0._INI and \\_SB.PCI0.LSTA will control the same OSYS variable. If this is the case, this method will not work.\n\nIf (_OSI("Darwin")) {\n    Scope (\\_SB.PCI0.I2C0) { // I2C0 scope\n        Name (OSYS, 0x7DF)\n    }\n}\n\n\nMultiple Windows Versions\n\nWindows will also return true for checks of earlier versions of Windows. For example, Windows 7 would return true for "Windows 2000" through "Windows 2009", but not any version after. This is important as some features are only enabled in earlier Windows checks. For example, DYTC thermal management on newer ThinkPads is only enabled in the check for "Windows 2001". You will need to check your own DSDT and see what values it sets and where they are used. At this point, you should compiling the SSDT and see if the trackpad works.\n\n\n# Further Setup\n\nIf you need further help getting your trackpad to work, then the best place to look is VoodooI2C\'s readme\n\n\n# Wrapping up\n\nOnce you\'re done making your SSDT, either head to the next page to finish the rest of the SSDTs or head here if you\'re ready to wrap up:\n\n * Cleanup',normalizedContent:'# fixing trackpads: manual\n\n * checking gpi0\n * edits to the sample ssdt\n * enabling trackpad\n * wrapping up\n\n\n# checking gpi0\n\nthis page assumes that you have macos installed as well as ioregistryexplorer.\n\nthe first thing to check is whether the gpi0 device exists, which is required for voodooi2c. the best way to check this is working is to use ioregistryexplorer.\n\n\n\nhere, we can see that voodoogpio is attached to gpi0 so no edits are needed for gpi0. if this is the case for you, you can skip to the next section.\n\nif voodoogpio isn\'t attached, then you may need to modify some values to enable the gpi0 device. in that case, you will need to find the gpi0 device in your dsdt.\n\nfirst open your decompiled dsdt you got from dumping the dsdt and decompiling and compiling with either maciasl (if in macos) or any other text editor if in windows or linux (vscode has an acpi extension that can also help).\n\nnext search for device (gpi0). you should get a result similar to this:\n\n\n\nbelow is the _sta method, which enables or disable the gpi0 device:\n\nmethod (_sta, 0, notserialized)\n{\n    if ((sbrg == zero))\n    {\n        return (zero)\n    }\n\n    if ((gpen == zero))\n    {\n        return (zero)\n    }\n\n    return (0x0f)\n}\n\n\nwe want the value returned from _sta to be non-zero (0x0f in this case) to enable the gpi0 device. if either sbrg or gpen is equal to zero, then zero will be returned and gpi0 will be disabled. generally, sbrg should not be modified, as modifying it can break the gpi0 device. only modify gpen if you need to enable the gpi0 device.\n\nhere\'s some more examples:\n\nwhat we care about from this is the _sta method:\n\nmethod (_sta, 0, notserialized)\n{\n    if ((gphd == one))\n    {\n        return (0x03)\n    }\n\n    return (0x0f)\n}\n\n\nhere we would want to set gphd to zero so that 0x0f is returned.\n\n\n# edits to the sample ssdt\n\nnow that we know what variables need to be changed, lets grab our ssdt and get to work:\n\n * ssdt-gpi0.dsl\n\nfrom the first example, we\'ll want to set gpen to one to allow it to operate in macos:\n\n// this is likely already set in the ssdt-gpio you just downloaded\nif (_osi ("darwin"))\n{\n    gpen = one\n}\n\n\nfor the second example, you\'d want to remove gpen and use the below:\n\nif (_osi ("darwin"))\n{\n    gphd = zero\n}\n\n\nyou will want to test the ssdt at this point by compiling the ssdt and adding it to your config.plist. voodoogpio should now be attached to the gpi0 device as shown at the top of the gpi0 section. if your trackpad still doesn\'t work after enabling the gpi0 device, move on to the next section.\n\n\n# enabling trackpad\n\noften times, the i2c devices check to see if they are running in windows before enabling themselves. similarly to the gpi0 device, these devices contain a _sta method.\n\n_sta example (optional)\n\n\n\nthe part we care about is the _sta method:\n\nmethod (_sta, 0, notserialized)  // _sta: status\n{\n    return (lsta (smd1))\n}\n\n\nin this case, _sta is referring to another method, lsta. if we search for method (lsta, we\'ll see the below:\n\nmethod (lsta, 1, serialized)\n{\n    if (((arg0 == 0x00) || (arg0 == 0x03)))\n    {\n        return (0x00)\n    }\n\n    if (condrefof (osys))\n    {\n        if ((osys < 0x07dc))\n        {\n            return (0x00)\n        }\n    }\n\n    return (0x0f)\n}\n\n\nthe value osys, stores information about the current os running. we will want to look for any place in which osys is set (osys = 0x07dc for example). in this dsdt, this is set under \\_sb.pci0._ini as shown below:\n\n\n\nthere are various checks for many different versions of windows, but there is no check for darwin (which apple\'s acpi usually checks for). we generally want to set osys to the highest possible value to enable the most features. in this case, the highest value is set when the version of windows is "windows 2015", or windows 10. this means that we should set osys to 0x07df. notice that this value is greater than 0x07dc, which is the value that was checked for earlier. if we set osys to 0x07df, then the check in lsta should return 0x0f.\n\nthe best way to patch these checks is to use _osi to xosi with ssdt-xosi. you can also set osys within the scope of the i2c device, though this may not always work (the above example would not work here as lsta is not within the scope of the i2c device).\n\n\n# _osi to xosi\n\nrequires the below ssdt and patch\n\n * ssdt-xosi.dsl - if you need to edit which versions of windows the ssdt checks for.\n * ssdt-xosi.aml - precompiled\n * xosi rename (add this under acpi -> patch in your config.plist):\n\ncomment   string    change _osi to xosi\nenabled   boolean   yes\ncount     number    0\nlimit     number    0\nfind      data      5f4f5349\nreplace   data      584f5349\n\ndell machines\n\nyou may need to add the below patch to allow the backlight keys to work. make sure that this patch appears before the previous _osi to xosi patch in your config.plist credit to rehabman for the below patch:\n\ncomment   string    change _osid to xsid (to avoid match against _osi patch)\nenabled   boolean   yes\ncount     number    0\nlimit     number    0\nfind      data      4f534944\nreplace   data      58534944\n\n\n# create osys variable under i2c scope\n\nyou will need to find the device path where osys is checked, then create a new osys variable within that scope. this will only change osys for devices under this scope, which can allow for finer control over what is enabled. note that in the example above, lsta exists under \\_sb.pci0.lsta, meaning that both \\_sb.pci0._ini and \\_sb.pci0.lsta will control the same osys variable. if this is the case, this method will not work.\n\nif (_osi("darwin")) {\n    scope (\\_sb.pci0.i2c0) { // i2c0 scope\n        name (osys, 0x7df)\n    }\n}\n\n\nmultiple windows versions\n\nwindows will also return true for checks of earlier versions of windows. for example, windows 7 would return true for "windows 2000" through "windows 2009", but not any version after. this is important as some features are only enabled in earlier windows checks. for example, dytc thermal management on newer thinkpads is only enabled in the check for "windows 2001". you will need to check your own dsdt and see what values it sets and where they are used. at this point, you should compiling the ssdt and see if the trackpad works.\n\n\n# further setup\n\nif you need further help getting your trackpad to work, then the best place to look is voodooi2c\'s readme\n\n\n# wrapping up\n\nonce you\'re done making your ssdt, either head to the next page to finish the rest of the ssdts or head here if you\'re ready to wrap up:\n\n * cleanup',charsets:{cjk:!0}},{title:"Fixing Trackpads: Prebuilt",frontmatter:{},regularPath:"/Laptops/trackpad-methods/prebuilt.html",relativePath:"Laptops/trackpad-methods/prebuilt.md",key:"v-4a0047e9",path:"/Laptops/trackpad-methods/prebuilt.html",lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:null,content:"# Fixing Trackpads: Prebuilt\n\nThis is a one-size fits all solution where we basically trick our hardware into thinking it's booting Windows. The problem with this method is that it's common to break Windows booting so avoid unless troubleshooting.\n\n * SSDT-XOSI\n\n * XOSI Rename(add this under config.plist -> ACPI -> Patch):\n\nCOMMENT   STRING    CHANGE _OSI TO XOSI\nEnabled   Boolean   YES\nCount     Number    0\nLimit     Number    0\nFind      Data      5f4f5349\nReplace   Data      584f5349",normalizedContent:"# fixing trackpads: prebuilt\n\nthis is a one-size fits all solution where we basically trick our hardware into thinking it's booting windows. the problem with this method is that it's common to break windows booting so avoid unless troubleshooting.\n\n * ssdt-xosi\n\n * xosi rename(add this under config.plist -> acpi -> patch):\n\ncomment   string    change _osi to xosi\nenabled   boolean   yes\ncount     number    0\nlimit     number    0\nfind      data      5f4f5349\nreplace   data      584f5349",charsets:{}},{title:"Fixing Trackpads (SSDT-GPI0/XOSI)",frontmatter:{},regularPath:"/Laptops/trackpad.html",relativePath:"Laptops/trackpad.md",key:"v-683b1e0e",path:"/Laptops/trackpad.html",headers:[{level:2,title:"What this SSDT does",slug:"what-this-ssdt-does",normalizedTitle:"what this ssdt does",charIndex:40},{level:2,title:"Methods to make this SSDT",slug:"methods-to-make-this-ssdt",normalizedTitle:"methods to make this ssdt",charIndex:63}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"What this SSDT does Methods to make this SSDT",content:"# Fixing Trackpads (SSDT-GPI0/XOSI)\n\n * What this SSDT does\n * Methods to make this SSDT\n\n\n# What this SSDT does\n\nA big part of fixing I2C trackpads is enabling them within ACPI. For VoodooI2C to work, GPI0 needs to be enabled, as well as the Trackpad and I2C bus. The latter two devices are commonly disabled behind an OS check for Windows which need to be patched to work with macOS as well. Often times, GPI0 is already enabled and requires no modification.\n\nThis section assumes that macOS is already installed. You may need to use a USB mouse to install macOS if your trackpad does not work yet.\n\n\n# Methods to make this SSDT\n\nFor the trackpad fix, there are only one method to choose from:\n\n * Manual",normalizedContent:"# fixing trackpads (ssdt-gpi0/xosi)\n\n * what this ssdt does\n * methods to make this ssdt\n\n\n# what this ssdt does\n\na big part of fixing i2c trackpads is enabling them within acpi. for voodooi2c to work, gpi0 needs to be enabled, as well as the trackpad and i2c bus. the latter two devices are commonly disabled behind an os check for windows which need to be patched to work with macos as well. often times, gpi0 is already enabled and requires no modification.\n\nthis section assumes that macos is already installed. you may need to use a usb mouse to install macos if your trackpad does not work yet.\n\n\n# methods to make this ssdt\n\nfor the trackpad fix, there are only one method to choose from:\n\n * manual",charsets:{}},{title:"Compiling and decompiling ACPI Tables",frontmatter:{},regularPath:"/Manual/compile.html",relativePath:"Manual/compile.md",key:"v-2d4057e1",path:"/Manual/compile.html",headers:[{level:2,title:"macOS",slug:"macos",normalizedTitle:"macos",charIndex:102},{level:2,title:"Windows",slug:"windows",normalizedTitle:"windows",charIndex:137},{level:2,title:"Linux",slug:"linux",normalizedTitle:"linux",charIndex:174}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"macOS Windows Linux",content:"# Compiling and decompiling ACPI Tables\n\nSee Troubleshooting if you have dumping/compiling errors\n\n * macOS Compiling and Decompiling\n * Windows Compiling and Decompiling\n * Linux Compiling and Decompiling\n\n\n# macOS\n\nSo compiling DSDTs and SSDTs are quite easy with macOS, all you need is MaciASL. To compile, just File -> SaveAs -> ACPI Machine Language Binary(.AML), decompiling is just opening the file in MaciASL.\n\nFor those who prefer the command line, grab iasl-stable and run the following:\n\npath/to/iasl path/to/DSDT.aml\n\n\n * If compiled .aml file is provided, a decompiled .dsl file will be given and vice versa.\n\n\n\n\n# Windows\n\nCompiling and decompiling on windows is fairly simple though, you will need iasl.exe and Command Prompt:\n\npath/to/iasl.exe path/to/DSDT.aml\n\n\n\n\n * If compiled .aml file is provided, a decompiled .dsl file will be given and vice versa.\n\n\n# Linux\n\nCompiling and decompiling with Linux is just as simple, you will need a copy of iasl. You can get it here (iasl) or through the iasl package in your package manager. iasl can be used as such:\n\npath/to/iasl path/to/DSDT.aml\n\n\n * If compiled .aml file is provided, a decompiled .dsl file will be given and vice versa.",normalizedContent:"# compiling and decompiling acpi tables\n\nsee troubleshooting if you have dumping/compiling errors\n\n * macos compiling and decompiling\n * windows compiling and decompiling\n * linux compiling and decompiling\n\n\n# macos\n\nso compiling dsdts and ssdts are quite easy with macos, all you need is maciasl. to compile, just file -> saveas -> acpi machine language binary(.aml), decompiling is just opening the file in maciasl.\n\nfor those who prefer the command line, grab iasl-stable and run the following:\n\npath/to/iasl path/to/dsdt.aml\n\n\n * if compiled .aml file is provided, a decompiled .dsl file will be given and vice versa.\n\n\n\n\n# windows\n\ncompiling and decompiling on windows is fairly simple though, you will need iasl.exe and command prompt:\n\npath/to/iasl.exe path/to/dsdt.aml\n\n\n\n\n * if compiled .aml file is provided, a decompiled .dsl file will be given and vice versa.\n\n\n# linux\n\ncompiling and decompiling with linux is just as simple, you will need a copy of iasl. you can get it here (iasl) or through the iasl package in your package manager. iasl can be used as such:\n\npath/to/iasl path/to/dsdt.aml\n\n\n * if compiled .aml file is provided, a decompiled .dsl file will be given and vice versa.",charsets:{}},{title:"Getting a copy of your DSDT",frontmatter:{},regularPath:"/Manual/dump.html",relativePath:"Manual/dump.md",key:"v-9a3ecb2e",path:"/Manual/dump.html",headers:[{level:2,title:"From Windows",slug:"from-windows",normalizedTitle:"from windows",charIndex:211},{level:2,title:"From Linux",slug:"from-linux",normalizedTitle:"from linux",charIndex:611},{level:2,title:"From Clover",slug:"from-clover",normalizedTitle:"from clover",charIndex:852},{level:2,title:"From OpenCore",slug:"from-opencore",normalizedTitle:"from opencore",charIndex:1073},{level:3,title:"SysReport Quirk",slug:"sysreport-quirk",normalizedTitle:"sysreport quirk",charIndex:1126},{level:3,title:"UEFI Shell",slug:"uefi-shell",normalizedTitle:"uefi shell",charIndex:1145}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"From Windows From Linux From Clover From OpenCore SysReport Quirk UEFI Shell",content:"# Getting a copy of your DSDT\n\nSo to start, we'll need to get a copy of your DSDT from your firmware. The easiest way is grabbing the DSDT.aml SSDTTime dumped for us earlier but here are some other options:\n\n\n# From Windows\n\n * SSDTTime\n   \n   * Supports both Windows and Linux for DSDT dumping\n   * 8. Dump DSDT - Automatically dump the system DSDT\n\n * acpidump.exe\n   \n   * In command prompt run path/to/acpidump.exe -b -n DSDT -z, this will dump your DSDT as a .dat file. Rename this to DSDT.aml\n\n * Do note that all ACPI patches from clover/OpenCore will be applied to the DSDT with the above 2 methods\n\n\n# From Linux\n\n * SSDTTime\n   * Supports both Windows and Linux for DSDT dumping\n   * 4. Dump DSDT - Automatically dump the system DSDT\n * Do note that all ACPI patches from clover/OpenCore will be applied to the DSDT with the above method\n\n\n# From Clover\n\nFor those with Clover installed previously, this is a simple way to get your ACPI tables:\n\n * F4 in Clover Boot menu\n   * DSDT can be found in EFI/CLOVER/ACPI/origin, the folder must exist before dumping\n\n\n# From OpenCore\n\nWith OpenCore, we have 2 options:\n\n * SysReport Quirk\n * UEFI Shell\n\n\n# SysReport Quirk\n\nWith OpenCore 0.5.9, we have a new quirk called SysReport which will actually dump your DSDT automatically when hitting the boot screen. The main issues are:\n\n * You already need a bootable OpenCore USB to get this dump\n * This also requires a DEBUG version of 0.5.9\n\nFor the latter, you just need to replace the following files with DEBUG version:\n\n * EFI/BOOT/\n   * BOOTx64.efi\n * EFI/OC/Bootstrap/\n   * Bootstrap.efi\n * EFI/OC/Drivers/\n   * OpenRuntime.efi\n * EFI/OC/\n   * OpenCore.efi\n\nFor the former, you can actually skip the ACPI section, return to the OpenCore guide and finish making the USB. Once booted to the picker, you can shut off the PC and check your USB:\n\n\n\nAnd voila! You have a DSDT! Now you can continue on with making SSDTs\n\n\n# UEFI Shell\n\nFor this, we'll want to grab acpidump.efi and add this to EFI/OC/Tools and in your config under Misc -> Tools with the argument: -b -n DSDT -z and select this option in OpenCore's picker.\n\nIf OpenCore is having issues running acpidump.efi from the boot picker, you can call it from the shell with OpenShell(reminder to add to both EFI/OC/Tools and in your config under Misc -> Tools ):\n\nshell> fs0: // replace with proper drive\nfs0:\\> dir  // to verify this is the right directory\n   Directory of fs0:\\\n   01/01/01 3:30p EFI\nfs0:\\> cd EFI\\OC\\Tools\nfs0:\\EFI\\OC\\Tools> acpidump.efi -b -n DSDT -z  \n\n\nOnce done, you should find your DSDT in the EFI/OC/Tools folder with a .dat extension. Rename this DSDT.dat file to DSDT.aml to help us down the line",normalizedContent:"# getting a copy of your dsdt\n\nso to start, we'll need to get a copy of your dsdt from your firmware. the easiest way is grabbing the dsdt.aml ssdttime dumped for us earlier but here are some other options:\n\n\n# from windows\n\n * ssdttime\n   \n   * supports both windows and linux for dsdt dumping\n   * 8. dump dsdt - automatically dump the system dsdt\n\n * acpidump.exe\n   \n   * in command prompt run path/to/acpidump.exe -b -n dsdt -z, this will dump your dsdt as a .dat file. rename this to dsdt.aml\n\n * do note that all acpi patches from clover/opencore will be applied to the dsdt with the above 2 methods\n\n\n# from linux\n\n * ssdttime\n   * supports both windows and linux for dsdt dumping\n   * 4. dump dsdt - automatically dump the system dsdt\n * do note that all acpi patches from clover/opencore will be applied to the dsdt with the above method\n\n\n# from clover\n\nfor those with clover installed previously, this is a simple way to get your acpi tables:\n\n * f4 in clover boot menu\n   * dsdt can be found in efi/clover/acpi/origin, the folder must exist before dumping\n\n\n# from opencore\n\nwith opencore, we have 2 options:\n\n * sysreport quirk\n * uefi shell\n\n\n# sysreport quirk\n\nwith opencore 0.5.9, we have a new quirk called sysreport which will actually dump your dsdt automatically when hitting the boot screen. the main issues are:\n\n * you already need a bootable opencore usb to get this dump\n * this also requires a debug version of 0.5.9\n\nfor the latter, you just need to replace the following files with debug version:\n\n * efi/boot/\n   * bootx64.efi\n * efi/oc/bootstrap/\n   * bootstrap.efi\n * efi/oc/drivers/\n   * openruntime.efi\n * efi/oc/\n   * opencore.efi\n\nfor the former, you can actually skip the acpi section, return to the opencore guide and finish making the usb. once booted to the picker, you can shut off the pc and check your usb:\n\n\n\nand voila! you have a dsdt! now you can continue on with making ssdts\n\n\n# uefi shell\n\nfor this, we'll want to grab acpidump.efi and add this to efi/oc/tools and in your config under misc -> tools with the argument: -b -n dsdt -z and select this option in opencore's picker.\n\nif opencore is having issues running acpidump.efi from the boot picker, you can call it from the shell with openshell(reminder to add to both efi/oc/tools and in your config under misc -> tools ):\n\nshell> fs0: // replace with proper drive\nfs0:\\> dir  // to verify this is the right directory\n   directory of fs0:\\\n   01/01/01 3:30p efi\nfs0:\\> cd efi\\oc\\tools\nfs0:\\efi\\oc\\tools> acpidump.efi -b -n dsdt -z  \n\n\nonce done, you should find your dsdt in the efi/oc/tools folder with a .dat extension. rename this dsdt.dat file to dsdt.aml to help us down the line",charsets:{}},{title:"Getting started with ACPI",frontmatter:{},regularPath:"/",relativePath:"README.md",key:"v-20cdc812",path:"/",headers:[{level:2,title:"A quick explainer on ACPI",slug:"a-quick-explainer-on-acpi",normalizedTitle:"a quick explainer on acpi",charIndex:32},{level:2,title:"Choosing the SSDTs",slug:"choosing-the-ssdts",normalizedTitle:"choosing the ssdts",charIndex:3016}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"A quick explainer on ACPI Choosing the SSDTs",content:"# Getting started with ACPI\n\n\n# A quick explainer on ACPI\n\nSo what are DSDTs and SSDTs? Well, these are tables present in your firmware that outline hardware devices like USB controllers, CPU threads, embedded controllers, system clocks and such. A DSDT(Differentiated System Description Table) can be seen as the body holding most of the info with smaller bits of info being passed by the SSDT(Secondary System Description Table). You can think of the DSDT as the building blueprints with SSDTs being sticky notes outlining extra details to the project\n\nYou can read more about ACPI and it's spec here: ACPI 6.4 Manual\n\n> So why do we care about these tables?\n\nmacOS can be very picky about the devices present in the DSDT and so our job is to correct it. The main devices that need to be corrected for macOS to work properly:\n\n * Embedded controllers(EC)\n   * All semi-modern Intel machines have an EC (usually called H_EC, ECDV, EC0, etc...) exposed in their DSDT, with many AMD systems also having it exposed. These controllers are generally not compatible with macOS and can cause panics, so then need to be hidden from macOS. macOS Catalina requires a device named EC to be present though, so a dummy EC is created.\n   * With laptops, the actual embedded controller still needs to be enabled for battery and hotkeys to work, and renaming the EC can additionally cause issues with windows, so creating a fake EC without disabling the real embedded controller is preferable.\n * Plugin type\n   * This allows the use of XCPM providing native CPU power management on Intel Haswell and newer CPUs, the SSDT will connect to the first thread of the CPU. Not meant for AMD\n * AWAC system clock.\n   * This applies to all 300 series motherboards including many Z370 boards, the specific issue is that newer boards ship with AWAC clock enabled. This is a problem because macOS cannot communicate with AWAC clocks, so this requires us to either force on the legacy RTC clock or if unavailable create a fake one for macOS to play with\n * NVRAM SSDT\n   * True 300 series motherboards(non-Z370) don't declare the FW chip as MMIO in ACPI and so the kernel ignores the MMIO region declared by the UEFI memory map. This SSDT brings back NVRAM support\n * Backlight SSDT\n   * Used for fixing backlight control support on laptops\n * GPIO SSDT\n   * Used for creating a stub to allow VoodooI2C to connect onto, for laptops only\n * XOSI SSDT\n   * Used for rerouting OSI calls to this SSDT, mainly used for tricking our hardware into thinking its booting Windows so we get better trackpad support. This is a very hacky solution known for breaking Windows boot, use the GPIO SSDT instead. Usage of XOSI will not be covered in this guide\n * IRQ SSDT and ACPI patches\n   * Needed for fixing IRQ conflicts within the DSDT, for laptops mainly. SSDTTime exclusive\n   * Note Skylake and newer systems rarely have IRQ conflicts, this is mainly prevalent on Broadwell and older\n\nNow head to the next page on what SSDTs do your systems need:\n\n\n# Choosing the SSDTs",normalizedContent:"# getting started with acpi\n\n\n# a quick explainer on acpi\n\nso what are dsdts and ssdts? well, these are tables present in your firmware that outline hardware devices like usb controllers, cpu threads, embedded controllers, system clocks and such. a dsdt(differentiated system description table) can be seen as the body holding most of the info with smaller bits of info being passed by the ssdt(secondary system description table). you can think of the dsdt as the building blueprints with ssdts being sticky notes outlining extra details to the project\n\nyou can read more about acpi and it's spec here: acpi 6.4 manual\n\n> so why do we care about these tables?\n\nmacos can be very picky about the devices present in the dsdt and so our job is to correct it. the main devices that need to be corrected for macos to work properly:\n\n * embedded controllers(ec)\n   * all semi-modern intel machines have an ec (usually called h_ec, ecdv, ec0, etc...) exposed in their dsdt, with many amd systems also having it exposed. these controllers are generally not compatible with macos and can cause panics, so then need to be hidden from macos. macos catalina requires a device named ec to be present though, so a dummy ec is created.\n   * with laptops, the actual embedded controller still needs to be enabled for battery and hotkeys to work, and renaming the ec can additionally cause issues with windows, so creating a fake ec without disabling the real embedded controller is preferable.\n * plugin type\n   * this allows the use of xcpm providing native cpu power management on intel haswell and newer cpus, the ssdt will connect to the first thread of the cpu. not meant for amd\n * awac system clock.\n   * this applies to all 300 series motherboards including many z370 boards, the specific issue is that newer boards ship with awac clock enabled. this is a problem because macos cannot communicate with awac clocks, so this requires us to either force on the legacy rtc clock or if unavailable create a fake one for macos to play with\n * nvram ssdt\n   * true 300 series motherboards(non-z370) don't declare the fw chip as mmio in acpi and so the kernel ignores the mmio region declared by the uefi memory map. this ssdt brings back nvram support\n * backlight ssdt\n   * used for fixing backlight control support on laptops\n * gpio ssdt\n   * used for creating a stub to allow voodooi2c to connect onto, for laptops only\n * xosi ssdt\n   * used for rerouting osi calls to this ssdt, mainly used for tricking our hardware into thinking its booting windows so we get better trackpad support. this is a very hacky solution known for breaking windows boot, use the gpio ssdt instead. usage of xosi will not be covered in this guide\n * irq ssdt and acpi patches\n   * needed for fixing irq conflicts within the dsdt, for laptops mainly. ssdttime exclusive\n   * note skylake and newer systems rarely have irq conflicts, this is mainly prevalent on broadwell and older\n\nnow head to the next page on what ssdts do your systems need:\n\n\n# choosing the ssdts",charsets:{}},{title:"Table of contents",frontmatter:{},regularPath:"/SUMMARY.html",relativePath:"SUMMARY.md",key:"v-236170ee",path:"/SUMMARY.html",headers:[{level:2,title:"Methods",slug:"methods",normalizedTitle:"methods",charIndex:76},{level:2,title:"Manual",slug:"manual",normalizedTitle:"manual",charIndex:175},{level:2,title:"Desktop",slug:"desktop",normalizedTitle:"desktop",charIndex:236},{level:2,title:"Laptop",slug:"laptop",normalizedTitle:"laptop",charIndex:276},{level:2,title:"Universal",slug:"universal",normalizedTitle:"universal",charIndex:387},{level:2,title:"Cleanup",slug:"cleanup",normalizedTitle:"cleanup",charIndex:707},{level:2,title:"Misc",slug:"misc",normalizedTitle:"misc",charIndex:731}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"Methods Manual Desktop Laptop Universal Cleanup Misc",content:"# Table of contents\n\n * Getting Started With ACPI\n * Choosing the SSDTs\n\n\n# Methods\n\n * How to create SSDTs\n   * SSDTs: Prebuilt\n   * SSDTs: Easy Way\n   * SSDTs: Long Way\n\n\n# Manual\n\n * Dumping the DSDT\n * Decompiling and Compiling\n\n\n# Desktop\n\n * Disabling desktop dGPUs\n\n\n# Laptop\n\n * Backlight PNLF\n   * Prebuilt\n   * Manual\n * Trackpad GPI0\n   * Manual\n * Disabling laptop dGPUs\n\n\n# Universal\n\n * Embedded Controller\n   * Prebuilt\n   * SSDTTime\n   * Manual\n * CPU Power Management\n   * Prebuilt\n   * SSDTTime\n   * Manual\n * AWAC vs RTC\n   * Prebuilt\n   * Manual\n * NVRAM PMC\n   * Prebuilt\n   * Manual\n * USB RHUB\n   * Prebuilt\n   * Manual\n * IRQ Fix\n * GPU Spoof\n * Fixing SMBus Support\n   * Manual\n\n\n# Cleanup\n\n * Cleanup\n\n\n# Misc\n\n * Troubleshooting\n * Contributing",normalizedContent:"# table of contents\n\n * getting started with acpi\n * choosing the ssdts\n\n\n# methods\n\n * how to create ssdts\n   * ssdts: prebuilt\n   * ssdts: easy way\n   * ssdts: long way\n\n\n# manual\n\n * dumping the dsdt\n * decompiling and compiling\n\n\n# desktop\n\n * disabling desktop dgpus\n\n\n# laptop\n\n * backlight pnlf\n   * prebuilt\n   * manual\n * trackpad gpi0\n   * manual\n * disabling laptop dgpus\n\n\n# universal\n\n * embedded controller\n   * prebuilt\n   * ssdttime\n   * manual\n * cpu power management\n   * prebuilt\n   * ssdttime\n   * manual\n * awac vs rtc\n   * prebuilt\n   * manual\n * nvram pmc\n   * prebuilt\n   * manual\n * usb rhub\n   * prebuilt\n   * manual\n * irq fix\n * gpu spoof\n * fixing smbus support\n   * manual\n\n\n# cleanup\n\n * cleanup\n\n\n# misc\n\n * troubleshooting\n * contributing",charsets:{}},{title:"Fixing System Clocks on HEDT: Manual",frontmatter:{},regularPath:"/Universal/awac-methods/manual-hedt.html",relativePath:"Universal/awac-methods/manual-hedt.md",key:"v-426c69e9",path:"/Universal/awac-methods/manual-hedt.html",headers:[{level:2,title:"Seeing if you need SSDT-RTC0-RANGE",slug:"seeing-if-you-need-ssdt-rtc0-range",normalizedTitle:"seeing if you need ssdt-rtc0-range",charIndex:134},{level:2,title:"Finding the ACPI path",slug:"finding-the-acpi-path",normalizedTitle:"finding the acpi path",charIndex:43},{level:2,title:"Edits to the sample SSDT",slug:"edits-to-the-sample-ssdt",normalizedTitle:"edits to the sample ssdt",charIndex:68},{level:3,title:"Compiling the SSDT",slug:"compiling-the-ssdt",normalizedTitle:"compiling the ssdt",charIndex:96},{level:2,title:"Wrapping up",slug:"wrapping-up",normalizedTitle:"wrapping up",charIndex:118}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"Seeing if you need SSDT-RTC0-RANGE Finding the ACPI path Edits to the sample SSDT Compiling the SSDT Wrapping up",content:"# Fixing System Clocks on HEDT: Manual\n\n * Finding the ACPI path\n * Edits to the sample SSDT\n * Compiling the SSDT\n * Wrapping up\n\n\n# Seeing if you need SSDT-RTC0-RANGE\n\nTo start, first open your decompiled DSDT you got from Dumping the DSDT and Decompiling and Compiling with either MaciASL(if in macOS) or any other text editor if in Windows or Linux(VSCode has an ACPI extension that can also help).\n\nNow search for PNP0B00 and look at the _CRS entry within it:\n\n\n\nAnd from the above example, we see we have 2 banks of RTC memory:\n\n * Bank 1: starts at 0x70 and is length 0x2\n * Bank 2: starts at 0x74 and is length 0x4\n\nNow the problem is that the OEM forgot to mat sections 0x72 and 0x73. Because of this, macOS may halt while booting(prominently in Big Sur)\n\nAnd finally, verify if it has an _STA method as well. This will be used shortly\n\n\n# Finding the ACPI path\n\nFinding the ACPI pathing is quite easy actually, first open your decompiled DSDT you got from Dumping the DSDT and Decompiling and Compiling with either MaciASL(if in macOS) or any other text editor if in Windows or Linux(VSCode has an ACPI extension that can also help).\n\nTo start, search for the following:\n\n * Finding the RTC name:\n   * Search PNP0B00\n * Finding the LowPinCount path:\n   * Search Name (_ADR, 0x001F0000)\n * Finding the PCI path:\n   * Search PNP0A08 (If multiple show up, use the first one)\n\nYou should get something like the following show up:\n\nRTC PATHING   LPC PATHING   PCI PATHING\n                            \n\nFrom the above, we can see we have RTC, LPC0 and PCI0. Now we can head to the next stage\n\n\n# Edits to the sample SSDT\n\nNow that we have our ACPI path, lets grab our SSDT and get to work:\n\n * SSDT-RTC0-RANGE.dsl\n\nBy default, this uses PC00.LPC0.RTC for the pathing. you'll want to rename accordingly.\n\nFollowing the example from above, we'll be renaming it to PCI0.LPC0.RTC:\n\nBefore:\n\nExternal (_SB_.PC00.LPC0, DeviceObj) <- Rename this\n\nExternal (_SB_.PC00.LPC0.RTC_, DeviceObj) <- Rename this\n\nScope (_SB.PC00.LPC0) <- Rename this\n\n\n\n\nFollowing the example pathing we found, the SSDT should look something like this:\n\nAfter:\n\nExternal (_SB_.PCI0.LPC0, DeviceObj) <- Renamed\n\nScope (_SB.PCI0.LPC0.RTC) <- Renamed\n\nScope (_SB.PCI0.LPC0) <- Renamed\n\n\n  /* <- Remove if your RTC device didn't have an _STA\n  Scope (RTC)\n        {\n            Method (_STA, 0, NotSerialized)  // _STA: Status\n            {\n                If (_OSI (\"Darwin\"))\n                {\n                    Return (Zero)\n                }\n                Else\n                {\n                    Return (0x0F)\n                }\n            }\n        }\n  */ <- Remove if your RTC device didn't have an _STA\n\n\n\n\n\n# Compiling the SSDT\n\nWith the SSDT done, you're now ready to compile the SSDT!\n\n\n# Wrapping up\n\nOnce you're done making your SSDT, either head to the next page to finish the rest of the SSDTs or head here if you're ready to wrap up:\n\n * Cleanup",normalizedContent:"# fixing system clocks on hedt: manual\n\n * finding the acpi path\n * edits to the sample ssdt\n * compiling the ssdt\n * wrapping up\n\n\n# seeing if you need ssdt-rtc0-range\n\nto start, first open your decompiled dsdt you got from dumping the dsdt and decompiling and compiling with either maciasl(if in macos) or any other text editor if in windows or linux(vscode has an acpi extension that can also help).\n\nnow search for pnp0b00 and look at the _crs entry within it:\n\n\n\nand from the above example, we see we have 2 banks of rtc memory:\n\n * bank 1: starts at 0x70 and is length 0x2\n * bank 2: starts at 0x74 and is length 0x4\n\nnow the problem is that the oem forgot to mat sections 0x72 and 0x73. because of this, macos may halt while booting(prominently in big sur)\n\nand finally, verify if it has an _sta method as well. this will be used shortly\n\n\n# finding the acpi path\n\nfinding the acpi pathing is quite easy actually, first open your decompiled dsdt you got from dumping the dsdt and decompiling and compiling with either maciasl(if in macos) or any other text editor if in windows or linux(vscode has an acpi extension that can also help).\n\nto start, search for the following:\n\n * finding the rtc name:\n   * search pnp0b00\n * finding the lowpincount path:\n   * search name (_adr, 0x001f0000)\n * finding the pci path:\n   * search pnp0a08 (if multiple show up, use the first one)\n\nyou should get something like the following show up:\n\nrtc pathing   lpc pathing   pci pathing\n                            \n\nfrom the above, we can see we have rtc, lpc0 and pci0. now we can head to the next stage\n\n\n# edits to the sample ssdt\n\nnow that we have our acpi path, lets grab our ssdt and get to work:\n\n * ssdt-rtc0-range.dsl\n\nby default, this uses pc00.lpc0.rtc for the pathing. you'll want to rename accordingly.\n\nfollowing the example from above, we'll be renaming it to pci0.lpc0.rtc:\n\nbefore:\n\nexternal (_sb_.pc00.lpc0, deviceobj) <- rename this\n\nexternal (_sb_.pc00.lpc0.rtc_, deviceobj) <- rename this\n\nscope (_sb.pc00.lpc0) <- rename this\n\n\n\n\nfollowing the example pathing we found, the ssdt should look something like this:\n\nafter:\n\nexternal (_sb_.pci0.lpc0, deviceobj) <- renamed\n\nscope (_sb.pci0.lpc0.rtc) <- renamed\n\nscope (_sb.pci0.lpc0) <- renamed\n\n\n  /* <- remove if your rtc device didn't have an _sta\n  scope (rtc)\n        {\n            method (_sta, 0, notserialized)  // _sta: status\n            {\n                if (_osi (\"darwin\"))\n                {\n                    return (zero)\n                }\n                else\n                {\n                    return (0x0f)\n                }\n            }\n        }\n  */ <- remove if your rtc device didn't have an _sta\n\n\n\n\n\n# compiling the ssdt\n\nwith the ssdt done, you're now ready to compile the ssdt!\n\n\n# wrapping up\n\nonce you're done making your ssdt, either head to the next page to finish the rest of the ssdts or head here if you're ready to wrap up:\n\n * cleanup",charsets:{}},{title:"Fixing System Clocks: Manual",frontmatter:{},regularPath:"/Universal/awac-methods/manual.html",relativePath:"Universal/awac-methods/manual.md",key:"v-18059cc9",path:"/Universal/awac-methods/manual.html",headers:[{level:2,title:"Determining which SSDT you need",slug:"determining-which-ssdt-you-need",normalizedTitle:"determining which ssdt you need",charIndex:35},{level:2,title:"RTC0 Method",slug:"rtc0-method",normalizedTitle:"rtc0 method",charIndex:70},{level:3,title:"Finding the ACPI path",slug:"finding-the-acpi-path",normalizedTitle:"finding the acpi path",charIndex:87},{level:3,title:"Edits to the sample SSDT",slug:"edits-to-the-sample-ssdt",normalizedTitle:"edits to the sample ssdt",charIndex:114},{level:3,title:"Compiling the SSDT",slug:"compiling-the-ssdt",normalizedTitle:"compiling the ssdt",charIndex:144},{level:2,title:"Wrapping up",slug:"wrapping-up",normalizedTitle:"wrapping up",charIndex:166}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"Determining which SSDT you need RTC0 Method Finding the ACPI path Edits to the sample SSDT Compiling the SSDT Wrapping up",content:"# Fixing System Clocks: Manual\n\n * Determining which SSDT you need\n * RTC0 Method\n   * Finding the ACPI path\n   * Edits to the sample SSDT\n   * Compiling the SSDT\n * Wrapping up\n\n\n# Determining which SSDT you need\n\n * Note: X99 and X299 see here\n\nFinding which SSDT you need is quite easy actually, first open your decompiled DSDT you got from Dumping the DSDT and Decompiling and Compiling with either MaciASL(if in macOS) or any other text editor if in Windows or Linux(VSCode has an ACPI extension that can also help).\n\nNext search for ACPI000E. You should get something similar:\n\n\n\nThe above tells us a few things:\n\n * We in fact do have an AWAC clock\n   * If nothing shows up, you don't need to do anything for AWAC or RTC\n * It can be easily disabled with STAS(if not, you can skip to here: RTC0 Method)\n   * _STA is the device status, with Zero meaning it won't show up\n\nBut to double check, next search for PNP0B00:\n\n\n\nAnd look at that, we can in fact disable our AWAC and enable the RTC! If not skip to here: RTC0 Method\n\nNow it's as simple as grabbing SSDT-AWAC.dsl and compile, no changes needed You can also use the below SSDT to the same effect:\n\n * SSDT-AWAC.aml\n\n\n# RTC0 Method\n\nThis method is for those who either don't have a PNP0B00 device to re-enable or have no easy way(via STAS variable).\n\n\n# Finding the ACPI path\n\nAssuming you've gotten your DSDT already opened from earlier, search for the following:\n\n * Finding the LowPinCount path:\n   * Search Name (_ADR, 0x001F0000)\n * Finding the PCI path:\n   * Search PNP0A08 (If multiple show up, use the first one)\n\nYou should get something like the following show up:\n\nLPC PATHING   PCI PATHING\n              \n\nFrom the above, we can see we have both PCI0 and LPC. Now we can head to the next stage\n\n\n# Edits to the sample SSDT\n\nNow that we have our ACPI path, lets grab our SSDT and get to work:\n\n * SSDT-RTC0.dsl\n\nBy default, this uses PCI0.LPCB for the pathing. you'll want to rename accordingly.\n\nFollowing the example from above, we'll be renaming it to PCI0.LPC:\n\nBefore:\n\nExternal (_SB_.PCI0.LPCB, DeviceObj) <- Rename this\n\nScope (_SB.PCI0.LPCB) <- Rename this\n\n\n\n\nFollowing the example pathing we found, the SSDT should look something like this:\n\nAfter:\n\nExternal (_SB_.PCI0.LPC, DeviceObj) <- Renamed\n\nScope (_SB.PCI0.LPC) <- Renamed\n\n\n\n\n\n# Compiling the SSDT\n\nWith the SSDT done, you're now ready to compile the SSDT!\n\n\n# Wrapping up\n\nOnce you're done making your SSDT, either head to the next page to finish the rest of the SSDTs or head here if you're ready to wrap up:\n\n * Cleanup",normalizedContent:"# fixing system clocks: manual\n\n * determining which ssdt you need\n * rtc0 method\n   * finding the acpi path\n   * edits to the sample ssdt\n   * compiling the ssdt\n * wrapping up\n\n\n# determining which ssdt you need\n\n * note: x99 and x299 see here\n\nfinding which ssdt you need is quite easy actually, first open your decompiled dsdt you got from dumping the dsdt and decompiling and compiling with either maciasl(if in macos) or any other text editor if in windows or linux(vscode has an acpi extension that can also help).\n\nnext search for acpi000e. you should get something similar:\n\n\n\nthe above tells us a few things:\n\n * we in fact do have an awac clock\n   * if nothing shows up, you don't need to do anything for awac or rtc\n * it can be easily disabled with stas(if not, you can skip to here: rtc0 method)\n   * _sta is the device status, with zero meaning it won't show up\n\nbut to double check, next search for pnp0b00:\n\n\n\nand look at that, we can in fact disable our awac and enable the rtc! if not skip to here: rtc0 method\n\nnow it's as simple as grabbing ssdt-awac.dsl and compile, no changes needed you can also use the below ssdt to the same effect:\n\n * ssdt-awac.aml\n\n\n# rtc0 method\n\nthis method is for those who either don't have a pnp0b00 device to re-enable or have no easy way(via stas variable).\n\n\n# finding the acpi path\n\nassuming you've gotten your dsdt already opened from earlier, search for the following:\n\n * finding the lowpincount path:\n   * search name (_adr, 0x001f0000)\n * finding the pci path:\n   * search pnp0a08 (if multiple show up, use the first one)\n\nyou should get something like the following show up:\n\nlpc pathing   pci pathing\n              \n\nfrom the above, we can see we have both pci0 and lpc. now we can head to the next stage\n\n\n# edits to the sample ssdt\n\nnow that we have our acpi path, lets grab our ssdt and get to work:\n\n * ssdt-rtc0.dsl\n\nby default, this uses pci0.lpcb for the pathing. you'll want to rename accordingly.\n\nfollowing the example from above, we'll be renaming it to pci0.lpc:\n\nbefore:\n\nexternal (_sb_.pci0.lpcb, deviceobj) <- rename this\n\nscope (_sb.pci0.lpcb) <- rename this\n\n\n\n\nfollowing the example pathing we found, the ssdt should look something like this:\n\nafter:\n\nexternal (_sb_.pci0.lpc, deviceobj) <- renamed\n\nscope (_sb.pci0.lpc) <- renamed\n\n\n\n\n\n# compiling the ssdt\n\nwith the ssdt done, you're now ready to compile the ssdt!\n\n\n# wrapping up\n\nonce you're done making your ssdt, either head to the next page to finish the rest of the ssdts or head here if you're ready to wrap up:\n\n * cleanup",charsets:{}},{title:"Fixing System Clocks: Prebuilt",frontmatter:{},regularPath:"/Universal/awac-methods/prebuilt.html",relativePath:"Universal/awac-methods/prebuilt.md",key:"v-029f7a69",path:"/Universal/awac-methods/prebuilt.html",headers:[{level:2,title:"Wrapping up",slug:"wrapping-up",normalizedTitle:"wrapping up",charIndex:660}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"Wrapping up",content:"# Fixing System Clocks: Prebuilt\n\nBy far the easiest method, all you need to do is download the following file:\n\n * SSDT-AWAC.aml\n   * For most users\n * SSDT-RTC0-RANGE-HEDT\n   * For Intel's X99 and X299 platforms\n\nMain things to note with this method:\n\n * Assumes you both have an AWAC clock and it can be easily turned off with the RTC replacing it, this may not always work\n   * This only applies to SSDT-AWAC\n   * SSDT-RTC0-RANGE instead relies on known RTC names, and can only handle so many edge cases\n * Doesn't really teach you anything\n   * For most, this doesn't matter. But to some knowing what makes your hackintosh tick is part of the journey\n\n\n# Wrapping up\n\nOnce you're done making your SSDT, either head to the next page to finish the rest of the SSDTs or head here if you're ready to wrap up:\n\n * Cleanup",normalizedContent:"# fixing system clocks: prebuilt\n\nby far the easiest method, all you need to do is download the following file:\n\n * ssdt-awac.aml\n   * for most users\n * ssdt-rtc0-range-hedt\n   * for intel's x99 and x299 platforms\n\nmain things to note with this method:\n\n * assumes you both have an awac clock and it can be easily turned off with the rtc replacing it, this may not always work\n   * this only applies to ssdt-awac\n   * ssdt-rtc0-range instead relies on known rtc names, and can only handle so many edge cases\n * doesn't really teach you anything\n   * for most, this doesn't matter. but to some knowing what makes your hackintosh tick is part of the journey\n\n\n# wrapping up\n\nonce you're done making your ssdt, either head to the next page to finish the rest of the ssdts or head here if you're ready to wrap up:\n\n * cleanup",charsets:{}},{title:"Fixing System Clocks (SSDT-AWAC/RTC0)",frontmatter:{},regularPath:"/Universal/awac-methods/ssdttime.html",relativePath:"Universal/awac-methods/ssdttime.md",key:"v-44ef01a9",path:"/Universal/awac-methods/ssdttime.html",headers:[{level:2,title:"Wrapping up",slug:"wrapping-up",normalizedTitle:"wrapping up",charIndex:650}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"Wrapping up",content:"# Fixing System Clocks (SSDT-AWAC/RTC0)\n\n * Reminder: Does not support HEDT(ie. X99 and X299)\n\nThe second involves using SSDTTime which automates most of the process. See here on how to use it: SSDTs: Easy Way\n\nTo get the SSDT-PMC, run the following:\n\n * 7. Dump DSDT then run 6. AWAC\n\nThis will provide you with some files, the main one you care about is SSDT-AWAC.aml. or SSDT-RTC0.aml. The DSDT and .dsl are only left for referencing or verification.\n\nThe main things to note with this method:\n\n * Doesn't really teach you anything\n   * For most, this doesn't matter. But to some knowing what makes your hackintosh tick is part of the journey\n\n\n# Wrapping up\n\nOnce you're done making your SSDT, either head to the next page to finish the rest of the SSDTs or head here if you're ready to wrap up:\n\n * Cleanup",normalizedContent:"# fixing system clocks (ssdt-awac/rtc0)\n\n * reminder: does not support hedt(ie. x99 and x299)\n\nthe second involves using ssdttime which automates most of the process. see here on how to use it: ssdts: easy way\n\nto get the ssdt-pmc, run the following:\n\n * 7. dump dsdt then run 6. awac\n\nthis will provide you with some files, the main one you care about is ssdt-awac.aml. or ssdt-rtc0.aml. the dsdt and .dsl are only left for referencing or verification.\n\nthe main things to note with this method:\n\n * doesn't really teach you anything\n   * for most, this doesn't matter. but to some knowing what makes your hackintosh tick is part of the journey\n\n\n# wrapping up\n\nonce you're done making your ssdt, either head to the next page to finish the rest of the ssdts or head here if you're ready to wrap up:\n\n * cleanup",charsets:{}},{title:"Fixing System Clocks (SSDT-AWAC/RTC0)",frontmatter:{},regularPath:"/Universal/awac.html",relativePath:"Universal/awac.md",key:"v-6ca0e87d",path:"/Universal/awac.html",headers:[{level:2,title:"What this SSDT does",slug:"what-this-ssdt-does",normalizedTitle:"what this ssdt does",charIndex:44},{level:2,title:"Methods to make this SSDT",slug:"methods-to-make-this-ssdt",normalizedTitle:"methods to make this ssdt",charIndex:67}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"What this SSDT does Methods to make this SSDT",content:'# Fixing System Clocks (SSDT-AWAC/RTC0)\n\n * What this SSDT does\n * Methods to make this SSDT\n\n\n# What this SSDT does\n\nThe purpose of SSDT-AWAC/RTC0 is to fix the system clocks found on newer hardware, mainly found in the following:\n\n * B360\n * B365\n * H310\n * H370\n * Z370 (Gigabyte and AsRock boards with newer BIOS versions)\n * Z390\n * B460\n * Z490\n * 400 series (Comet Lake, including Z490)\n * 495 series (Icelake)\n * X99\n * X299\n\nSSDT-AWAC tries to re-enable the old RTC clock that is compatible with macOS, while SSDT-RTC0 will instead create a "fake" RTC clock if there is no legacy one to enable.\n\n\n# Methods to make this SSDT\n\nFor the RTC fix, there are 3 methods you can choose from:\n\n * Prebuilt\n * SSDTTime\n   * Does not support HEDT\n * Manual\n   * For most users\n * Manual HEDT\n   * For X99 and X299 users',normalizedContent:'# fixing system clocks (ssdt-awac/rtc0)\n\n * what this ssdt does\n * methods to make this ssdt\n\n\n# what this ssdt does\n\nthe purpose of ssdt-awac/rtc0 is to fix the system clocks found on newer hardware, mainly found in the following:\n\n * b360\n * b365\n * h310\n * h370\n * z370 (gigabyte and asrock boards with newer bios versions)\n * z390\n * b460\n * z490\n * 400 series (comet lake, including z490)\n * 495 series (icelake)\n * x99\n * x299\n\nssdt-awac tries to re-enable the old rtc clock that is compatible with macos, while ssdt-rtc0 will instead create a "fake" rtc clock if there is no legacy one to enable.\n\n\n# methods to make this ssdt\n\nfor the rtc fix, there are 3 methods you can choose from:\n\n * prebuilt\n * ssdttime\n   * does not support hedt\n * manual\n   * for most users\n * manual hedt\n   * for x99 and x299 users',charsets:{}},{title:"Fixing Embedded Controller (SSDT-EC/USBX)",frontmatter:{},regularPath:"/Universal/ec-fix.html",relativePath:"Universal/ec-fix.md",key:"v-4de68e61",path:"/Universal/ec-fix.html",headers:[{level:2,title:"What this SSDT does",slug:"what-this-ssdt-does",normalizedTitle:"what this ssdt does",charIndex:95},{level:2,title:"Methods to make this SSDT",slug:"methods-to-make-this-ssdt",normalizedTitle:"methods to make this ssdt",charIndex:120}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"What this SSDT does Methods to make this SSDT",content:"# Fixing Embedded Controller (SSDT-EC/USBX)\n\n * Fixing Embedded Controller (SSDT-EC/USBX)\n   * What this SSDT does\n   * Methods to make this SSDT\n\n\n# What this SSDT does\n\nThe purpose of SSDT-EC/USBX is a couple things:\n\n * On desktops, the EC(or better known as the embedded controller) isn't compatible with AppleACPIEC driver, to get around this we disable this device when running macOS\n * AppleBusPowerController will look for a device named EC, so we will want to create a fake device for this kext to load onto\n   * AppleBusPowerController also requires a USBX device to supply USB power properties for Skylake and newer, so we will bundle this device in with the EC fix\n * On laptops, the EC is used for hotkeys and battery so disabling this isn't all too ideal. Problem is our EC's name isn't compatible, so we will create a simple \"fake\" EC device that will satisfy Apple\n\nSo TL;DR:\n\n * EC is embedded controller\n * Desktops will want real EC off, and a fake EC created\n * Laptops will just want an additional fake EC present\n * Skylake and newer devices will want USBX as well\n\n\n# Methods to make this SSDT\n\nFor the EC fix, there are 3 methods you can choose from:\n\n * Prebuilt\n * SSDTTime\n * Manual",normalizedContent:"# fixing embedded controller (ssdt-ec/usbx)\n\n * fixing embedded controller (ssdt-ec/usbx)\n   * what this ssdt does\n   * methods to make this ssdt\n\n\n# what this ssdt does\n\nthe purpose of ssdt-ec/usbx is a couple things:\n\n * on desktops, the ec(or better known as the embedded controller) isn't compatible with appleacpiec driver, to get around this we disable this device when running macos\n * applebuspowercontroller will look for a device named ec, so we will want to create a fake device for this kext to load onto\n   * applebuspowercontroller also requires a usbx device to supply usb power properties for skylake and newer, so we will bundle this device in with the ec fix\n * on laptops, the ec is used for hotkeys and battery so disabling this isn't all too ideal. problem is our ec's name isn't compatible, so we will create a simple \"fake\" ec device that will satisfy apple\n\nso tl;dr:\n\n * ec is embedded controller\n * desktops will want real ec off, and a fake ec created\n * laptops will just want an additional fake ec present\n * skylake and newer devices will want usbx as well\n\n\n# methods to make this ssdt\n\nfor the ec fix, there are 3 methods you can choose from:\n\n * prebuilt\n * ssdttime\n * manual",charsets:{}},{title:"Fixing Embedded Controllers: Manual",frontmatter:{},regularPath:"/Universal/ec-methods/manual.html",relativePath:"Universal/ec-methods/manual.md",key:"v-9136e2ee",path:"/Universal/ec-methods/manual.html",headers:[{level:2,title:"Finding the ACPI path",slug:"finding-the-acpi-path",normalizedTitle:"finding the acpi path",charIndex:83},{level:3,title:"DSDT",slug:"dsdt",normalizedTitle:"dsdt",charIndex:112},{level:3,title:"DeviceManager",slug:"devicemanager",normalizedTitle:"devicemanager",charIndex:124},{level:2,title:"Edits to the sample SSDT",slug:"edits-to-the-sample-ssdt",normalizedTitle:"edits to the sample ssdt",charIndex:143},{level:2,title:"Edge Cases",slug:"edge-cases",normalizedTitle:"edge cases",charIndex:173},{level:3,title:"Multiple PNP0C09's show up",slug:"multiple-pnp0c09-s-show-up",normalizedTitle:"multiple pnp0c09's show up",charIndex:191},{level:3,title:"No PNP0C09 show up",slug:"no-pnp0c09-show-up",normalizedTitle:"no pnp0c09 show up",charIndex:225},{level:3,title:"PNP0C09 already named EC",slug:"pnp0c09-already-named-ec",normalizedTitle:"pnp0c09 already named ec",charIndex:251},{level:3,title:"PNP0C09 already has a _STA method",slug:"pnp0c09-already-has-a-sta-method",normalizedTitle:"pnp0c09 already has a _sta method",charIndex:283},{level:2,title:"Compiling the SSDT",slug:"compiling-the-ssdt",normalizedTitle:"compiling the ssdt",charIndex:322},{level:2,title:"Wrapping up",slug:"wrapping-up",normalizedTitle:"wrapping up",charIndex:346}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"Finding the ACPI path DSDT DeviceManager Edits to the sample SSDT Edge Cases Multiple PNP0C09's show up No PNP0C09 show up PNP0C09 already named EC PNP0C09 already has a _STA method Compiling the SSDT Wrapping up",content:"# Fixing Embedded Controllers: Manual\n\n * Fixing Embedded Controllers: Manual\n   * Finding the ACPI path\n     * DSDT\n     * DeviceManager\n   * Edits to the sample SSDT\n   * Edge Cases\n     * Multiple PNP0C09's show up\n     * No PNP0C09 show up\n     * PNP0C09 already named EC\n     * PNP0C09 already has a _STA method\n   * Compiling the SSDT\n   * Wrapping up\n\nTO-DO:\n\n * Finish Edge cases and sample SSDT edits\n\n\n# Finding the ACPI path\n\nTo find the ACPI pathing, you have 2 methods:\n\n * DSDT\n * DeviceManager\n\n\n# DSDT\n\nFinding the ACPI pathing is quite easy actually, first open your decompiled DSDT you got from Dumping the DSDT and Decompiling and Compiling with either MaciASL(if in macOS) or any other text editor if in Windows or Linux(VSCode has an ACPI extension that can also help).\n\nNext, search for PNP0C09. You should get something similar:\n\n\n\nFrom the above example we see 2 main things:\n\n * Name of our embedded controller\n   * In this case being EC0\n * Pathing of our embedded controller\n   * PC00.LPC0\n\nBut now we get into edge case territory, what fun!\n\nThe main ones to check for are:\n\n * Multiple PNP0C09's show up\n * No PNP0C09 show up\n * PNP0C09 already named EC\n * PNP0C09 already has a _STA method\n\nIf none of the above apply to you, you're ready for the next section:\n\n\n# DeviceManager\n\nIf you already have Windows installed on this machine, finding the EC pathing is fairly easy.\n\nStart by opening up Device Manager in Windows and looking for a device named Embedded Controller. Once found, click on it and select the BIOS device Name entry. You should get something like this:\n\n\n\nFrom the above, we can see that our pathing is SB.PC00.LPC0.EC0\n\nNow with the pathing, you can head here: Edits to the sample SSDT\n\n\n# Edits to the sample SSDT\n\nNow that we have our ACPI path, lets grab our SSDT and get to work:\n\n * SSDT-EC-USBX\n   * For Skylake and newer and all AMD systems\n * SSDT-EC\n   * For Broadwell and older\n\nNow when opening this SSDT, you'll notice a few things. Mainly:\n\n * Some code is commented out\n   * This is code for disabling our EC\n   * Laptops users SHOULD NOT uncomment this\n * There's a new EC called Device (EC)\n   * DO NOT RENAME THIS, this will be the EC we give to macOS\n\nBefore:\n\nExternal (_SB_.PCI0.LPCB, DeviceObj) <- Rename this\n\nScope (_SB.PCI0.LPCB) <- Rename this\n\n\n\n\nFollowing the example pathing we found, the SSDT should look something like this:\n\nAfter:\n\nExternal (_SB_.PC00.LPC0, DeviceObj) <- Renamed\n\nScope (_SB.PC00.LPC0) <- Renamed\n\n\n\n\n\n# Edge Cases\n\n\n# Multiple PNP0C09's show up\n\nWhen multiple PNP0C09 show up, we need to next check for the following properties:\n\n * _HID (Hardware ID)\n * _CRS (Current Resource Settings)\n * _GPE (General Purpose Events)\n\nWhat these signify is whether this PNP0C09 device is real or not, as per the ACPI spec. So one's matching the above criteria are the one's we want to disable.\n\n * Note: If _STA shows up as well, you'll need to go here: PNP0C09 already has a _STA method\n\n\n# No PNP0C09 show up\n\nWhen this happens, you'll only need to create a \"dummy\" EC for macOS.\n\nTry searching for any devices named: \"LPCB\", \"LPC0\", \"LPC\", \"SBRG\", \"PX40\". If you have any of these, try using the LPC pathing of each of those device in place of the Embedded Controller's pathing.\n\nNote that DO NOT uncomment the EC disabling code as there are no devices that are considered \"EC\" in your machine.\n\n\n# PNP0C09 already named EC\n\nCongrats! No need to create an SSDT-EC! However you will still want USBX if you're Skylake or newer.\n\nPrebuilt can be grabbed here: SSDT-USBX.aml\n\n\n# PNP0C09 already has a _STA method\n\nThis is the equivalent of not having an EC as we can't control it with our SSDT-EC, instead we'll need to create a \"dummy\" EC for macOS. You'll still want to find the PCI and LPC pathing for this device. So follow the guide as if you were creating a laptop SSDT-EC/USBX.\n\nExample of an EC with STA already:\n\n\n\n\n# Compiling the SSDT\n\nWith the SSDT done, you're now ready to compile the SSDT!\n\n\n# Wrapping up\n\nOnce you're done making your SSDT, either head to the next page to finish the rest of the SSDTs or head here if you're ready to wrap up:\n\n * Cleanup",normalizedContent:"# fixing embedded controllers: manual\n\n * fixing embedded controllers: manual\n   * finding the acpi path\n     * dsdt\n     * devicemanager\n   * edits to the sample ssdt\n   * edge cases\n     * multiple pnp0c09's show up\n     * no pnp0c09 show up\n     * pnp0c09 already named ec\n     * pnp0c09 already has a _sta method\n   * compiling the ssdt\n   * wrapping up\n\nto-do:\n\n * finish edge cases and sample ssdt edits\n\n\n# finding the acpi path\n\nto find the acpi pathing, you have 2 methods:\n\n * dsdt\n * devicemanager\n\n\n# dsdt\n\nfinding the acpi pathing is quite easy actually, first open your decompiled dsdt you got from dumping the dsdt and decompiling and compiling with either maciasl(if in macos) or any other text editor if in windows or linux(vscode has an acpi extension that can also help).\n\nnext, search for pnp0c09. you should get something similar:\n\n\n\nfrom the above example we see 2 main things:\n\n * name of our embedded controller\n   * in this case being ec0\n * pathing of our embedded controller\n   * pc00.lpc0\n\nbut now we get into edge case territory, what fun!\n\nthe main ones to check for are:\n\n * multiple pnp0c09's show up\n * no pnp0c09 show up\n * pnp0c09 already named ec\n * pnp0c09 already has a _sta method\n\nif none of the above apply to you, you're ready for the next section:\n\n\n# devicemanager\n\nif you already have windows installed on this machine, finding the ec pathing is fairly easy.\n\nstart by opening up device manager in windows and looking for a device named embedded controller. once found, click on it and select the bios device name entry. you should get something like this:\n\n\n\nfrom the above, we can see that our pathing is sb.pc00.lpc0.ec0\n\nnow with the pathing, you can head here: edits to the sample ssdt\n\n\n# edits to the sample ssdt\n\nnow that we have our acpi path, lets grab our ssdt and get to work:\n\n * ssdt-ec-usbx\n   * for skylake and newer and all amd systems\n * ssdt-ec\n   * for broadwell and older\n\nnow when opening this ssdt, you'll notice a few things. mainly:\n\n * some code is commented out\n   * this is code for disabling our ec\n   * laptops users should not uncomment this\n * there's a new ec called device (ec)\n   * do not rename this, this will be the ec we give to macos\n\nbefore:\n\nexternal (_sb_.pci0.lpcb, deviceobj) <- rename this\n\nscope (_sb.pci0.lpcb) <- rename this\n\n\n\n\nfollowing the example pathing we found, the ssdt should look something like this:\n\nafter:\n\nexternal (_sb_.pc00.lpc0, deviceobj) <- renamed\n\nscope (_sb.pc00.lpc0) <- renamed\n\n\n\n\n\n# edge cases\n\n\n# multiple pnp0c09's show up\n\nwhen multiple pnp0c09 show up, we need to next check for the following properties:\n\n * _hid (hardware id)\n * _crs (current resource settings)\n * _gpe (general purpose events)\n\nwhat these signify is whether this pnp0c09 device is real or not, as per the acpi spec. so one's matching the above criteria are the one's we want to disable.\n\n * note: if _sta shows up as well, you'll need to go here: pnp0c09 already has a _sta method\n\n\n# no pnp0c09 show up\n\nwhen this happens, you'll only need to create a \"dummy\" ec for macos.\n\ntry searching for any devices named: \"lpcb\", \"lpc0\", \"lpc\", \"sbrg\", \"px40\". if you have any of these, try using the lpc pathing of each of those device in place of the embedded controller's pathing.\n\nnote that do not uncomment the ec disabling code as there are no devices that are considered \"ec\" in your machine.\n\n\n# pnp0c09 already named ec\n\ncongrats! no need to create an ssdt-ec! however you will still want usbx if you're skylake or newer.\n\nprebuilt can be grabbed here: ssdt-usbx.aml\n\n\n# pnp0c09 already has a _sta method\n\nthis is the equivalent of not having an ec as we can't control it with our ssdt-ec, instead we'll need to create a \"dummy\" ec for macos. you'll still want to find the pci and lpc pathing for this device. so follow the guide as if you were creating a laptop ssdt-ec/usbx.\n\nexample of an ec with sta already:\n\n\n\n\n# compiling the ssdt\n\nwith the ssdt done, you're now ready to compile the ssdt!\n\n\n# wrapping up\n\nonce you're done making your ssdt, either head to the next page to finish the rest of the ssdts or head here if you're ready to wrap up:\n\n * cleanup",charsets:{}},{title:"Fixing Embedded Controllers: Prebuilt",frontmatter:{},regularPath:"/Universal/ec-methods/prebuilt.html",relativePath:"Universal/ec-methods/prebuilt.md",key:"v-3b8fbee9",path:"/Universal/ec-methods/prebuilt.html",headers:[{level:2,title:"Wrapping up",slug:"wrapping-up",normalizedTitle:"wrapping up",charIndex:726}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"Wrapping up",content:"# Fixing Embedded Controllers: Prebuilt\n\nBy far the easiest way to fix your Embedded Controller is just downloading one of the files below:\n\nDesktop:\n\n * SSDT-EC-USBX-DESKTOP\n   * For Skylake desktops and newer and AMD CPU based systems\n * SSDT-EC-DESKTOP\n   * For Broadwell desktops and older\n\nLaptops:\n\n * SSDT-EC-USBX-LAPTOP.aml\n   * For Skylake laptops and newer\n * SSDT-EC-LAPTOP.aml\n   * For Broadwell laptops and older\n\nThe main things to note with this method:\n\n * Quite Bloated\n   * There's ACPI naming for every type, this means there's added delays in boot times\n * Doesn't really teach you anything\n   * For most, this doesn't matter. But to some knowing what makes your hackintosh tick is part of the journey\n\n\n# Wrapping up\n\nOnce you're done making your SSDT, either head to the next page to finish the rest of the SSDTs or head here if you're ready to wrap up:\n\n * Cleanup",normalizedContent:"# fixing embedded controllers: prebuilt\n\nby far the easiest way to fix your embedded controller is just downloading one of the files below:\n\ndesktop:\n\n * ssdt-ec-usbx-desktop\n   * for skylake desktops and newer and amd cpu based systems\n * ssdt-ec-desktop\n   * for broadwell desktops and older\n\nlaptops:\n\n * ssdt-ec-usbx-laptop.aml\n   * for skylake laptops and newer\n * ssdt-ec-laptop.aml\n   * for broadwell laptops and older\n\nthe main things to note with this method:\n\n * quite bloated\n   * there's acpi naming for every type, this means there's added delays in boot times\n * doesn't really teach you anything\n   * for most, this doesn't matter. but to some knowing what makes your hackintosh tick is part of the journey\n\n\n# wrapping up\n\nonce you're done making your ssdt, either head to the next page to finish the rest of the ssdts or head here if you're ready to wrap up:\n\n * cleanup",charsets:{}},{title:"Fixing Embedded Controllers: SSDTTime",frontmatter:{},regularPath:"/Universal/ec-methods/ssdttime.html",relativePath:"Universal/ec-methods/ssdttime.md",key:"v-4d1042ae",path:"/Universal/ec-methods/ssdttime.html",headers:[{level:2,title:"Wrapping up",slug:"wrapping-up",normalizedTitle:"wrapping up",charIndex:885}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"Wrapping up",content:"# Fixing Embedded Controllers: SSDTTime\n\nThe second involves using SSDTTime which automates most of the process. See here on how to use it: SSDTs: Easy Way\n\nTo get the SSDT-EC on desktops, run the following:\n\n * 7. Dump DSDT then run 2. FakeEC\n\nTo get the SSDT-EC on laptops, run the following:\n\n * 7. Dump DSDT then run 3. FakeEC Laptop\n\nThis will provide you with some files, the main one you care about is SSDT-EC.aml. The DSDT and .dsl are only left for referencing or verification.\n\nThe main things to note with this method:\n\n * Doesn't provide you the USBX property to fix power\n   * This can easily be fixed by using this prebuilt file in addition to SSDT-EC: SSDT-USBX.aml\n   * Note USBX is only needed for Skylake and newer\n * Doesn't really teach you anything\n   * For most, this doesn't matter. But to some knowing what makes your hackintosh tick is part of the journey\n\n\n# Wrapping up\n\nOnce you're done making your SSDT, either head to the next page to finish the rest of the SSDTs or head here if you're ready to wrap up:\n\n * Cleanup",normalizedContent:"# fixing embedded controllers: ssdttime\n\nthe second involves using ssdttime which automates most of the process. see here on how to use it: ssdts: easy way\n\nto get the ssdt-ec on desktops, run the following:\n\n * 7. dump dsdt then run 2. fakeec\n\nto get the ssdt-ec on laptops, run the following:\n\n * 7. dump dsdt then run 3. fakeec laptop\n\nthis will provide you with some files, the main one you care about is ssdt-ec.aml. the dsdt and .dsl are only left for referencing or verification.\n\nthe main things to note with this method:\n\n * doesn't provide you the usbx property to fix power\n   * this can easily be fixed by using this prebuilt file in addition to ssdt-ec: ssdt-usbx.aml\n   * note usbx is only needed for skylake and newer\n * doesn't really teach you anything\n   * for most, this doesn't matter. but to some knowing what makes your hackintosh tick is part of the journey\n\n\n# wrapping up\n\nonce you're done making your ssdt, either head to the next page to finish the rest of the ssdts or head here if you're ready to wrap up:\n\n * cleanup",charsets:{}},{title:"Fixing IMEI: Manual",frontmatter:{},regularPath:"/Universal/imei-methods/manual.html",relativePath:"Universal/imei-methods/manual.md",key:"v-4b73ca6e",path:"/Universal/imei-methods/manual.html",headers:[{level:2,title:"Finding the ACPI device",slug:"finding-the-acpi-device",normalizedTitle:"finding the acpi device",charIndex:26},{level:2,title:"Compiling the SSDT",slug:"compiling-the-ssdt",normalizedTitle:"compiling the ssdt",charIndex:53},{level:2,title:"Wrapping up",slug:"wrapping-up",normalizedTitle:"wrapping up",charIndex:75}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"Finding the ACPI device Compiling the SSDT Wrapping up",content:"# Fixing IMEI: Manual\n\n * Finding the ACPI device\n * Compiling the SSDT\n * Wrapping up\n\n\n# Finding the ACPI device\n\nFinding the ACPI pathing is quite easy actually, first open your decompiled DSDT you got from Dumping the DSDT and Decompiling and Compiling with either MaciASL(if in macOS) or any other text editor if in Windows or Linux(VSCode has an ACPI extension that can also help).\n\nNext, search for the following devices:\n\n * IMEI\n * HECI\n * MEI\n\nIf none of the 3 show up, you'll need to create an SSDT-IMEI.\n\nIf one of these 3 devices show up, you do not need SSDT-IMEI! You can simply skip this page.\n\nThe rest of this page will however assume none of those 3 devices showed up.\n\n\n# Compiling the SSDT\n\nSo there's actually no edits required to SSDT-IMEI, you can either grab the source code and compile yourself or use the prebuilt\n\n * Prebuilt SSDT-IMEI\n\n * SSDT-IMEI's source code\n\nWith the SSDT done, you're now ready to compile the SSDT!\n\n\n# Wrapping up\n\nOnce you're done making your SSDT, either head to the next page to finish the rest of the SSDTs or head here if you're ready to wrap up:\n\n * Cleanup",normalizedContent:"# fixing imei: manual\n\n * finding the acpi device\n * compiling the ssdt\n * wrapping up\n\n\n# finding the acpi device\n\nfinding the acpi pathing is quite easy actually, first open your decompiled dsdt you got from dumping the dsdt and decompiling and compiling with either maciasl(if in macos) or any other text editor if in windows or linux(vscode has an acpi extension that can also help).\n\nnext, search for the following devices:\n\n * imei\n * heci\n * mei\n\nif none of the 3 show up, you'll need to create an ssdt-imei.\n\nif one of these 3 devices show up, you do not need ssdt-imei! you can simply skip this page.\n\nthe rest of this page will however assume none of those 3 devices showed up.\n\n\n# compiling the ssdt\n\nso there's actually no edits required to ssdt-imei, you can either grab the source code and compile yourself or use the prebuilt\n\n * prebuilt ssdt-imei\n\n * ssdt-imei's source code\n\nwith the ssdt done, you're now ready to compile the ssdt!\n\n\n# wrapping up\n\nonce you're done making your ssdt, either head to the next page to finish the rest of the ssdts or head here if you're ready to wrap up:\n\n * cleanup",charsets:{}},{title:"Fixing IMEI: Prebuilt",frontmatter:{},regularPath:"/Universal/imei-methods/prebuilt.html",relativePath:"Universal/imei-methods/prebuilt.md",key:"v-86b8972e",path:"/Universal/imei-methods/prebuilt.html",headers:[{level:2,title:"Wrapping up",slug:"wrapping-up",normalizedTitle:"wrapping up",charIndex:125}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"Wrapping up",content:"# Fixing IMEI: Prebuilt\n\nBy far the easiest method, all you need to do is download the following file:\n\n * SSDT-IMEI.aml\n\n\n# Wrapping up\n\nOnce you're done making your SSDT, either head to the next page to finish the rest of the SSDTs or head here if you're ready to wrap up:\n\n * Cleanup",normalizedContent:"# fixing imei: prebuilt\n\nby far the easiest method, all you need to do is download the following file:\n\n * ssdt-imei.aml\n\n\n# wrapping up\n\nonce you're done making your ssdt, either head to the next page to finish the rest of the ssdts or head here if you're ready to wrap up:\n\n * cleanup",charsets:{}},{title:"Fixing IMEI (SSDT-IMEI)",frontmatter:{},regularPath:"/Universal/imei.html",relativePath:"Universal/imei.md",key:"v-e2b716c6",path:"/Universal/imei.html",headers:[{level:2,title:"What this SSDT does",slug:"what-this-ssdt-does",normalizedTitle:"what this ssdt does",charIndex:59},{level:2,title:"Methods to make this SSDT",slug:"methods-to-make-this-ssdt",normalizedTitle:"methods to make this ssdt",charIndex:84}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"What this SSDT does Methods to make this SSDT",content:"# Fixing IMEI (SSDT-IMEI)\n\n * Fixing IMEI (SSDT-IMEI)\n   * What this SSDT does\n   * Methods to make this SSDT\n\n\n# What this SSDT does\n\nThe purpose of SSDT-IMEI is:\n\n * When mixing Ivy Bridge CPUs with 6 series motherboard, we get an issue where the IMEI device becomes incompatible with macOS. Specifically the device-id won't be recognized and this is a very important issue as macOS relies on the IMEI device for iGPU drivers.\n   * The same applies when mixing Sandy Bridge CPUs with 7 series motherboards\n * An extra issue that may pop up is that the IMEI won't appear in ACPI, which can lead to more issues as macOS expects there to be an ACPI device to apply device-id's. So to resolve, we'll want to verify if we have an IMEI device, and if not create a new device.\n\n\n# Methods to make this SSDT\n\nFor the IMEI fix, there are 2 methods you can choose from:\n\n * Prebuilt\n   * The prebuilt are a bit bloated. It's recommended to use the method below.\n * Manual",normalizedContent:"# fixing imei (ssdt-imei)\n\n * fixing imei (ssdt-imei)\n   * what this ssdt does\n   * methods to make this ssdt\n\n\n# what this ssdt does\n\nthe purpose of ssdt-imei is:\n\n * when mixing ivy bridge cpus with 6 series motherboard, we get an issue where the imei device becomes incompatible with macos. specifically the device-id won't be recognized and this is a very important issue as macos relies on the imei device for igpu drivers.\n   * the same applies when mixing sandy bridge cpus with 7 series motherboards\n * an extra issue that may pop up is that the imei won't appear in acpi, which can lead to more issues as macos expects there to be an acpi device to apply device-id's. so to resolve, we'll want to verify if we have an imei device, and if not create a new device.\n\n\n# methods to make this ssdt\n\nfor the imei fix, there are 2 methods you can choose from:\n\n * prebuilt\n   * the prebuilt are a bit bloated. it's recommended to use the method below.\n * manual",charsets:{}},{title:"Fixing IRQ Conflicts (SSDT-HPET + OC_Patches.plist)",frontmatter:{},regularPath:"/Universal/irq.html",relativePath:"Universal/irq.md",key:"v-e20ae26e",path:"/Universal/irq.html",lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:null,content:"# Fixing IRQ Conflicts (SSDT-HPET + OC_Patches.plist)\n\nSo you miss having those fancy hot-patches from Clover like FixIPIC, FixTMR, FixRTC, FixHPET, etc\n\nWell 1 very small problem, figuring out IRQ patching is a massive headache. I highly recommend you use SSDTTime. So head over to SSDT: Easy Way on how to make it.(use option C to omit conflicting legacy IRQs)",normalizedContent:"# fixing irq conflicts (ssdt-hpet + oc_patches.plist)\n\nso you miss having those fancy hot-patches from clover like fixipic, fixtmr, fixrtc, fixhpet, etc\n\nwell 1 very small problem, figuring out irq patching is a massive headache. i highly recommend you use ssdttime. so head over to ssdt: easy way on how to make it.(use option c to omit conflicting legacy irqs)",charsets:{}},{title:"Fixing NVRAM: Manual",frontmatter:{},regularPath:"/Universal/nvram-methods/manual.html",relativePath:"Universal/nvram-methods/manual.md",key:"v-8fd4fe0e",path:"/Universal/nvram-methods/manual.html",headers:[{level:2,title:"Finding the ACPI path",slug:"finding-the-acpi-path",normalizedTitle:"finding the acpi path",charIndex:27},{level:2,title:"Edits to the sample SSDT",slug:"edits-to-the-sample-ssdt",normalizedTitle:"edits to the sample ssdt",charIndex:52},{level:2,title:"Compiling the SSDT",slug:"compiling-the-ssdt",normalizedTitle:"compiling the ssdt",charIndex:80},{level:2,title:"Wrapping up",slug:"wrapping-up",normalizedTitle:"wrapping up",charIndex:102}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"Finding the ACPI path Edits to the sample SSDT Compiling the SSDT Wrapping up",content:"# Fixing NVRAM: Manual\n\n * Finding the ACPI path\n * Edits to the sample SSDT\n * Compiling the SSDT\n * Wrapping up\n\n\n# Finding the ACPI path\n\nFinding the ACPI pathing is quite easy actually, first open your decompiled DSDT you got from Dumping the DSDT and Decompiling and Compiling with either MaciASL(if in macOS) or any other text editor if in Windows or Linux(VSCode has an ACPI extension that can also help).\n\nNext, search for the following:\n\n * Finding the LowPinCount path:\n   * Search Name (_ADR, 0x001F0000)\n * Finding the PCI path:\n   * Search PNP0A08 (If multiple show up, use the first one)\n\nYou should get something like the following show up:\n\nLPC PATHING   PCI PATHING\n              \n\nNow with the pathing, you can head here: Edits to the sample SSDT\n\n\n# Edits to the sample SSDT\n\nNow that we have our ACPI path, lets grab our SSDT and get to work:\n\n * SSDT-PMC.dsl\n\nBy default, this uses PCI0.LPCB for the pathing. you'll want to rename accordingly.\n\nFollowing the example from above, we'll be renaming it to PCI0.LPC:\n\nBefore:\n\nExternal (_SB_.PCI0.LPCB, DeviceObj) <- Rename this\n\nScope (_SB.PCI0.LPCB) <- Rename this\n\n\n\n\nFollowing the example pathing we found, the SSDT should look something like this:\n\nAfter:\n\nExternal (_SB_.PCI0.LPC, DeviceObj) <- Renamed\n\nScope (_SB.PCI0.LPC) <- Renamed\n\n\n\n\n\n# Compiling the SSDT\n\nWith the SSDT done, you're now ready to compile the SSDT!\n\n\n# Wrapping up\n\nOnce you're done making your SSDT, either head to the next page to finish the rest of the SSDTs or head here if you're ready to wrap up:\n\n * Cleanup",normalizedContent:"# fixing nvram: manual\n\n * finding the acpi path\n * edits to the sample ssdt\n * compiling the ssdt\n * wrapping up\n\n\n# finding the acpi path\n\nfinding the acpi pathing is quite easy actually, first open your decompiled dsdt you got from dumping the dsdt and decompiling and compiling with either maciasl(if in macos) or any other text editor if in windows or linux(vscode has an acpi extension that can also help).\n\nnext, search for the following:\n\n * finding the lowpincount path:\n   * search name (_adr, 0x001f0000)\n * finding the pci path:\n   * search pnp0a08 (if multiple show up, use the first one)\n\nyou should get something like the following show up:\n\nlpc pathing   pci pathing\n              \n\nnow with the pathing, you can head here: edits to the sample ssdt\n\n\n# edits to the sample ssdt\n\nnow that we have our acpi path, lets grab our ssdt and get to work:\n\n * ssdt-pmc.dsl\n\nby default, this uses pci0.lpcb for the pathing. you'll want to rename accordingly.\n\nfollowing the example from above, we'll be renaming it to pci0.lpc:\n\nbefore:\n\nexternal (_sb_.pci0.lpcb, deviceobj) <- rename this\n\nscope (_sb.pci0.lpcb) <- rename this\n\n\n\n\nfollowing the example pathing we found, the ssdt should look something like this:\n\nafter:\n\nexternal (_sb_.pci0.lpc, deviceobj) <- renamed\n\nscope (_sb.pci0.lpc) <- renamed\n\n\n\n\n\n# compiling the ssdt\n\nwith the ssdt done, you're now ready to compile the ssdt!\n\n\n# wrapping up\n\nonce you're done making your ssdt, either head to the next page to finish the rest of the ssdts or head here if you're ready to wrap up:\n\n * cleanup",charsets:{}},{title:"Fixing NVRAM: Prebuilt",frontmatter:{},regularPath:"/Universal/nvram-methods/prebuilt.html",relativePath:"Universal/nvram-methods/prebuilt.md",key:"v-23bb50cf",path:"/Universal/nvram-methods/prebuilt.html",headers:[{level:2,title:"Wrapping up",slug:"wrapping-up",normalizedTitle:"wrapping up",charIndex:498}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"Wrapping up",content:"# Fixing NVRAM: Prebuilt\n\nBy far the easiest method, all you need to do is download the following file:\n\n * SSDT-PMC.aml\n\nMain things to note with this method:\n\n * Bit Bloated\n   * There's ACPI naming for most common paths, this means there's added delays in boot times(though unnoticeable to most as it's generally less than 0.5 seconds longer)\n * Doesn't really teach you anything\n   * For most, this doesn't matter. But to some knowing what makes your hackintosh tick is part of the journey\n\n\n# Wrapping up\n\nOnce you're done making your SSDT, either head to the next page to finish the rest of the SSDTs or head here if you're ready to wrap up:\n\n * Cleanup",normalizedContent:"# fixing nvram: prebuilt\n\nby far the easiest method, all you need to do is download the following file:\n\n * ssdt-pmc.aml\n\nmain things to note with this method:\n\n * bit bloated\n   * there's acpi naming for most common paths, this means there's added delays in boot times(though unnoticeable to most as it's generally less than 0.5 seconds longer)\n * doesn't really teach you anything\n   * for most, this doesn't matter. but to some knowing what makes your hackintosh tick is part of the journey\n\n\n# wrapping up\n\nonce you're done making your ssdt, either head to the next page to finish the rest of the ssdts or head here if you're ready to wrap up:\n\n * cleanup",charsets:{}},{title:"Fixing NVRAM (SSDT-PMC)",frontmatter:{},regularPath:"/Universal/nvram-methods/ssdttime.html",relativePath:"Universal/nvram-methods/ssdttime.md",key:"v-8167976a",path:"/Universal/nvram-methods/ssdttime.html",headers:[{level:2,title:"Wrapping up",slug:"wrapping-up",normalizedTitle:"wrapping up",charIndex:562}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"Wrapping up",content:"# Fixing NVRAM (SSDT-PMC)\n\nThe second involves using SSDTTime which automates most of the process. See here on how to use it: SSDTs: Easy Way\n\nTo get the SSDT-PMC, run the following:\n\n * 7. Dump DSDT then run 5. PMC\n\nThis will provide you with some files, the main one you care about is SSDT-PMC.aml. The DSDT and .dsl are only left for referencing or verification.\n\nThe main things to note with this method:\n\n * Doesn't really teach you anything\n   * For most, this doesn't matter. But to some knowing what makes your hackintosh tick is part of the journey\n\n\n# Wrapping up\n\nOnce you're done making your SSDT, either head to the next page to finish the rest of the SSDTs or head here if you're ready to wrap up:\n\n * Cleanup",normalizedContent:"# fixing nvram (ssdt-pmc)\n\nthe second involves using ssdttime which automates most of the process. see here on how to use it: ssdts: easy way\n\nto get the ssdt-pmc, run the following:\n\n * 7. dump dsdt then run 5. pmc\n\nthis will provide you with some files, the main one you care about is ssdt-pmc.aml. the dsdt and .dsl are only left for referencing or verification.\n\nthe main things to note with this method:\n\n * doesn't really teach you anything\n   * for most, this doesn't matter. but to some knowing what makes your hackintosh tick is part of the journey\n\n\n# wrapping up\n\nonce you're done making your ssdt, either head to the next page to finish the rest of the ssdts or head here if you're ready to wrap up:\n\n * cleanup",charsets:{}},{title:"Fixing NVRAM (SSDT-PMC)",frontmatter:{},regularPath:"/Universal/nvram.html",relativePath:"Universal/nvram.md",key:"v-66b55b09",path:"/Universal/nvram.html",headers:[{level:2,title:"What this SSDT does",slug:"what-this-ssdt-does",normalizedTitle:"what this ssdt does",charIndex:30},{level:2,title:"Methods to make this SSDT",slug:"methods-to-make-this-ssdt",normalizedTitle:"methods to make this ssdt",charIndex:53}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"What this SSDT does Methods to make this SSDT",content:"# Fixing NVRAM (SSDT-PMC)\n\n * What this SSDT does\n * Methods to make this SSDT\n\n\n# What this SSDT does\n\nThis SSDT is required for all \"true\" 300 series motherboards(Z370 is excluded), it specifically brings back NVRAM support and requires very little configuration for the end user.\n\n * B360\n * B365\n * H310\n * H370 (HM370 shouldn't require this)\n * Z390\n\n10th gen motherboards do not need this SSDT, NVRAM's native on these platforms.\n\n\n# Methods to make this SSDT\n\nThe main ways to make this SSDT:\n\n * Prebuilt\n * SSDTTime\n * Manual",normalizedContent:"# fixing nvram (ssdt-pmc)\n\n * what this ssdt does\n * methods to make this ssdt\n\n\n# what this ssdt does\n\nthis ssdt is required for all \"true\" 300 series motherboards(z370 is excluded), it specifically brings back nvram support and requires very little configuration for the end user.\n\n * b360\n * b365\n * h310\n * h370 (hm370 shouldn't require this)\n * z390\n\n10th gen motherboards do not need this ssdt, nvram's native on these platforms.\n\n\n# methods to make this ssdt\n\nthe main ways to make this ssdt:\n\n * prebuilt\n * ssdttime\n * manual",charsets:{}},{title:"Fixing Power Management: Manual",frontmatter:{},regularPath:"/Universal/plug-methods/manual.html",relativePath:"Universal/plug-methods/manual.md",key:"v-2a2d6b89",path:"/Universal/plug-methods/manual.html",headers:[{level:2,title:"Finding the ACPI path",slug:"finding-the-acpi-path",normalizedTitle:"finding the acpi path",charIndex:38},{level:3,title:"DSDT",slug:"dsdt",normalizedTitle:"dsdt",charIndex:65},{level:2,title:"Edits to the sample SSDT",slug:"edits-to-the-sample-ssdt",normalizedTitle:"edits to the sample ssdt",charIndex:92},{level:2,title:"Compiling the SSDT",slug:"compiling-the-ssdt",normalizedTitle:"compiling the ssdt",charIndex:120},{level:2,title:"Wrapping up",slug:"wrapping-up",normalizedTitle:"wrapping up",charIndex:142}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"Finding the ACPI path DSDT Edits to the sample SSDT Compiling the SSDT Wrapping up",content:"# Fixing Power Management: Manual\n\n * Finding the ACPI path\n   * DSDT\n   * DeviceManager\n * Edits to the sample SSDT\n * Compiling the SSDT\n * Wrapping up\n\n\n# Finding the ACPI path\n\nTo find the ACPI pathing, you have 2 methods:\n\n * DSDT\n * DeviceManager\n\n\n# DSDT\n\nCPU naming is fairly easy to figure out, first open your decompiled DSDT you got from Dumping the DSDT and Decompiling and Compiling with either MaciASL(if in macOS) or any other text editor if in Windows or Linux(VSCode has an ACPI extension that can also help).\n\nNext search for Processor. This should give you a result like this:\n\n\n\nAs we can see, the first processor in our list is SB.PR00. This is what we'll be applying the plugin-type=1 property too.\n\nX99 and X299 note:\n\nDue to the different DSDT structure of these systems, you'll need to actually check in multiple places as the pathing isn't as obvious:\n\n\n\nIf we then search for instances of CP00 we find that its full ACPI pathing is SB.SCK0.CP00:\n\n\n\nNow with the pathing, you can head here: Edits to the sample SSDT\n\n# DeviceManager\n\nIf you already have Windows installed on this machine, finding the CPU pathing is fairly easy.\n\nStart by opening up Device Manager in Windows and looking for a device named Processor. Once found, click on it and select the BIOS device Name entry. You should get something like this:\n\n\n\nFrom the above, we can see that our pathing is PR.CPU0. Pay close attention to the start as PR is important for creating the SSDT\n\nX99 and X299 note:\n\nOdd quirk of DeviceManager in Windows is that the Processor's order does not actually match the ACPI path, instead giving something like SB.SCK0.CP10:\n\n\n\nWhen this happens, you can either:\n\n * Look through and find the lowest value\n * Assume the lowest(commonly being PR00 or CP00)\n\nSo with the above X299 example, our CPU pathing would be SB.SCK0.CP00\n\nNow with the pathing, you can head here: Edits to the sample SSDT\n\n\n# Edits to the sample SSDT\n\nNow that we have our ACPI path, lets grab our SSDT and get to work:\n\n * SSDT-PLUG.dsl\n\nFrom the above SSDT, it's very likely your processor is already there. If so, you can delete all the other entries other than yours and the Method PMPM as this is what injects the plugin-type=1 property into our system.\n\n * Reminder: We only need to apply plugin-type=1 to the first thread\n\nFor the below example, we'll be using the X299 example(SB.SCK0.CP00)\n\nORIGINAL   CLEANED UP\n           \n\n\n# Compiling the SSDT\n\nWith the SSDT done, you're now ready to compile the SSDT!\n\n\n# Wrapping up\n\nOnce you're done making your SSDT, either head to the next page to finish the rest of the SSDTs or head here if you're ready to wrap up:\n\n * Cleanup",normalizedContent:"# fixing power management: manual\n\n * finding the acpi path\n   * dsdt\n   * devicemanager\n * edits to the sample ssdt\n * compiling the ssdt\n * wrapping up\n\n\n# finding the acpi path\n\nto find the acpi pathing, you have 2 methods:\n\n * dsdt\n * devicemanager\n\n\n# dsdt\n\ncpu naming is fairly easy to figure out, first open your decompiled dsdt you got from dumping the dsdt and decompiling and compiling with either maciasl(if in macos) or any other text editor if in windows or linux(vscode has an acpi extension that can also help).\n\nnext search for processor. this should give you a result like this:\n\n\n\nas we can see, the first processor in our list is sb.pr00. this is what we'll be applying the plugin-type=1 property too.\n\nx99 and x299 note:\n\ndue to the different dsdt structure of these systems, you'll need to actually check in multiple places as the pathing isn't as obvious:\n\n\n\nif we then search for instances of cp00 we find that its full acpi pathing is sb.sck0.cp00:\n\n\n\nnow with the pathing, you can head here: edits to the sample ssdt\n\n# devicemanager\n\nif you already have windows installed on this machine, finding the cpu pathing is fairly easy.\n\nstart by opening up device manager in windows and looking for a device named processor. once found, click on it and select the bios device name entry. you should get something like this:\n\n\n\nfrom the above, we can see that our pathing is pr.cpu0. pay close attention to the start as pr is important for creating the ssdt\n\nx99 and x299 note:\n\nodd quirk of devicemanager in windows is that the processor's order does not actually match the acpi path, instead giving something like sb.sck0.cp10:\n\n\n\nwhen this happens, you can either:\n\n * look through and find the lowest value\n * assume the lowest(commonly being pr00 or cp00)\n\nso with the above x299 example, our cpu pathing would be sb.sck0.cp00\n\nnow with the pathing, you can head here: edits to the sample ssdt\n\n\n# edits to the sample ssdt\n\nnow that we have our acpi path, lets grab our ssdt and get to work:\n\n * ssdt-plug.dsl\n\nfrom the above ssdt, it's very likely your processor is already there. if so, you can delete all the other entries other than yours and the method pmpm as this is what injects the plugin-type=1 property into our system.\n\n * reminder: we only need to apply plugin-type=1 to the first thread\n\nfor the below example, we'll be using the x299 example(sb.sck0.cp00)\n\noriginal   cleaned up\n           \n\n\n# compiling the ssdt\n\nwith the ssdt done, you're now ready to compile the ssdt!\n\n\n# wrapping up\n\nonce you're done making your ssdt, either head to the next page to finish the rest of the ssdts or head here if you're ready to wrap up:\n\n * cleanup",charsets:{}},{title:"Fixing Power Management: Prebuilt",frontmatter:{},regularPath:"/Universal/plug-methods/prebuilt.html",relativePath:"Universal/plug-methods/prebuilt.md",key:"v-75d09ea9",path:"/Universal/plug-methods/prebuilt.html",headers:[{level:2,title:"Wrapping up",slug:"wrapping-up",normalizedTitle:"wrapping up",charIndex:592}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"Wrapping up",content:"# Fixing Power Management: Prebuilt\n\nBy far the easiest way to get SSDT-PLUG is just downloading the below file:\n\n * SSDT-PLUG-DRTNIA.aml\n\nThis prebuilt file is just a precompiled version of SSDT-PLUG provided by Acidanthera.\n\nThe main things to note with this method:\n\n * Quite Bloated\n   * There's ACPI naming for every type, this means there's added delays in boot times(though unnoticeable to most as it's generally 0.5 seconds longer)\n * Doesn't really teach you anything\n   * For most, this doesn't matter. But to some knowing what makes your hackintosh tick is part of the journey\n\n\n# Wrapping up\n\nOnce you're done making your SSDT, either head to the next page to finish the rest of the SSDTs or head here if you're ready to wrap up:\n\n * Cleanup",normalizedContent:"# fixing power management: prebuilt\n\nby far the easiest way to get ssdt-plug is just downloading the below file:\n\n * ssdt-plug-drtnia.aml\n\nthis prebuilt file is just a precompiled version of ssdt-plug provided by acidanthera.\n\nthe main things to note with this method:\n\n * quite bloated\n   * there's acpi naming for every type, this means there's added delays in boot times(though unnoticeable to most as it's generally 0.5 seconds longer)\n * doesn't really teach you anything\n   * for most, this doesn't matter. but to some knowing what makes your hackintosh tick is part of the journey\n\n\n# wrapping up\n\nonce you're done making your ssdt, either head to the next page to finish the rest of the ssdts or head here if you're ready to wrap up:\n\n * cleanup",charsets:{}},{title:"Fixing Power Management: SSDTTime",frontmatter:{},regularPath:"/Universal/plug-methods/ssdttime.html",relativePath:"Universal/plug-methods/ssdttime.md",key:"v-8fbfb42e",path:"/Universal/plug-methods/ssdttime.html",headers:[{level:2,title:"Wrapping up",slug:"wrapping-up",normalizedTitle:"wrapping up",charIndex:581}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"Wrapping up",content:"# Fixing Power Management: SSDTTime\n\nThe second involves using SSDTTime which automates most of the process. See here on how to use it: SSDTs: Easy Way\n\nTo get the SSDT-PLUG, run the following:\n\n * 7. Dump DSDT then run 3. PluginType\n\nThis will provide you with some files, the main one you care about is SSDT-PLUG.aml. The DSDT and .dsl are only left for referencing or verification.\n\nThe main things to note with this method:\n\n * Doesn't really teach you anything\n   * For most, this doesn't matter. But to some knowing what makes your hackintosh tick is part of the journey\n\n\n# Wrapping up\n\nOnce you're done making your SSDT, either head to the next page to finish the rest of the SSDTs or head here if you're ready to wrap up:\n\n * Cleanup",normalizedContent:"# fixing power management: ssdttime\n\nthe second involves using ssdttime which automates most of the process. see here on how to use it: ssdts: easy way\n\nto get the ssdt-plug, run the following:\n\n * 7. dump dsdt then run 3. plugintype\n\nthis will provide you with some files, the main one you care about is ssdt-plug.aml. the dsdt and .dsl are only left for referencing or verification.\n\nthe main things to note with this method:\n\n * doesn't really teach you anything\n   * for most, this doesn't matter. but to some knowing what makes your hackintosh tick is part of the journey\n\n\n# wrapping up\n\nonce you're done making your ssdt, either head to the next page to finish the rest of the ssdts or head here if you're ready to wrap up:\n\n * cleanup",charsets:{}},{title:"Fixing Power Management (SSDT-PLUG)",frontmatter:{},regularPath:"/Universal/plug.html",relativePath:"Universal/plug.md",key:"v-59fc2811",path:"/Universal/plug.html",headers:[{level:2,title:"What this SSDT does",slug:"what-this-ssdt-does",normalizedTitle:"what this ssdt does",charIndex:83},{level:2,title:"Methods to make this SSDT",slug:"methods-to-make-this-ssdt",normalizedTitle:"methods to make this ssdt",charIndex:108}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"What this SSDT does Methods to make this SSDT",content:"# Fixing Power Management (SSDT-PLUG)\n\n * Fixing Power Management (SSDT-PLUG)\n   * What this SSDT does\n   * Methods to make this SSDT\n\n\n# What this SSDT does\n\nThe purpose of SSDT-PLUG is to allow the kernel's XCPM(XNU's CPU Power Management) to manage our CPU's power management. It's pretty self explanatory why you'd want this.\n\nNote: SSDT-PLUG is only compatible with Intel's Haswell and newer CPUs, Sandy Bridge and Ivy Bridge will need to follow the ssdtPRgen method(in post-install) while AMD users should not use this(unless attempting to attach AGPM which is outside the scope of Dortania's guides)\n\n\n# Methods to make this SSDT\n\nFor SSDT-PLUG, there are 3 methods you can choose from:\n\n * Prebuilt\n * SSDTTime\n * Manual",normalizedContent:"# fixing power management (ssdt-plug)\n\n * fixing power management (ssdt-plug)\n   * what this ssdt does\n   * methods to make this ssdt\n\n\n# what this ssdt does\n\nthe purpose of ssdt-plug is to allow the kernel's xcpm(xnu's cpu power management) to manage our cpu's power management. it's pretty self explanatory why you'd want this.\n\nnote: ssdt-plug is only compatible with intel's haswell and newer cpus, sandy bridge and ivy bridge will need to follow the ssdtprgen method(in post-install) while amd users should not use this(unless attempting to attach agpm which is outside the scope of dortania's guides)\n\n\n# methods to make this ssdt\n\nfor ssdt-plug, there are 3 methods you can choose from:\n\n * prebuilt\n * ssdttime\n * manual",charsets:{}},{title:"Fixing USB: Manual",frontmatter:{},regularPath:"/Universal/rhub-methods/manual.html",relativePath:"Universal/rhub-methods/manual.md",key:"v-7e32a629",path:"/Universal/rhub-methods/manual.html",headers:[{level:2,title:"Finding the ACPI path",slug:"finding-the-acpi-path",normalizedTitle:"finding the acpi path",charIndex:25},{level:2,title:"Edits to the sample SSDT",slug:"edits-to-the-sample-ssdt",normalizedTitle:"edits to the sample ssdt",charIndex:50},{level:2,title:"Compiling the SSDT",slug:"compiling-the-ssdt",normalizedTitle:"compiling the ssdt",charIndex:78},{level:2,title:"Wrapping up",slug:"wrapping-up",normalizedTitle:"wrapping up",charIndex:100}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"Finding the ACPI path Edits to the sample SSDT Compiling the SSDT Wrapping up",content:"# Fixing USB: Manual\n\n * Finding the ACPI path\n * Edits to the sample SSDT\n * Compiling the SSDT\n * Wrapping up\n\n\n# Finding the ACPI path\n\nFinding the ACPI pathing is quite easy actually, first open your decompiled DSDT you got from Dumping the DSDT and Decompiling and Compiling with either MaciASL(if in macOS) or any other text editor if in Windows or Linux(VSCode has an ACPI extension that can also help).\n\nNext, search for the Device (RHUB)\n\nYou should get something like the following show up:\n\n\n\nFrom the above, we can see that the full ACPI pathing for RHUB is PCI0.XHC.RHUB. If it's not as clear you can search for what those device paths are for your system:\n\n * Finding the PCI path:\n   * Search PNP0A08 (If multiple show up, use the first one)\n * Finding XHCI path\n   * Search for XHC, XHCI and XHC1, and yours is whichever shows up.\n\nNow with the pathing, you can head here: Edits to the sample SSDT\n\n\n# Edits to the sample SSDT\n\nNow that we have our ACPI path, lets grab our SSDT and get to work:\n\n * SSDT-RHUB.dsl\n\nBy default, this uses PCI0.XHC1.RHUB for the pathing. you'll want to rename accordingly.\n\nFollowing the example from above, we'll be renaming it to PCI0.XHC.RHUB:\n\nBefore:\n\nExternal (_SB_.PCI0.XHC1.RHUB, DeviceObj) <- Rename this\n\nScope (_SB.PCI0.XHC1.RHUB) <- Rename this\n\n\n\n\nFollowing the example pathing we found, the SSDT should look something like this:\n\nAfter:\n\nExternal (_SB.PCI0.XHC.RHUB, DeviceObj) <- Renamed\n\nScope (_SB.PCI0.XHC.RHUB) <- Renamed\n\n\n\n\n\n# Compiling the SSDT\n\nWith the SSDT done, you're now ready to compile the SSDT!\n\n\n# Wrapping up\n\nOnce you're done making your SSDT, either head to the next page to finish the rest of the SSDTs or head here if you're ready to wrap up:\n\n * Cleanup",normalizedContent:"# fixing usb: manual\n\n * finding the acpi path\n * edits to the sample ssdt\n * compiling the ssdt\n * wrapping up\n\n\n# finding the acpi path\n\nfinding the acpi pathing is quite easy actually, first open your decompiled dsdt you got from dumping the dsdt and decompiling and compiling with either maciasl(if in macos) or any other text editor if in windows or linux(vscode has an acpi extension that can also help).\n\nnext, search for the device (rhub)\n\nyou should get something like the following show up:\n\n\n\nfrom the above, we can see that the full acpi pathing for rhub is pci0.xhc.rhub. if it's not as clear you can search for what those device paths are for your system:\n\n * finding the pci path:\n   * search pnp0a08 (if multiple show up, use the first one)\n * finding xhci path\n   * search for xhc, xhci and xhc1, and yours is whichever shows up.\n\nnow with the pathing, you can head here: edits to the sample ssdt\n\n\n# edits to the sample ssdt\n\nnow that we have our acpi path, lets grab our ssdt and get to work:\n\n * ssdt-rhub.dsl\n\nby default, this uses pci0.xhc1.rhub for the pathing. you'll want to rename accordingly.\n\nfollowing the example from above, we'll be renaming it to pci0.xhc.rhub:\n\nbefore:\n\nexternal (_sb_.pci0.xhc1.rhub, deviceobj) <- rename this\n\nscope (_sb.pci0.xhc1.rhub) <- rename this\n\n\n\n\nfollowing the example pathing we found, the ssdt should look something like this:\n\nafter:\n\nexternal (_sb.pci0.xhc.rhub, deviceobj) <- renamed\n\nscope (_sb.pci0.xhc.rhub) <- renamed\n\n\n\n\n\n# compiling the ssdt\n\nwith the ssdt done, you're now ready to compile the ssdt!\n\n\n# wrapping up\n\nonce you're done making your ssdt, either head to the next page to finish the rest of the ssdts or head here if you're ready to wrap up:\n\n * cleanup",charsets:{}},{title:"Fixing USB: Prebuilt",frontmatter:{},regularPath:"/Universal/rhub-methods/prebuilt.html",relativePath:"Universal/rhub-methods/prebuilt.md",key:"v-dbf69aee",path:"/Universal/rhub-methods/prebuilt.html",headers:[{level:2,title:"Wrapping up",slug:"wrapping-up",normalizedTitle:"wrapping up",charIndex:124}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"Wrapping up",content:"# Fixing USB: Prebuilt\n\nBy far the easiest method, all you need to do is download the following file:\n\n * SSDT-RHUB.aml\n\n\n# Wrapping up\n\nOnce you're done making your SSDT, either head to the next page to finish the rest of the SSDTs or head here if you're ready to wrap up:\n\n * Cleanup",normalizedContent:"# fixing usb: prebuilt\n\nby far the easiest method, all you need to do is download the following file:\n\n * ssdt-rhub.aml\n\n\n# wrapping up\n\nonce you're done making your ssdt, either head to the next page to finish the rest of the ssdts or head here if you're ready to wrap up:\n\n * cleanup",charsets:{}},{title:"Fixing RHUB: SSDTTime",frontmatter:{},regularPath:"/Universal/rhub-methods/ssdttime.html",relativePath:"Universal/rhub-methods/ssdttime.md",key:"v-57578c6e",path:"/Universal/rhub-methods/ssdttime.html",headers:[{level:2,title:"Wrapping up",slug:"wrapping-up",normalizedTitle:"wrapping up",charIndex:597}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"Wrapping up",content:"# Fixing RHUB: SSDTTime\n\nThe second involves using SSDTTime which automates most of the process. See here on how to use it: SSDTs: Easy Way\n\nTo get the SSDT-RHUB, run the following:\n\n * 8. Dump DSDT then run 7. USB Reset\n\nThis will provide you with some files, the main one you care about is SSDT-USB-Reset.aml(Same file as SSDT-RHUB). The DSDT and .dsl are only left for referencing or verification.\n\nThe main things to note with this method:\n\n * Doesn't really teach you anything\n   * For most, this doesn't matter. But to some knowing what makes your hackintosh tick is part of the journey\n\n\n# Wrapping up\n\nOnce you're done making your SSDT, either head to the next page to finish the rest of the SSDTs or head here if you're ready to wrap up:\n\n * Cleanup",normalizedContent:"# fixing rhub: ssdttime\n\nthe second involves using ssdttime which automates most of the process. see here on how to use it: ssdts: easy way\n\nto get the ssdt-rhub, run the following:\n\n * 8. dump dsdt then run 7. usb reset\n\nthis will provide you with some files, the main one you care about is ssdt-usb-reset.aml(same file as ssdt-rhub). the dsdt and .dsl are only left for referencing or verification.\n\nthe main things to note with this method:\n\n * doesn't really teach you anything\n   * for most, this doesn't matter. but to some knowing what makes your hackintosh tick is part of the journey\n\n\n# wrapping up\n\nonce you're done making your ssdt, either head to the next page to finish the rest of the ssdts or head here if you're ready to wrap up:\n\n * cleanup",charsets:{}},{title:"Fixing USB",frontmatter:{},regularPath:"/Universal/rhub.html",relativePath:"Universal/rhub.md",key:"v-59ad2227",path:"/Universal/rhub.html",headers:[{level:2,title:"What this SSDT does",slug:"what-this-ssdt-does",normalizedTitle:"what this ssdt does",charIndex:17},{level:2,title:"Methods to make this SSDT",slug:"methods-to-make-this-ssdt",normalizedTitle:"methods to make this ssdt",charIndex:40}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"What this SSDT does Methods to make this SSDT",content:"# Fixing USB\n\n * What this SSDT does\n * Methods to make this SSDT\n\n\n# What this SSDT does\n\nSo on 400 series motherboards, certain OEMs have broken the ACPI spec and this results in issues when booting into macOS. To fix this, we'll want to turn off the RHUB device and force macOS to manually rebuild the ports.\n\nThe following platforms will require fixing:\n\n * Mobile Icelake(currently Dell and Lenovo are the 2 known with this issue)\n * Asus Z490 (Gigabyte and AsRock users are fine, whether MSI currently this is unknown)\n\n\n# Methods to make this SSDT\n\nFor the RHUB fix, there are 3 methods you can choose from:\n\n * Prebuilt\n * SSDTTime\n * Manual",normalizedContent:"# fixing usb\n\n * what this ssdt does\n * methods to make this ssdt\n\n\n# what this ssdt does\n\nso on 400 series motherboards, certain oems have broken the acpi spec and this results in issues when booting into macos. to fix this, we'll want to turn off the rhub device and force macos to manually rebuild the ports.\n\nthe following platforms will require fixing:\n\n * mobile icelake(currently dell and lenovo are the 2 known with this issue)\n * asus z490 (gigabyte and asrock users are fine, whether msi currently this is unknown)\n\n\n# methods to make this ssdt\n\nfor the rhub fix, there are 3 methods you can choose from:\n\n * prebuilt\n * ssdttime\n * manual",charsets:{}},{title:"Fixing SMBus support: Manual",frontmatter:{},regularPath:"/Universal/smbus-methods/manual.html",relativePath:"Universal/smbus-methods/manual.md",key:"v-9bd253ce",path:"/Universal/smbus-methods/manual.html",headers:[{level:2,title:"Finding the ACPI path",slug:"finding-the-acpi-path",normalizedTitle:"finding the acpi path",charIndex:35},{level:3,title:"Hackintool",slug:"hackintool",normalizedTitle:"hackintool",charIndex:62},{level:3,title:"DeviceManager",slug:"devicemanager",normalizedTitle:"devicemanager",charIndex:78},{level:2,title:"Edits to the sample SSDT",slug:"edits-to-the-sample-ssdt",normalizedTitle:"edits to the sample ssdt",charIndex:95}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"Finding the ACPI path Hackintool DeviceManager Edits to the sample SSDT",content:"# Fixing SMBus support: Manual\n\n * Finding the ACPI path\n   * Hackintool\n   * DeviceManager\n * Edits to the sample SSDT\n * Compiling the SSDT\n * Wrapping up\n\n\n# Finding the ACPI path\n\nSo to find the ACPI pathing of our SMBus, we've got 2 methods:\n\n * Hackintool\n * DeviceManager\n\n\n# Hackintool\n\nTo find the correct pathing for your devices, grab Hackintool (Github link) and head to the PCI tab:\n\n\n\nLook for the SMBus device under Subclass, then look beside and you'll see the ACPI path(under IOReg Name). To convert , omit @...\n\n * /PC00@0/SMBS@1F,4 -> PC00.SMBS\n\nWith the ACPI pathing, you can now head here: Edits to the sample SSDT\n\n\n# DeviceManager\n\nIf you already have Windows installed on this machine, finding the SMBus pathing is fairly easy.\n\nStart by opening up Device Manager in Windows and looking for a device named SMBUS. Once found, click on it and select the BIOS device Name entry. You should get something like this:\n\n\n\nFrom the above example, we can see the SMBus is located at:\n\nPC00.SMBS\n\n\nWith the ACPI pathing, you can now head here: Edits to the sample SSDT\n\n\n# Edits to the sample SSDT\n\nNow that we know the ACPI pathing of the SMBus, we can finally start editing the our SSDT.\n\n * SSDT-SBUS-MCHC.dsl\n\nSo the important parts we care about are:\n\nBefore:\n\nExternal (_SB_.PCI0, DeviceObj) <- Rename this\nExternal (_SB_.PCI0.SBUS.BUS0, DeviceObj) <- Rename this\n\nScope (_SB.PCI0) <- Rename this\n{\n    Device (MCHC)\n    {\n        Name (_ADR, Zero)  // _ADR: Address\n    }\n}\n\nDevice (_SB.PCI0.SBUS.BUS0) <- Rename this\n\n\n\n\nFollowing the example SMBus pathing we found, the SSDT should look something like this:\n\nAfter:\n\nExternal (_SB_.PC00, DeviceObj) <- Renamed\nExternal (_SB_.PC00.SMBS.BUS0, DeviceObj) <- Renamed\n\nScope (_SB.PC00) <- Renamed\n{\n    Device (MCHC)\n    {\n        Name (_ADR, Zero)  // _ADR: Address\n    }\n}\n\nDevice (_SB.PC00.SMBS.BUS0) <- Renamed\n\n\n\n\n\n# Compiling the SSDT\n\nWith the SSDT done, you're now ready to compile the SSDT!\n\n\n# Wrapping up\n\nOnce you're done making your SSDT, either head to the next page to finish the rest of the SSDTs or head here if you're ready to wrap up:\n\n * Cleanup\n\n\n# Verify it's working\n\nOnce you've installed macOS, you can actually check whether your SSDT-SBUS-MCHC is working or not in terminal:\n\nkextstat | grep -E \"AppleSMBusController|AppleSMBusPCI\"\n\n\n",normalizedContent:"# fixing smbus support: manual\n\n * finding the acpi path\n   * hackintool\n   * devicemanager\n * edits to the sample ssdt\n * compiling the ssdt\n * wrapping up\n\n\n# finding the acpi path\n\nso to find the acpi pathing of our smbus, we've got 2 methods:\n\n * hackintool\n * devicemanager\n\n\n# hackintool\n\nto find the correct pathing for your devices, grab hackintool (github link) and head to the pci tab:\n\n\n\nlook for the smbus device under subclass, then look beside and you'll see the acpi path(under ioreg name). to convert , omit @...\n\n * /pc00@0/smbs@1f,4 -> pc00.smbs\n\nwith the acpi pathing, you can now head here: edits to the sample ssdt\n\n\n# devicemanager\n\nif you already have windows installed on this machine, finding the smbus pathing is fairly easy.\n\nstart by opening up device manager in windows and looking for a device named smbus. once found, click on it and select the bios device name entry. you should get something like this:\n\n\n\nfrom the above example, we can see the smbus is located at:\n\npc00.smbs\n\n\nwith the acpi pathing, you can now head here: edits to the sample ssdt\n\n\n# edits to the sample ssdt\n\nnow that we know the acpi pathing of the smbus, we can finally start editing the our ssdt.\n\n * ssdt-sbus-mchc.dsl\n\nso the important parts we care about are:\n\nbefore:\n\nexternal (_sb_.pci0, deviceobj) <- rename this\nexternal (_sb_.pci0.sbus.bus0, deviceobj) <- rename this\n\nscope (_sb.pci0) <- rename this\n{\n    device (mchc)\n    {\n        name (_adr, zero)  // _adr: address\n    }\n}\n\ndevice (_sb.pci0.sbus.bus0) <- rename this\n\n\n\n\nfollowing the example smbus pathing we found, the ssdt should look something like this:\n\nafter:\n\nexternal (_sb_.pc00, deviceobj) <- renamed\nexternal (_sb_.pc00.smbs.bus0, deviceobj) <- renamed\n\nscope (_sb.pc00) <- renamed\n{\n    device (mchc)\n    {\n        name (_adr, zero)  // _adr: address\n    }\n}\n\ndevice (_sb.pc00.smbs.bus0) <- renamed\n\n\n\n\n\n# compiling the ssdt\n\nwith the ssdt done, you're now ready to compile the ssdt!\n\n\n# wrapping up\n\nonce you're done making your ssdt, either head to the next page to finish the rest of the ssdts or head here if you're ready to wrap up:\n\n * cleanup\n\n\n# verify it's working\n\nonce you've installed macos, you can actually check whether your ssdt-sbus-mchc is working or not in terminal:\n\nkextstat | grep -e \"applesmbuscontroller|applesmbuspci\"\n\n\n",charsets:{cjk:!0}},{title:"Fixing SMBus support (SSDT-SBUS-MCHC)",frontmatter:{},regularPath:"/Universal/smbus.html",relativePath:"Universal/smbus.md",key:"v-b7b5f5ee",path:"/Universal/smbus.html",headers:[{level:2,title:"What this SSDT does",slug:"what-this-ssdt-does",normalizedTitle:"what this ssdt does",charIndex:44},{level:2,title:"Methods to make this SSDT",slug:"methods-to-make-this-ssdt",normalizedTitle:"methods to make this ssdt",charIndex:67}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"What this SSDT does Methods to make this SSDT",content:"# Fixing SMBus support (SSDT-SBUS-MCHC)\n\n * What this SSDT does\n * Methods to make this SSDT\n\n\n# What this SSDT does\n\nThis section of the guide refers to fixing AppleSMBus support in macOS, what is AppleSMBus? Well this mainly handles the System Management Bus, which has many functions like:\n\n * AppleSMBusController\n   * Aids with correct temperature, fan, voltage, ICH, etc readings\n * AppleSMBusPCI\n   * Same idea as AppleSMBusController except for low bandwidth PCI devices\n * Memory Reporting\n   * Aids in proper memory reporting and can aid in getting better kernel panic details if memory related\n * Other things SMBus does: SMBus wiki\n\nFor install purposes, this SSDT isn't needed but for post-install it's recommended to put the final touches on your hack.\n\n\n# Methods to make this SSDT\n\nTo make this SSDT, you only got 1 method: Doing it manually\n\n * Manual",normalizedContent:"# fixing smbus support (ssdt-sbus-mchc)\n\n * what this ssdt does\n * methods to make this ssdt\n\n\n# what this ssdt does\n\nthis section of the guide refers to fixing applesmbus support in macos, what is applesmbus? well this mainly handles the system management bus, which has many functions like:\n\n * applesmbuscontroller\n   * aids with correct temperature, fan, voltage, ich, etc readings\n * applesmbuspci\n   * same idea as applesmbuscontroller except for low bandwidth pci devices\n * memory reporting\n   * aids in proper memory reporting and can aid in getting better kernel panic details if memory related\n * other things smbus does: smbus wiki\n\nfor install purposes, this ssdt isn't needed but for post-install it's recommended to put the final touches on your hack.\n\n\n# methods to make this ssdt\n\nto make this ssdt, you only got 1 method: doing it manually\n\n * manual",charsets:{}},{title:"Renaming GPUs (SSDT-GPU-SPOOF)",frontmatter:{},regularPath:"/Universal/spoof.html",relativePath:"Universal/spoof.md",key:"v-4dd249e9",path:"/Universal/spoof.html",headers:[{level:2,title:"Finding a suitable PCI ID",slug:"finding-a-suitable-pci-id",normalizedTitle:"finding a suitable pci id",charIndex:640},{level:3,title:"Web",slug:"web",normalizedTitle:"web",charIndex:670},{level:3,title:"Linux",slug:"linux",normalizedTitle:"linux",charIndex:1496},{level:2,title:"Finding the ACPI Path of the GPU",slug:"finding-the-acpi-path-of-the-gpu",normalizedTitle:"finding the acpi path of the gpu",charIndex:2104},{level:3,title:"Windows",slug:"windows",normalizedTitle:"windows",charIndex:2141},{level:3,title:"Linux",slug:"linux-2",normalizedTitle:"linux",charIndex:1496},{level:2,title:"Making the SSDT",slug:"making-the-ssdt",normalizedTitle:"making the ssdt",charIndex:2976},{level:2,title:"Now you're ready to compile the SSDT!",slug:"now-you-re-ready-to-compile-the-ssdt",normalizedTitle:"now you're ready to compile the ssdt!",charIndex:3735}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"Finding a suitable PCI ID Web Linux Finding the ACPI Path of the GPU Windows Linux Making the SSDT Now you're ready to compile the SSDT!",content:'# Renaming GPUs (SSDT-GPU-SPOOF)\n\nSo this is mainly needed for GPUs that are not natively supported out of the box due to their names, most commonly:\n\n * R9 290/390\n * R9 280/380\n * R7 270/370\n * R9 260/360\n * R7 250\n * R7 240\n\nInstead, these GPUs need to be "spoofed" or faked into a model that closely matches theirs, generally this will be the "X" variant of the card. For some reason Apple never bothered adding the PCI IDs for these other cards even though their GPU cores are supported by the driver.\n\nSo to spoof the GPU, we need to find a couple things:\n\n * Suitable PCI ID for the GPU\n * ACPI Path of the GPU\n * SSDT-GPU-SPOOF\n\n\n# Finding a suitable PCI ID\n\n\n# Web\n\nTo find a suitable PCI ID, we\'ll be using PCI ID Repository which has a full database of all AMD GPUs. For this example, we\'ll be creating a Spoof SSDT for the R9 390. For a full list of supported GPUs, please see the GPU Buyers Guide. The closest match to this GPU would be the 390X, and looking on that site near the top gives us this:\n\nVendor 1002 -> Device 1002:67b0\n\n\nNow lets break this down into a device ID we can use:\n\n * 1002: The vendor ID, all AMD devices have this ID\n * 67B0: The device ID, this is what we care about\n\nSo how do we convert this to a fake ID? Well the format of a fake ID:\n\n"device-id",\nBuffer (0x04)\n{\n     0xB0, 0x67, 0x00, 0x00\n},\n\n\nAs you can see, the bytes are swapped in pairs. Keep this in mind when we make our SSDT\n\nThe specifics are due to Endianness for those who are curious\n\n\n# Linux\n\nIf you can run Linux, use command lspci -vmmnnD -d 1002::0300\n\n$ lspci -vmmnnD -d 1002::0300\nSlot: 0000:01:00.0\nClass: VGA compatible controller [0300]\nVendor: Advanced Micro Devices, Inc. [AMD/ATI] [1002]\nDevice: Oland [Radeon HD 8570 / R7 240/340 / Radeon 520 OEM] [6611]\nSVendor: Micro-Star International Co., Ltd. [MSI] [1462]\nSDevice: Device [3740]\nRev: 87\n\n\nYou can easily get\n\n * Slot ID 0000:01:00.0, we need it later\n * Vendor ID 1002, all AMD devices have this ID\n * Device ID 6611, this is what we care about\n * Device name Radeon HD 8570 / R7 240/340 / Radeon 520 OEM, mainly cosmetic\n\n\n# Finding the ACPI Path of the GPU\n\n\n# Windows\n\nTo find the PCI path of a GPU is fairly simple, best way to find it is running Windows:\n\n * Open Device Manager\n * Select Display Adapters, then right click your GPU and select Properties\n * Under the Details Tab, search for "Location Paths"\n   * Note some GPUs may be hiding under "BIOS device name"\n\n\n\n\n\nThe second "ACPI" is what we care about:\n\nACPI(_SB_)#ACPI(PC02)#ACPI(BR2A)#ACPI(PEGP)#PCI(0000)#PCI(0000)\n\n\nNow converting this to an ACPI path is quite simple, remove the #ACPI and #PCI(0000):\n\n\\_SB_.PC02.BR2A.PEGP\n\n\n\n# Linux\n\nSubstitute your SLOTID found above into command cat /sys/bus/pci/devices/SLOTID/firmware_node/path, you cat get\n\n$ cat /sys/bus/pci/devices/0000:01:00.0/firmware_node/path\n\\_SB_.PC02.BR2A.PEGP\n\n\nAnd voila! We\'ve found our ACPI path, now that we have everything we\'re ready to get cooking\n\n\n# Making the SSDT\n\nTo start grab our SSDT-GPU-SPOOF and open it up. Here there\'s a couple things to change:\n\nExternal (_SB_.PCI0, DeviceObj)\nExternal (_SB_.PCI0.PEG0.PEGP, DeviceObj)\n\n\nFor our example, we\'ll change all mentions of :\n\n * PCI0 with PC02\n * PEG0 with BR2A\n\nHint: If your ACPI path is a bit shorter than the example, this is fine. Just make sure the ACPI paths are correct to your device.\n\nNow that the ACPI pathing is correct, we can finally apply our fake ID!!!\n\nSo the 2 parts we want to change:\n\ndevice ID:\n\n"device-id",\nBuffer (0x04)\n{\n    0xB0, 0x67, 0x00, 0x00\n},\n\n\nModel:\n\n"model",\nBuffer ()\n{\n    "AMD Radeon R9 390"\n}\n\n\n"device-id" will be set to our PCI ID that we found in "Finding a suitable PCI ID" and "model" is mainly cosmetic\n\n\n# Now you\'re ready to compile the SSDT!',normalizedContent:'# renaming gpus (ssdt-gpu-spoof)\n\nso this is mainly needed for gpus that are not natively supported out of the box due to their names, most commonly:\n\n * r9 290/390\n * r9 280/380\n * r7 270/370\n * r9 260/360\n * r7 250\n * r7 240\n\ninstead, these gpus need to be "spoofed" or faked into a model that closely matches theirs, generally this will be the "x" variant of the card. for some reason apple never bothered adding the pci ids for these other cards even though their gpu cores are supported by the driver.\n\nso to spoof the gpu, we need to find a couple things:\n\n * suitable pci id for the gpu\n * acpi path of the gpu\n * ssdt-gpu-spoof\n\n\n# finding a suitable pci id\n\n\n# web\n\nto find a suitable pci id, we\'ll be using pci id repository which has a full database of all amd gpus. for this example, we\'ll be creating a spoof ssdt for the r9 390. for a full list of supported gpus, please see the gpu buyers guide. the closest match to this gpu would be the 390x, and looking on that site near the top gives us this:\n\nvendor 1002 -> device 1002:67b0\n\n\nnow lets break this down into a device id we can use:\n\n * 1002: the vendor id, all amd devices have this id\n * 67b0: the device id, this is what we care about\n\nso how do we convert this to a fake id? well the format of a fake id:\n\n"device-id",\nbuffer (0x04)\n{\n     0xb0, 0x67, 0x00, 0x00\n},\n\n\nas you can see, the bytes are swapped in pairs. keep this in mind when we make our ssdt\n\nthe specifics are due to endianness for those who are curious\n\n\n# linux\n\nif you can run linux, use command lspci -vmmnnd -d 1002::0300\n\n$ lspci -vmmnnd -d 1002::0300\nslot: 0000:01:00.0\nclass: vga compatible controller [0300]\nvendor: advanced micro devices, inc. [amd/ati] [1002]\ndevice: oland [radeon hd 8570 / r7 240/340 / radeon 520 oem] [6611]\nsvendor: micro-star international co., ltd. [msi] [1462]\nsdevice: device [3740]\nrev: 87\n\n\nyou can easily get\n\n * slot id 0000:01:00.0, we need it later\n * vendor id 1002, all amd devices have this id\n * device id 6611, this is what we care about\n * device name radeon hd 8570 / r7 240/340 / radeon 520 oem, mainly cosmetic\n\n\n# finding the acpi path of the gpu\n\n\n# windows\n\nto find the pci path of a gpu is fairly simple, best way to find it is running windows:\n\n * open device manager\n * select display adapters, then right click your gpu and select properties\n * under the details tab, search for "location paths"\n   * note some gpus may be hiding under "bios device name"\n\n\n\n\n\nthe second "acpi" is what we care about:\n\nacpi(_sb_)#acpi(pc02)#acpi(br2a)#acpi(pegp)#pci(0000)#pci(0000)\n\n\nnow converting this to an acpi path is quite simple, remove the #acpi and #pci(0000):\n\n\\_sb_.pc02.br2a.pegp\n\n\n\n# linux\n\nsubstitute your slotid found above into command cat /sys/bus/pci/devices/slotid/firmware_node/path, you cat get\n\n$ cat /sys/bus/pci/devices/0000:01:00.0/firmware_node/path\n\\_sb_.pc02.br2a.pegp\n\n\nand voila! we\'ve found our acpi path, now that we have everything we\'re ready to get cooking\n\n\n# making the ssdt\n\nto start grab our ssdt-gpu-spoof and open it up. here there\'s a couple things to change:\n\nexternal (_sb_.pci0, deviceobj)\nexternal (_sb_.pci0.peg0.pegp, deviceobj)\n\n\nfor our example, we\'ll change all mentions of :\n\n * pci0 with pc02\n * peg0 with br2a\n\nhint: if your acpi path is a bit shorter than the example, this is fine. just make sure the acpi paths are correct to your device.\n\nnow that the acpi pathing is correct, we can finally apply our fake id!!!\n\nso the 2 parts we want to change:\n\ndevice id:\n\n"device-id",\nbuffer (0x04)\n{\n    0xb0, 0x67, 0x00, 0x00\n},\n\n\nmodel:\n\n"model",\nbuffer ()\n{\n    "amd radeon r9 390"\n}\n\n\n"device-id" will be set to our pci id that we found in "finding a suitable pci id" and "model" is mainly cosmetic\n\n\n# now you\'re ready to compile the ssdt!',charsets:{}},{title:"Fixing Uncore Bridges: Manual",frontmatter:{},regularPath:"/Universal/unc0-methods/manual.html",relativePath:"Universal/unc0-methods/manual.md",key:"v-8a61aaee",path:"/Universal/unc0-methods/manual.html",headers:[{level:2,title:"Download the SSDT",slug:"download-the-ssdt",normalizedTitle:"download the ssdt",charIndex:36},{level:2,title:"Wrapping up",slug:"wrapping-up",normalizedTitle:"wrapping up",charIndex:57}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"Download the SSDT Wrapping up",content:"# Fixing Uncore Bridges: Manual\n\n * Download the SSDT\n * Wrapping up\n\n\n# Download the SSDT\n\nSuper simple, just grab the SSDT and compile:\n\n * SSDT-UNC.dsl\n\nSee here how to compile: Compiling ACPI\n\n\n# Wrapping up\n\nOnce you're done making your SSDT, either head to the next page to finish the rest of the SSDTs or head here if you're ready to wrap up:\n\n * Cleanup",normalizedContent:"# fixing uncore bridges: manual\n\n * download the ssdt\n * wrapping up\n\n\n# download the ssdt\n\nsuper simple, just grab the ssdt and compile:\n\n * ssdt-unc.dsl\n\nsee here how to compile: compiling acpi\n\n\n# wrapping up\n\nonce you're done making your ssdt, either head to the next page to finish the rest of the ssdts or head here if you're ready to wrap up:\n\n * cleanup",charsets:{}},{title:"Fixing Uncore Bridges: Prebuilt",frontmatter:{},regularPath:"/Universal/unc0-methods/prebuilt.html",relativePath:"Universal/unc0-methods/prebuilt.md",key:"v-1b473ba9",path:"/Universal/unc0-methods/prebuilt.html",headers:[{level:2,title:"Wrapping up",slug:"wrapping-up",normalizedTitle:"wrapping up",charIndex:134}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"Wrapping up",content:"# Fixing Uncore Bridges: Prebuilt\n\nBy far the easiest method, all you need to do is download the following file:\n\n * SSDT-UNC.aml\n\n\n# Wrapping up\n\nOnce you're done making your SSDT, either head to the next page to finish the rest of the SSDTs or head here if you're ready to wrap up:\n\n * Cleanup",normalizedContent:"# fixing uncore bridges: prebuilt\n\nby far the easiest method, all you need to do is download the following file:\n\n * ssdt-unc.aml\n\n\n# wrapping up\n\nonce you're done making your ssdt, either head to the next page to finish the rest of the ssdts or head here if you're ready to wrap up:\n\n * cleanup",charsets:{}},{title:"Fixing Uncore Bridges (SSDT-UNC)",frontmatter:{},regularPath:"/Universal/unc0.html",relativePath:"Universal/unc0.md",key:"v-a8d253be",path:"/Universal/unc0.html",headers:[{level:2,title:"What this SSDT does",slug:"what-this-ssdt-does",normalizedTitle:"what this ssdt does",charIndex:39},{level:2,title:"Methods to make this SSDT",slug:"methods-to-make-this-ssdt",normalizedTitle:"methods to make this ssdt",charIndex:62}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"What this SSDT does Methods to make this SSDT",content:"# Fixing Uncore Bridges (SSDT-UNC)\n\n * What this SSDT does\n * Methods to make this SSDT\n\n\n# What this SSDT does\n\nThis SSDT is required for all X99 and many X79 boards, it specifically disables unused devices in ACPI ensuing IOPCIFamily doesn't kernel panic. This requires very little configuration for the end user.\n\n * X79\n * C602\n * X99\n * C612\n\n\n# Methods to make this SSDT\n\nThe main ways to make this SSDT:\n\n * Prebuilt\n * Manual",normalizedContent:"# fixing uncore bridges (ssdt-unc)\n\n * what this ssdt does\n * methods to make this ssdt\n\n\n# what this ssdt does\n\nthis ssdt is required for all x99 and many x79 boards, it specifically disables unused devices in acpi ensuing iopcifamily doesn't kernel panic. this requires very little configuration for the end user.\n\n * x79\n * c602\n * x99\n * c612\n\n\n# methods to make this ssdt\n\nthe main ways to make this ssdt:\n\n * prebuilt\n * manual",charsets:{}},{title:"How to create SSDTs",frontmatter:{},regularPath:"/ssdt-methods/ssdt-methods.html",relativePath:"ssdt-methods/ssdt-methods.md",key:"v-4a34dbe9",path:"/ssdt-methods/ssdt-methods.html",lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:null,content:"# How to create SSDTs\n\nCreating SSDTs mainly fall into 3 camps:\n\n * Prebuilt SSDTs\n   * They're universal but don't teach much\n   * For most users, we recommend this as it does not require any compiling\n * Automated tools\n   * Mainly seen with SSDTTime, work much better than prebuilts as there's less bloat however doesn't teach you much\n * Manually creating them\n   * Will always work, be much cleaner and get to learn about the process\n   * However requires you to deal with code\n\nIf you're not comfortable with editing and compiling code, we recommend the prebuilt option",normalizedContent:"# how to create ssdts\n\ncreating ssdts mainly fall into 3 camps:\n\n * prebuilt ssdts\n   * they're universal but don't teach much\n   * for most users, we recommend this as it does not require any compiling\n * automated tools\n   * mainly seen with ssdttime, work much better than prebuilts as there's less bloat however doesn't teach you much\n * manually creating them\n   * will always work, be much cleaner and get to learn about the process\n   * however requires you to deal with code\n\nif you're not comfortable with editing and compiling code, we recommend the prebuilt option",charsets:{}},{title:"Prebuilt SSDTs",frontmatter:{},regularPath:"/ssdt-methods/ssdt-prebuilt.html",relativePath:"ssdt-methods/ssdt-prebuilt.md",key:"v-ad25710e",path:"/ssdt-methods/ssdt-prebuilt.html",headers:[{level:2,title:"Intel Desktop SSDTs",slug:"intel-desktop-ssdts",normalizedTitle:"intel desktop ssdts",charIndex:201},{level:3,title:"Desktop Penryn, Lynnfield and Clarkdale",slug:"desktop-penryn-lynnfield-and-clarkdale",normalizedTitle:"desktop penryn, lynnfield and clarkdale",charIndex:939},{level:3,title:"Desktop Sandy and Ivy Bridge",slug:"desktop-sandy-and-ivy-bridge",normalizedTitle:"desktop sandy and ivy bridge",charIndex:1283},{level:3,title:"Desktop Haswell and Broadwell",slug:"desktop-haswell-and-broadwell",normalizedTitle:"desktop haswell and broadwell",charIndex:2112},{level:3,title:"Desktop Skylake and Kaby Lake",slug:"desktop-skylake-and-kaby-lake",normalizedTitle:"desktop skylake and kaby lake",charIndex:2568},{level:3,title:"Desktop Coffee Lake",slug:"desktop-coffee-lake",normalizedTitle:"desktop coffee lake",charIndex:3122},{level:3,title:"Desktop Comet Lake",slug:"desktop-comet-lake",normalizedTitle:"desktop comet lake",charIndex:3938},{level:2,title:"Intel Laptop SSDTs",slug:"intel-laptop-ssdts",normalizedTitle:"intel laptop ssdts",charIndex:374},{level:3,title:"Laptop Clarksfield and Arrandale",slug:"laptop-clarksfield-and-arrandale",normalizedTitle:"laptop clarksfield and arrandale",charIndex:4922},{level:3,title:"Laptop Sandy and Ivy Bridge",slug:"laptop-sandy-and-ivy-bridge",normalizedTitle:"laptop sandy and ivy bridge",charIndex:5489},{level:3,title:"Laptop Haswell and Broadwell",slug:"laptop-haswell-and-broadwell",normalizedTitle:"laptop haswell and broadwell",charIndex:6546},{level:3,title:"Laptop Skylake and Kaby Lake",slug:"laptop-skylake-and-kaby-lake",normalizedTitle:"laptop skylake and kaby lake",charIndex:7231},{level:3,title:"Laptop Coffee Lake (8th gen)",slug:"laptop-coffee-lake-8th-gen",normalizedTitle:"laptop coffee lake (8th gen)",charIndex:8014},{level:3,title:"Laptop Coffee and Comet Lake (9th and 10th gen)",slug:"laptop-coffee-and-comet-lake-9th-and-10th-gen",normalizedTitle:"laptop coffee and comet lake (9th and 10th gen)",charIndex:8911},{level:3,title:"Laptop Ice Lake",slug:"laptop-ice-lake",normalizedTitle:"laptop ice lake",charIndex:9997},{level:2,title:"Intel HEDT SSDTs",slug:"intel-hedt-ssdts",normalizedTitle:"intel hedt ssdts",charIndex:594},{level:3,title:"Nehalem and Westmere",slug:"nehalem-and-westmere",normalizedTitle:"nehalem and westmere",charIndex:616},{level:3,title:"Sandy and Ivy Bridge-E",slug:"sandy-and-ivy-bridge-e",normalizedTitle:"sandy and ivy bridge-e",charIndex:642},{level:3,title:"Haswell and Broadwell-E",slug:"haswell-and-broadwell-e",normalizedTitle:"haswell and broadwell-e",charIndex:670},{level:3,title:"Skylake and Cascade Lake-X/W",slug:"skylake-and-cascade-lake-x-w",normalizedTitle:"skylake and cascade lake-x/w",charIndex:699},{level:2,title:"AMD SSDTs",slug:"amd-ssdts",normalizedTitle:"amd ssdts",charIndex:731},{level:3,title:"AMD Bulldozer/Jaguar",slug:"amd-bulldozer-jaguar",normalizedTitle:"amd bulldozer/jaguar",charIndex:13605},{level:3,title:"AMD Zen",slug:"amd-zen",normalizedTitle:"amd zen",charIndex:14028}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"Intel Desktop SSDTs Desktop Penryn, Lynnfield and Clarkdale Desktop Sandy and Ivy Bridge Desktop Haswell and Broadwell Desktop Skylake and Kaby Lake Desktop Coffee Lake Desktop Comet Lake Intel Laptop SSDTs Laptop Clarksfield and Arrandale Laptop Sandy and Ivy Bridge Laptop Haswell and Broadwell Laptop Skylake and Kaby Lake Laptop Coffee Lake (8th gen) Laptop Coffee and Comet Lake (9th and 10th gen) Laptop Ice Lake Intel HEDT SSDTs Nehalem and Westmere Sandy and Ivy Bridge-E Haswell and Broadwell-E Skylake and Cascade Lake-X/W AMD SSDTs AMD Bulldozer/Jaguar AMD Zen",content:"# Prebuilt SSDTs\n\nSimply select your hardware type and generation, then download the associated files. Once downloaded, place them in your EFI under EFI/OC/ACPI and head back to config.plist Setup\n\n * Intel Desktop SSDTs\n   * Penryn, Lynnfield and Clarkdale\n   * Sandy and Ivy Bridge\n   * Haswell and Broadwell\n   * Skylake and Kaby Lake\n   * Coffee Lake\n   * Comet Lake\n * Intel Laptop SSDTs\n   * Clarksfield and Arrandale\n   * Sandy and Ivy Bridge\n   * Haswell and Broadwell\n   * Skylake and Kaby Lake\n   * Coffee Lake (8th gen)\n   * Coffee and Comet Lake (9th and 10th gen)\n   * Ice Lake\n * Intel HEDT SSDTs\n   * Nehalem and Westmere\n   * Sandy and Ivy Bridge-E\n   * Haswell and Broadwell-E\n   * Skylake and Cascade Lake-X/W\n * AMD SSDTs\n   * Bulldozer/Jaguar\n   * Zen\n\n\n# Intel Desktop SSDTs\n\n * Penryn, Lynnfield and Clarkdale\n * Sandy and Ivy Bridge\n * Haswell and Broadwell\n * Skylake and Kaby Lake\n * Coffee Lake\n * Comet Lake\n\n\n# Desktop Penryn, Lynnfield and Clarkdale\n\nSSDTs required\n\n * SSDT-EC-DESKTOP\n\nOnce downloaded, place them into your EFI folder under EFI/OC/ACPI and head back to the install guide\n\n * config.plist Setup\n\nIn-depth info on the SSDTs\n\nSSDT-EC:\n\n * Used for disabling your real Embedded controller and creating a fake one for macOS to play with\n\n\n# Desktop Sandy and Ivy Bridge\n\nSSDTs required\n\n * SSDT-EC-DESKTOP\n * SSDT-IMEI\n   * Required for Sandy Bridge CPU with 7 series motherboard\n     * ie. B75, Q75, Z75, H77, Q77, Z77\n   * Required Ivy Bridge CPU with 6 series motherboard\n     * ie. H61, B65, Q65, P67, H67, Q67, Z68\n\nOnce downloaded, place them into your EFI folder under EFI/OC/ACPI and head back to the install guide\n\n * config.plist Setup\n\nIn-depth info on the SSDTs\n\nSSDT-EC:\n\n * Used for disabling your real Embedded controller and creating a fake one for macOS to play with\n\nSSDT-IMEI\n\n * Used for creating an IMEI device when one is not present in ACPI\\\n   * Required for Sandy Bridge CPU with 7 series motherboard\n     * ie. B75, Q75, Z75, H77, Q77, Z77\n   * Required Ivy Bridge CPU with 6 series motherboard\n     * ie. H61, B65, Q65, P67, H67, Q67, Z68\n\n\n# Desktop Haswell and Broadwell\n\nSSDTs required\n\n * SSDT-PLUG-DRTNIA\n * SSDT-EC-DESKTOP\n\nOnce downloaded, place them into your EFI folder under EFI/OC/ACPI and head back to the install guide\n\n * config.plist Setup\n\nIn-depth info on the SSDTs\n\nSSDT-PLUG:\n\n * Used for enabling Apple's XCPM in macOS, allowing for far better CPU power management\n\nSSDT-EC:\n\n * Used for disabling your real Embedded controller and creating a fake one for macOS to play with\n\n\n# Desktop Skylake and Kaby Lake\n\nSSDTs required\n\n * SSDT-PLUG-DRTNIA\n * SSDT-EC-USBX-DESKTOP\n\nOnce downloaded, place them into your EFI folder under EFI/OC/ACPI and head back to the install guide\n\n * config.plist Setup\n\nIn-depth info on the SSDTs\n\nSSDT-PLUG:\n\n * Used for enabling Apple's XCPM in macOS, allowing for far better CPU power management\n\nSSDT-EC-USBX:\n\n * Used for disabling your real Embedded controller and creating a fake one for macOS to play with\n * USBX portion is used for injection USB power properties missing on Skylake and newer\n\n\n# Desktop Coffee Lake\n\nSSDTs required\n\n * SSDT-PLUG-DRTNIA\n * SSDT-EC-USBX-DESKTOP\n * SSDT-AWAC\n * SSDT-PMC\n\nOnce downloaded, place them into your EFI folder under EFI/OC/ACPI and head back to the install guide\n\n * config.plist Setup\n\nIn-depth info on the SSDTs\n\nSSDT-PLUG:\n\n * Used for enabling Apple's XCPM in macOS, allowing for far better CPU power management\n\nSSDT-EC-USBX:\n\n * Used for disabling your real Embedded controller and creating a fake one for macOS to play with\n * USBX portion is used for injection USB power properties missing on Skylake and newer\n\nSSDT-AWAC:\n\n * Used to enable the legacy RTC clock in macOS, as the newer AWAC clock is unsupported\n\nSSDT-PMC:\n\n * Used to enable native NVRAM on \"true\" 300 series motherboards\n   * ie. B360, B365, H310, H370, Z390\n   * Note Z370 is not included\n\n\n# Desktop Comet Lake\n\nSSDTs required\n\n * SSDT-PLUG-DRTNIA\n * SSDT-EC-USBX-DESKTOP\n * SSDT-AWAC\n * SSDT-RHUB\n   * Specifically for Asus's 400 series motherboards, Gigabyte and others do not need SSDT-RHUB\n\nOnce downloaded, place them into your EFI folder under EFI/OC/ACPI and head back to the install guide\n\n * config.plist Setup\n\nIn-depth info on the SSDTs\n\nSSDT-PLUG:\n\n * Used for enabling Apple's XCPM in macOS, allowing for far better CPU power management\n\nSSDT-EC-USBX:\n\n * Used for disabling your real Embedded controller and creating a fake one for macOS to play with\n * USBX portion is used for injection USB power properties missing on Skylake and newer\n\nSSDT-AWAC:\n\n * Used to enable the legacy RTC clock in macOS, as the newer AWAC clock is unsupported\n\nSSDT-RHUB:\n\n * Used to reset USB controllers on Asus's 400 series motherboards due to poor ACPI implementation from the OEM\n   * Note Gigabyte, MSI, AsRock, etc do not need this SSDT. Only Asus\n\n\n# Intel Laptop SSDTs\n\n\n# Laptop Clarksfield and Arrandale\n\nSSDTs required\n\n * SSDT-EC-LAPTOP\n * SSDT-PNLF\n * SSDT-XOSI\n\nOnce downloaded, place them into your EFI folder under EFI/OC/ACPI and head back to the install guide\n\n * config.plist Setup\n\nIn-depth info on the SSDTs\n\nSSDT-EC:\n\n * Used for disabling your real Embedded controller and creating a fake one for macOS to play with\n\nSSDT-PNLF:\n\n * Used for controlling the backlight on internal displays such as AIOs and laptops\n\nSSDT-XOSI:\n\n * Enables many Windows-only functionality in macOS\n   * Requires XOSI patch(covered later on)\n\n\n# Laptop Sandy and Ivy Bridge\n\nSSDTs required\n\n * SSDT-EC-LAPTOP\n * SSDT-IMEI\n   * Required for Sandy Bridge CPU with 7 series motherboard\n     * ie. B75, Q75, Z75, H77, Q77, Z77\n   * Required Ivy Bridge CPU with 6 series motherboard\n     * ie. H61, B65, Q65, P67, H67, Q67, Z68\n * SSDT-PNLF\n * SSDT-XOSI\n\nOnce downloaded, place them into your EFI folder under EFI/OC/ACPI and head back to the install guide\n\n * config.plist Setup\n\nIn-depth info on the SSDTs\n\nSSDT-EC:\n\n * Used for disabling your real Embedded controller and creating a fake one for macOS to play with\n\nSSDT-IMEI\n\n * Used for creating an IMEI device when one is not present in ACPI\n   * Required for Sandy Bridge CPU with 7 series motherboard\n     * ie. B75, Q75, Z75, H77, Q77, Z77\n   * Required Ivy Bridge CPU with 6 series motherboard\n     * ie. H61, B65, Q65, P67, H67, Q67, Z68\n\nSSDT-PNLF:\n\n * Used for controlling the backlight on internal displays such as AIOs and laptops\n\nSSDT-XOSI:\n\n * Enables many Windows-only functionality in macOS\n   * Requires XOSI patch(covered later on)\n\n\n# Laptop Haswell and Broadwell\n\nSSDTs required\n\n * SSDT-PLUG-DRTNIA\n * SSDT-EC-LAPTOP\n * SSDT-PNLF\n * SSDT-XOSI\n\nOnce downloaded, place them into your EFI folder under EFI/OC/ACPI and head back to the install guide\n\n * config.plist Setup\n\nIn-depth info on the SSDTs\n\nSSDT-PLUG:\n\n * Used for enabling Apple's XCPM in macOS, allowing for far better CPU power management\n\nSSDT-EC:\n\n * Used for disabling your real Embedded controller and creating a fake one for macOS to play with\n\nSSDT-PNLF:\n\n * Used for controlling the backlight on internal displays such as AIOs and laptops\n\nSSDT-XOSI:\n\n * Enables many Windows-only functionality in macOS\n   * Requires XOSI patch(covered later on)\n\n\n# Laptop Skylake and Kaby Lake\n\nSSDTs required\n\n * SSDT-PLUG-DRTNIA\n * SSDT-EC-USBX-LAPTOP\n * SSDT-PNLF\n * SSDT-XOSI\n\nOnce downloaded, place them into your EFI folder under EFI/OC/ACPI and head back to the install guide\n\n * config.plist Setup\n\nIn-depth info on the SSDTs\n\nSSDT-PLUG:\n\n * Used for enabling Apple's XCPM in macOS, allowing for far better CPU power management\n\nSSDT-EC-USBX:\n\n * Used for disabling your real Embedded controller and creating a fake one for macOS to play with\n * USBX portion is used for injection USB power properties missing on Skylake and newer\n\nSSDT-PNLF:\n\n * Used for controlling the backlight on internal displays such as AIOs and laptops\n\nSSDT-XOSI:\n\n * Enables many Windows-only functionality in macOS\n   * Requires XOSI patch(covered later on)\n\n\n# Laptop Coffee Lake (8th gen)\n\nSSDTs required\n\n * SSDT-PLUG-DRTNIA\n * SSDT-EC-USBX-LAPTOP\n * SSDT-AWAC\n * SSDT-PNLF\n * SSDT-XOSI\n\nOnce downloaded, place them into your EFI folder under EFI/OC/ACPI and head back to the install guide\n\n * config.plist Setup\n\nIn-depth info on the SSDTs\n\nSSDT-PLUG:\n\n * Used for enabling Apple's XCPM in macOS, allowing for far better CPU power management\n\nSSDT-EC-USBX:\n\n * Used for disabling your real Embedded controller and creating a fake one for macOS to play with\n * USBX portion is used for injection USB power properties missing on Skylake and newer\n\nSSDT-AWAC:\n\n * Used to enable the legacy RTC clock in macOS, as the newer AWAC clock is unsupported\n\nSSDT-PNLF:\n\n * Used for controlling the backlight on internal displays such as AIOs and laptops\n\nSSDT-XOSI:\n\n * Enables many Windows-only functionality in macOS\n   * Requires XOSI patch(covered later on)\n\n\n# Laptop Coffee and Comet Lake (9th and 10th gen)\n\nSSDTs required\n\n * SSDT-PLUG-DRTNIA\n * SSDT-EC-USBX-LAPTOP\n * SSDT-AWAC\n * SSDT-PMC\n   * Only for 9th gen laptops, 10th gen can ignore\n * SSDT-PNLF\n * SSDT-XOSI\n\nOnce downloaded, place them into your EFI folder under EFI/OC/ACPI and head back to the install guide\n\n * config.plist Setup\n\nIn-depth info on the SSDTs\n\nSSDT-PLUG:\n\n * Used for enabling Apple's XCPM in macOS, allowing for far better CPU power management\n\nSSDT-EC-USBX:\n\n * Used for disabling your real Embedded controller and creating a fake one for macOS to play with\n * USBX portion is used for injection USB power properties missing on Skylake and newer\n\nSSDT-AWAC:\n\n * Used to enable the legacy RTC clock in macOS, as the newer AWAC clock is unsupported\n\nSSDT-PMC:\n\n * Used to enable native NVRAM on \"true\" 300 series motherboards\n   * Only for 9th gen laptops\n\nSSDT-PNLF:\n\n * Used for controlling the backlight on internal displays such as AIOs and laptops\n\nSSDT-XOSI:\n\n * Enables many Windows-only functionality in macOS\n   * Requires XOSI patch(covered later on)\n\n\n# Laptop Ice Lake\n\nSSDTs required\n\n * SSDT-PLUG-DRTNIA\n * SSDT-EC-USBX-LAPTOP\n * SSDT-AWAC\n * SSDT-RHUB\n * SSDT-PNLF\n * SSDT-XOSI\n\nOnce downloaded, place them into your EFI folder under EFI/OC/ACPI and head back to the install guide\n\n * config.plist Setup\n\nIn-depth info on the SSDTs\n\nSSDT-PLUG:\n\n * Used for enabling Apple's XCPM in macOS, allowing for far better CPU power management\n\nSSDT-EC-USBX:\n\n * Used for disabling your real Embedded controller and creating a fake one for macOS to play with\n * USBX portion is used for injection USB power properties missing on Skylake and newer\n\nSSDT-AWAC:\n\n * Used to enable the legacy RTC clock in macOS, as the newer AWAC clock is unsupported\n\nSSDT-RHUB:\n\n * Used to reset USB controllers on Ice Lake laptops due to poor OEM ACPI implementation\n   * Mainly seen on Dell laptops\n\nSSDT-PNLF:\n\n * Used for controlling the backlight on internal displays such as AIOs and laptops\n\nSSDT-XOSI:\n\n * Enables many Windows-only functionality in macOS\n   * Requires XOSI patch(covered later on)\n\n\n# Intel HEDT SSDTs\n\n\n# Nehalem and Westmere\n\nSSDTs required\n\n * SSDT-EC-DESKTOP\n\nOnce downloaded, place them into your EFI folder under EFI/OC/ACPI and head back to the install guide\n\n * config.plist Setup\n\nIn-depth info on the SSDTs\n\nSSDT-EC:\n\n * Used for disabling your real Embedded controller and creating a fake one for macOS to play with\n\n\n# Sandy and Ivy Bridge-E\n\nSSDTs required\n\n * SSDT-EC-DESKTOP\n * SSDT-UNC\n\nOnce downloaded, place them into your EFI folder under EFI/OC/ACPI and head back to the install guide\n\n * config.plist Setup\n\nIn-depth info on the SSDTs\n\nSSDT-EC:\n\n * Used for disabling your real Embedded controller and creating a fake one for macOS to play with\n\nSSDT-UNC0:\n\n * Used to ensure unused or missing uncore bridges are properly disabled, otherwise kernel panic in IOPCIFamily in macOS Big Sur\n\n\n# Haswell and Broadwell-E\n\nSSDTs required\n\n * SSDT-PLUG-DRTNIA\n * SSDT-EC-USBX-DESKTOP\n * SSDT-RTC0-RANGE-HEDT\n * SSDT-UNC\n\nOnce downloaded, place them into your EFI folder under EFI/OC/ACPI and head back to the install guide\n\n * config.plist Setup\n\nIn-depth info on the SSDTs\n\nSSDT-PLUG:\n\n * Used for enabling Apple's XCPM in macOS, allowing for far better CPU power management\n\nSSDT-EC-USBX:\n\n * Used for disabling your real Embedded controller and creating a fake one for macOS to play with\n * USBX portion is used for injection USB power properties missing on Skylake and newer\n\nSSDT-RTC0-RANGE-HEDT:\n\n * Used to enable the legacy RTC clock in macOS, as the newer AWAC clock is unsupported\n   * Added benefit is to resolve early halts in macOS Big Sur's booting due to poor ACPI implementation\n\nSSDT-UNC0:\n\n * Used to ensure unused or missing uncore bridges are properly disabled, otherwise kernel panic in IOPCIFamily in macOS Big Sur\n\n\n# Skylake and Cascade Lake-X/W\n\nSSDTs required\n\n * SSDT-PLUG-DRTNIA\n * SSDT-EC-USBX-DESKTOP\n * SSDT-RTC0-RANGE-HEDT\n\nOnce downloaded, place them into your EFI folder under EFI/OC/ACPI and head back to the install guide\n\n * config.plist Setup\n\nIn-depth info on the SSDTs\n\nSSDT-PLUG:\n\n * Used for enabling Apple's XCPM in macOS, allowing for far better CPU power management\n\nSSDT-EC-USBX:\n\n * Used for disabling your real Embedded controller and creating a fake one for macOS to play with\n * USBX portion is used for injection USB power properties missing on Skylake and newer\n\nSSDT-RTC0-RANGE-HEDT:\n\n * Used to enable the legacy RTC clock in macOS, as the newer AWAC clock is unsupported\n   * Added benefit is to resolve early halts in macOS Big Sur's booting due to poor ACPI implementation\n\n\n# AMD SSDTs\n\n\n# AMD Bulldozer/Jaguar\n\nSSDTs required\n\n * SSDT-EC-USBX-DESKTOP\n\nOnce downloaded, place them into your EFI folder under EFI/OC/ACPI and head back to the install guide\n\n * config.plist Setup\n\nIn-depth info on the SSDTs\n\nSSDT-EC-USBX:\n\n * Used for disabling your real Embedded controller and creating a fake one for macOS to play with\n * USBX portion is used for injection USB power properties missing on Skylake and newer\n\n\n# AMD Zen\n\nSSDTs required\n\n * SSDT-EC-USBX-DESKTOP\n * SSDT-CPUR\n   * Only required for B550, A520 and newer\n     * X570 and older DO NOT need SSDT-CPUR\n     * No threadripper machines need this either\n\nOnce downloaded, place them into your EFI folder under EFI/OC/ACPI and head back to the install guide\n\n * config.plist Setup\n\nIn-depth info on the SSDTs\n\nSSDT-EC-USBX:\n\n * Used for disabling your real Embedded controller and creating a fake one for macOS to play with\n * USBX portion is used for injection USB power properties missing on Skylake and newer\n\nSSDT-CPUR:\n\n * Used for fixing CPU definitions in ACPI, as macOS does not properly support the ACPI used in B550 and newer boards",normalizedContent:"# prebuilt ssdts\n\nsimply select your hardware type and generation, then download the associated files. once downloaded, place them in your efi under efi/oc/acpi and head back to config.plist setup\n\n * intel desktop ssdts\n   * penryn, lynnfield and clarkdale\n   * sandy and ivy bridge\n   * haswell and broadwell\n   * skylake and kaby lake\n   * coffee lake\n   * comet lake\n * intel laptop ssdts\n   * clarksfield and arrandale\n   * sandy and ivy bridge\n   * haswell and broadwell\n   * skylake and kaby lake\n   * coffee lake (8th gen)\n   * coffee and comet lake (9th and 10th gen)\n   * ice lake\n * intel hedt ssdts\n   * nehalem and westmere\n   * sandy and ivy bridge-e\n   * haswell and broadwell-e\n   * skylake and cascade lake-x/w\n * amd ssdts\n   * bulldozer/jaguar\n   * zen\n\n\n# intel desktop ssdts\n\n * penryn, lynnfield and clarkdale\n * sandy and ivy bridge\n * haswell and broadwell\n * skylake and kaby lake\n * coffee lake\n * comet lake\n\n\n# desktop penryn, lynnfield and clarkdale\n\nssdts required\n\n * ssdt-ec-desktop\n\nonce downloaded, place them into your efi folder under efi/oc/acpi and head back to the install guide\n\n * config.plist setup\n\nin-depth info on the ssdts\n\nssdt-ec:\n\n * used for disabling your real embedded controller and creating a fake one for macos to play with\n\n\n# desktop sandy and ivy bridge\n\nssdts required\n\n * ssdt-ec-desktop\n * ssdt-imei\n   * required for sandy bridge cpu with 7 series motherboard\n     * ie. b75, q75, z75, h77, q77, z77\n   * required ivy bridge cpu with 6 series motherboard\n     * ie. h61, b65, q65, p67, h67, q67, z68\n\nonce downloaded, place them into your efi folder under efi/oc/acpi and head back to the install guide\n\n * config.plist setup\n\nin-depth info on the ssdts\n\nssdt-ec:\n\n * used for disabling your real embedded controller and creating a fake one for macos to play with\n\nssdt-imei\n\n * used for creating an imei device when one is not present in acpi\\\n   * required for sandy bridge cpu with 7 series motherboard\n     * ie. b75, q75, z75, h77, q77, z77\n   * required ivy bridge cpu with 6 series motherboard\n     * ie. h61, b65, q65, p67, h67, q67, z68\n\n\n# desktop haswell and broadwell\n\nssdts required\n\n * ssdt-plug-drtnia\n * ssdt-ec-desktop\n\nonce downloaded, place them into your efi folder under efi/oc/acpi and head back to the install guide\n\n * config.plist setup\n\nin-depth info on the ssdts\n\nssdt-plug:\n\n * used for enabling apple's xcpm in macos, allowing for far better cpu power management\n\nssdt-ec:\n\n * used for disabling your real embedded controller and creating a fake one for macos to play with\n\n\n# desktop skylake and kaby lake\n\nssdts required\n\n * ssdt-plug-drtnia\n * ssdt-ec-usbx-desktop\n\nonce downloaded, place them into your efi folder under efi/oc/acpi and head back to the install guide\n\n * config.plist setup\n\nin-depth info on the ssdts\n\nssdt-plug:\n\n * used for enabling apple's xcpm in macos, allowing for far better cpu power management\n\nssdt-ec-usbx:\n\n * used for disabling your real embedded controller and creating a fake one for macos to play with\n * usbx portion is used for injection usb power properties missing on skylake and newer\n\n\n# desktop coffee lake\n\nssdts required\n\n * ssdt-plug-drtnia\n * ssdt-ec-usbx-desktop\n * ssdt-awac\n * ssdt-pmc\n\nonce downloaded, place them into your efi folder under efi/oc/acpi and head back to the install guide\n\n * config.plist setup\n\nin-depth info on the ssdts\n\nssdt-plug:\n\n * used for enabling apple's xcpm in macos, allowing for far better cpu power management\n\nssdt-ec-usbx:\n\n * used for disabling your real embedded controller and creating a fake one for macos to play with\n * usbx portion is used for injection usb power properties missing on skylake and newer\n\nssdt-awac:\n\n * used to enable the legacy rtc clock in macos, as the newer awac clock is unsupported\n\nssdt-pmc:\n\n * used to enable native nvram on \"true\" 300 series motherboards\n   * ie. b360, b365, h310, h370, z390\n   * note z370 is not included\n\n\n# desktop comet lake\n\nssdts required\n\n * ssdt-plug-drtnia\n * ssdt-ec-usbx-desktop\n * ssdt-awac\n * ssdt-rhub\n   * specifically for asus's 400 series motherboards, gigabyte and others do not need ssdt-rhub\n\nonce downloaded, place them into your efi folder under efi/oc/acpi and head back to the install guide\n\n * config.plist setup\n\nin-depth info on the ssdts\n\nssdt-plug:\n\n * used for enabling apple's xcpm in macos, allowing for far better cpu power management\n\nssdt-ec-usbx:\n\n * used for disabling your real embedded controller and creating a fake one for macos to play with\n * usbx portion is used for injection usb power properties missing on skylake and newer\n\nssdt-awac:\n\n * used to enable the legacy rtc clock in macos, as the newer awac clock is unsupported\n\nssdt-rhub:\n\n * used to reset usb controllers on asus's 400 series motherboards due to poor acpi implementation from the oem\n   * note gigabyte, msi, asrock, etc do not need this ssdt. only asus\n\n\n# intel laptop ssdts\n\n\n# laptop clarksfield and arrandale\n\nssdts required\n\n * ssdt-ec-laptop\n * ssdt-pnlf\n * ssdt-xosi\n\nonce downloaded, place them into your efi folder under efi/oc/acpi and head back to the install guide\n\n * config.plist setup\n\nin-depth info on the ssdts\n\nssdt-ec:\n\n * used for disabling your real embedded controller and creating a fake one for macos to play with\n\nssdt-pnlf:\n\n * used for controlling the backlight on internal displays such as aios and laptops\n\nssdt-xosi:\n\n * enables many windows-only functionality in macos\n   * requires xosi patch(covered later on)\n\n\n# laptop sandy and ivy bridge\n\nssdts required\n\n * ssdt-ec-laptop\n * ssdt-imei\n   * required for sandy bridge cpu with 7 series motherboard\n     * ie. b75, q75, z75, h77, q77, z77\n   * required ivy bridge cpu with 6 series motherboard\n     * ie. h61, b65, q65, p67, h67, q67, z68\n * ssdt-pnlf\n * ssdt-xosi\n\nonce downloaded, place them into your efi folder under efi/oc/acpi and head back to the install guide\n\n * config.plist setup\n\nin-depth info on the ssdts\n\nssdt-ec:\n\n * used for disabling your real embedded controller and creating a fake one for macos to play with\n\nssdt-imei\n\n * used for creating an imei device when one is not present in acpi\n   * required for sandy bridge cpu with 7 series motherboard\n     * ie. b75, q75, z75, h77, q77, z77\n   * required ivy bridge cpu with 6 series motherboard\n     * ie. h61, b65, q65, p67, h67, q67, z68\n\nssdt-pnlf:\n\n * used for controlling the backlight on internal displays such as aios and laptops\n\nssdt-xosi:\n\n * enables many windows-only functionality in macos\n   * requires xosi patch(covered later on)\n\n\n# laptop haswell and broadwell\n\nssdts required\n\n * ssdt-plug-drtnia\n * ssdt-ec-laptop\n * ssdt-pnlf\n * ssdt-xosi\n\nonce downloaded, place them into your efi folder under efi/oc/acpi and head back to the install guide\n\n * config.plist setup\n\nin-depth info on the ssdts\n\nssdt-plug:\n\n * used for enabling apple's xcpm in macos, allowing for far better cpu power management\n\nssdt-ec:\n\n * used for disabling your real embedded controller and creating a fake one for macos to play with\n\nssdt-pnlf:\n\n * used for controlling the backlight on internal displays such as aios and laptops\n\nssdt-xosi:\n\n * enables many windows-only functionality in macos\n   * requires xosi patch(covered later on)\n\n\n# laptop skylake and kaby lake\n\nssdts required\n\n * ssdt-plug-drtnia\n * ssdt-ec-usbx-laptop\n * ssdt-pnlf\n * ssdt-xosi\n\nonce downloaded, place them into your efi folder under efi/oc/acpi and head back to the install guide\n\n * config.plist setup\n\nin-depth info on the ssdts\n\nssdt-plug:\n\n * used for enabling apple's xcpm in macos, allowing for far better cpu power management\n\nssdt-ec-usbx:\n\n * used for disabling your real embedded controller and creating a fake one for macos to play with\n * usbx portion is used for injection usb power properties missing on skylake and newer\n\nssdt-pnlf:\n\n * used for controlling the backlight on internal displays such as aios and laptops\n\nssdt-xosi:\n\n * enables many windows-only functionality in macos\n   * requires xosi patch(covered later on)\n\n\n# laptop coffee lake (8th gen)\n\nssdts required\n\n * ssdt-plug-drtnia\n * ssdt-ec-usbx-laptop\n * ssdt-awac\n * ssdt-pnlf\n * ssdt-xosi\n\nonce downloaded, place them into your efi folder under efi/oc/acpi and head back to the install guide\n\n * config.plist setup\n\nin-depth info on the ssdts\n\nssdt-plug:\n\n * used for enabling apple's xcpm in macos, allowing for far better cpu power management\n\nssdt-ec-usbx:\n\n * used for disabling your real embedded controller and creating a fake one for macos to play with\n * usbx portion is used for injection usb power properties missing on skylake and newer\n\nssdt-awac:\n\n * used to enable the legacy rtc clock in macos, as the newer awac clock is unsupported\n\nssdt-pnlf:\n\n * used for controlling the backlight on internal displays such as aios and laptops\n\nssdt-xosi:\n\n * enables many windows-only functionality in macos\n   * requires xosi patch(covered later on)\n\n\n# laptop coffee and comet lake (9th and 10th gen)\n\nssdts required\n\n * ssdt-plug-drtnia\n * ssdt-ec-usbx-laptop\n * ssdt-awac\n * ssdt-pmc\n   * only for 9th gen laptops, 10th gen can ignore\n * ssdt-pnlf\n * ssdt-xosi\n\nonce downloaded, place them into your efi folder under efi/oc/acpi and head back to the install guide\n\n * config.plist setup\n\nin-depth info on the ssdts\n\nssdt-plug:\n\n * used for enabling apple's xcpm in macos, allowing for far better cpu power management\n\nssdt-ec-usbx:\n\n * used for disabling your real embedded controller and creating a fake one for macos to play with\n * usbx portion is used for injection usb power properties missing on skylake and newer\n\nssdt-awac:\n\n * used to enable the legacy rtc clock in macos, as the newer awac clock is unsupported\n\nssdt-pmc:\n\n * used to enable native nvram on \"true\" 300 series motherboards\n   * only for 9th gen laptops\n\nssdt-pnlf:\n\n * used for controlling the backlight on internal displays such as aios and laptops\n\nssdt-xosi:\n\n * enables many windows-only functionality in macos\n   * requires xosi patch(covered later on)\n\n\n# laptop ice lake\n\nssdts required\n\n * ssdt-plug-drtnia\n * ssdt-ec-usbx-laptop\n * ssdt-awac\n * ssdt-rhub\n * ssdt-pnlf\n * ssdt-xosi\n\nonce downloaded, place them into your efi folder under efi/oc/acpi and head back to the install guide\n\n * config.plist setup\n\nin-depth info on the ssdts\n\nssdt-plug:\n\n * used for enabling apple's xcpm in macos, allowing for far better cpu power management\n\nssdt-ec-usbx:\n\n * used for disabling your real embedded controller and creating a fake one for macos to play with\n * usbx portion is used for injection usb power properties missing on skylake and newer\n\nssdt-awac:\n\n * used to enable the legacy rtc clock in macos, as the newer awac clock is unsupported\n\nssdt-rhub:\n\n * used to reset usb controllers on ice lake laptops due to poor oem acpi implementation\n   * mainly seen on dell laptops\n\nssdt-pnlf:\n\n * used for controlling the backlight on internal displays such as aios and laptops\n\nssdt-xosi:\n\n * enables many windows-only functionality in macos\n   * requires xosi patch(covered later on)\n\n\n# intel hedt ssdts\n\n\n# nehalem and westmere\n\nssdts required\n\n * ssdt-ec-desktop\n\nonce downloaded, place them into your efi folder under efi/oc/acpi and head back to the install guide\n\n * config.plist setup\n\nin-depth info on the ssdts\n\nssdt-ec:\n\n * used for disabling your real embedded controller and creating a fake one for macos to play with\n\n\n# sandy and ivy bridge-e\n\nssdts required\n\n * ssdt-ec-desktop\n * ssdt-unc\n\nonce downloaded, place them into your efi folder under efi/oc/acpi and head back to the install guide\n\n * config.plist setup\n\nin-depth info on the ssdts\n\nssdt-ec:\n\n * used for disabling your real embedded controller and creating a fake one for macos to play with\n\nssdt-unc0:\n\n * used to ensure unused or missing uncore bridges are properly disabled, otherwise kernel panic in iopcifamily in macos big sur\n\n\n# haswell and broadwell-e\n\nssdts required\n\n * ssdt-plug-drtnia\n * ssdt-ec-usbx-desktop\n * ssdt-rtc0-range-hedt\n * ssdt-unc\n\nonce downloaded, place them into your efi folder under efi/oc/acpi and head back to the install guide\n\n * config.plist setup\n\nin-depth info on the ssdts\n\nssdt-plug:\n\n * used for enabling apple's xcpm in macos, allowing for far better cpu power management\n\nssdt-ec-usbx:\n\n * used for disabling your real embedded controller and creating a fake one for macos to play with\n * usbx portion is used for injection usb power properties missing on skylake and newer\n\nssdt-rtc0-range-hedt:\n\n * used to enable the legacy rtc clock in macos, as the newer awac clock is unsupported\n   * added benefit is to resolve early halts in macos big sur's booting due to poor acpi implementation\n\nssdt-unc0:\n\n * used to ensure unused or missing uncore bridges are properly disabled, otherwise kernel panic in iopcifamily in macos big sur\n\n\n# skylake and cascade lake-x/w\n\nssdts required\n\n * ssdt-plug-drtnia\n * ssdt-ec-usbx-desktop\n * ssdt-rtc0-range-hedt\n\nonce downloaded, place them into your efi folder under efi/oc/acpi and head back to the install guide\n\n * config.plist setup\n\nin-depth info on the ssdts\n\nssdt-plug:\n\n * used for enabling apple's xcpm in macos, allowing for far better cpu power management\n\nssdt-ec-usbx:\n\n * used for disabling your real embedded controller and creating a fake one for macos to play with\n * usbx portion is used for injection usb power properties missing on skylake and newer\n\nssdt-rtc0-range-hedt:\n\n * used to enable the legacy rtc clock in macos, as the newer awac clock is unsupported\n   * added benefit is to resolve early halts in macos big sur's booting due to poor acpi implementation\n\n\n# amd ssdts\n\n\n# amd bulldozer/jaguar\n\nssdts required\n\n * ssdt-ec-usbx-desktop\n\nonce downloaded, place them into your efi folder under efi/oc/acpi and head back to the install guide\n\n * config.plist setup\n\nin-depth info on the ssdts\n\nssdt-ec-usbx:\n\n * used for disabling your real embedded controller and creating a fake one for macos to play with\n * usbx portion is used for injection usb power properties missing on skylake and newer\n\n\n# amd zen\n\nssdts required\n\n * ssdt-ec-usbx-desktop\n * ssdt-cpur\n   * only required for b550, a520 and newer\n     * x570 and older do not need ssdt-cpur\n     * no threadripper machines need this either\n\nonce downloaded, place them into your efi folder under efi/oc/acpi and head back to the install guide\n\n * config.plist setup\n\nin-depth info on the ssdts\n\nssdt-ec-usbx:\n\n * used for disabling your real embedded controller and creating a fake one for macos to play with\n * usbx portion is used for injection usb power properties missing on skylake and newer\n\nssdt-cpur:\n\n * used for fixing cpu definitions in acpi, as macos does not properly support the acpi used in b550 and newer boards",charsets:{}},{title:"What SSDTs do each platform need",frontmatter:{},regularPath:"/ssdt-platform.html",relativePath:"ssdt-platform.md",key:"v-c31fbd6e",path:"/ssdt-platform.html",headers:[{level:2,title:"Desktop",slug:"desktop",normalizedTitle:"desktop",charIndex:227},{level:2,title:"High End Desktop",slug:"high-end-desktop",normalizedTitle:"high end desktop",charIndex:240},{level:2,title:"Laptop",slug:"laptop",normalizedTitle:"laptop",charIndex:262},{level:2,title:"SSDT Creation",slug:"ssdt-creation",normalizedTitle:"ssdt creation",charIndex:272}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"Desktop High End Desktop Laptop SSDT Creation",content:"# What SSDTs do each platform need\n\nPlease see the specific ACPI section of your config.plist, all SSDTs needed are covered there with a brief explainer. But here's a very quick TL;DR:\n\n * What SSDTs do each platform need\n   * Desktop\n   * High End Desktop\n   * Laptop\n * SSDT Creation\n\n\n# Desktop\n\nPLATFORMS                 CPU                            EC             AWAC        NVRAM      USB\nPenryn                    N/A                            SSDT-EC        N/A         N/A        N/A\nLynnfield and Clarkdale\nSandyBridge               CPU-PM (Run in Post-Install)\nIvy Bridge\nHaswell                   SSDT-PLUG\nBroadwell\nSkylake                                                  SSDT-EC-USBX\nKaby Lake\nCoffee Lake                                                             SSDT-AWAC   SSDT-PMC\nComet Lake                                                                          N/A        SSDT-RHUB\nAMD (15/16h)              N/A                                           N/A                    N/A\nAMD (17h)                 SSDT-CPUR for B550 and A520\n\n\n# High End Desktop\n\nPLATFORMS              CPU         EC             RTC               PCI\nNehalem and Westmere   N/A         SSDT-EC        N/A               N/A\nSandy Bridge-E                                                      SSDT-UNC\nIvy Bridge-E\nHaswell-E              SSDT-PLUG   SSDT-EC-USBX   SSDT-RTC0-RANGE\nBroadwell-E\nSkylake-X                                                           N/A\n\n\n# Laptop\n\nPLATFORMS                                CPU                            EC             BACKLIGHT   I2C TRACKPAD                                AWAC        USB         IRQ\nClarksfield and Arrandale                N/A                            SSDT-EC        SSDT-PNLF   N/A                                         N/A         N/A         IRQ SSDT\nSandyBridge                              CPU-PM (Run in Post-Install)\nIvy Bridge\nHaswell                                  SSDT-PLUG                                                 SSDT-XOSI/SSDT-GPI0 (Run in Post-Install)\nBroadwell\nSkylake                                                                 SSDT-EC-USBX                                                                                   N/A\nKaby Lake\nCoffee Lake (8th Gen) and Whiskey Lake                                                                                                         SSDT-AWAC\nCoffee Lake (9th Gen)\nComet Lake\nIce Lake                                                                                                                                                   SSDT-RHUB\n\nContinuing:\n\nPLATFORMS                                NVRAM      IMEI\nClarksfield and Arrandale                N/A        N/A\nSandy Bridge                                        SSDT-IMEI\nIvy Bridge\nHaswell                                             N/A\nBroadwell\nSkylake\nKaby Lake\nCoffee Lake (8th Gen) and Whiskey Lake\nCoffee Lake (9th Gen)                    SSDT-PMC\nComet Lake                               N/A\nIce Lake\n\n\n# SSDT Creation",normalizedContent:"# what ssdts do each platform need\n\nplease see the specific acpi section of your config.plist, all ssdts needed are covered there with a brief explainer. but here's a very quick tl;dr:\n\n * what ssdts do each platform need\n   * desktop\n   * high end desktop\n   * laptop\n * ssdt creation\n\n\n# desktop\n\nplatforms                 cpu                            ec             awac        nvram      usb\npenryn                    n/a                            ssdt-ec        n/a         n/a        n/a\nlynnfield and clarkdale\nsandybridge               cpu-pm (run in post-install)\nivy bridge\nhaswell                   ssdt-plug\nbroadwell\nskylake                                                  ssdt-ec-usbx\nkaby lake\ncoffee lake                                                             ssdt-awac   ssdt-pmc\ncomet lake                                                                          n/a        ssdt-rhub\namd (15/16h)              n/a                                           n/a                    n/a\namd (17h)                 ssdt-cpur for b550 and a520\n\n\n# high end desktop\n\nplatforms              cpu         ec             rtc               pci\nnehalem and westmere   n/a         ssdt-ec        n/a               n/a\nsandy bridge-e                                                      ssdt-unc\nivy bridge-e\nhaswell-e              ssdt-plug   ssdt-ec-usbx   ssdt-rtc0-range\nbroadwell-e\nskylake-x                                                           n/a\n\n\n# laptop\n\nplatforms                                cpu                            ec             backlight   i2c trackpad                                awac        usb         irq\nclarksfield and arrandale                n/a                            ssdt-ec        ssdt-pnlf   n/a                                         n/a         n/a         irq ssdt\nsandybridge                              cpu-pm (run in post-install)\nivy bridge\nhaswell                                  ssdt-plug                                                 ssdt-xosi/ssdt-gpi0 (run in post-install)\nbroadwell\nskylake                                                                 ssdt-ec-usbx                                                                                   n/a\nkaby lake\ncoffee lake (8th gen) and whiskey lake                                                                                                         ssdt-awac\ncoffee lake (9th gen)\ncomet lake\nice lake                                                                                                                                                   ssdt-rhub\n\ncontinuing:\n\nplatforms                                nvram      imei\nclarksfield and arrandale                n/a        n/a\nsandy bridge                                        ssdt-imei\nivy bridge\nhaswell                                             n/a\nbroadwell\nskylake\nkaby lake\ncoffee lake (8th gen) and whiskey lake\ncoffee lake (9th gen)                    ssdt-pmc\ncomet lake                               n/a\nice lake\n\n\n# ssdt creation",charsets:{}},{title:"Troubleshooting",frontmatter:{},regularPath:"/troubleshooting.html",relativePath:"troubleshooting.md",key:"v-e960d7ee",path:"/troubleshooting.html",headers:[{level:2,title:"Fixing SSDTTime: Could not locate or download iasl!",slug:"fixing-ssdttime-could-not-locate-or-download-iasl",normalizedTitle:"fixing ssdttime: could not locate or download iasl!",charIndex:22},{level:2,title:"Can't run acpidump.efi from OpenCore",slug:"can-t-run-acpidump-efi-from-opencore",normalizedTitle:"can't run acpidump.efi from opencore",charIndex:524},{level:2,title:"iASL warning, # unresolved",slug:"iasl-warning-unresolved",normalizedTitle:"iasl warning, # unresolved",charIndex:103},{level:2,title:"Decompiling Error",slug:"decompiling-error",normalizedTitle:"decompiling error",charIndex:133},{level:2,title:"Invalid character (0x3D), expecting ASL keyword or name",slug:"invalid-character-0x3d-expecting-asl-keyword-or-name",normalizedTitle:"invalid character (0x3d), expecting asl keyword or name",charIndex:154},{level:2,title:"Syntax error, unexpected PARSEOP_ONE, expecting '('",slug:"syntax-error-unexpected-parseop-one-expecting",normalizedTitle:"syntax error, unexpected parseop_one, expecting '('",charIndex:213}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"Fixing SSDTTime: Could not locate or download iasl! Can't run acpidump.efi from OpenCore iASL warning, # unresolved Decompiling Error Invalid character (0x3D), expecting ASL keyword or name Syntax error, unexpected PARSEOP_ONE, expecting '('",content:"# Troubleshooting\n\n * Fixing SSDTTime: Could not locate or download iasl!\n * Can't run acpidump.efi\n * iASL warning, # unresolved\n * Decompiling Error\n * Invalid character (0x3D), expecting ASL keyword or name\n * Syntax error, unexpected PARSEOP_ONE, expecting '('\n\n\n# Fixing SSDTTime: Could not locate or download iasl!\n\nThis is usually due to an outdated version of Python, try either updating Python or add iasl to the scripts folder for SSDTTime:\n\n * iasl macOS version\n * iasl Windows version\n * iasl Linux version\n\n\n# Can't run acpidump.efi from OpenCore\n\nGrab OpenShell and add it to EFI/OC/Tools and config.plist -> Misc -> Tools.\n\nNext, call upon OpenCore shell and enter the following:\n\nshell> fs0: //replace with proper drive\n\nfs0:\\> dir //to verify this is the right directory\n\n  Directory of fs0:\\\n\n   01/01/01 3:30p  EFI\n\nfs0:\\> cd EFI\\OC\\Tools //note that its with forward slashes\n\nfs0:\\EFI\\OC\\Tools> acpidump.efi -b -n DSDT -z\n\n\n\n# iASL warning, # unresolved\n\nIf you try to decompile your DSDT and get an error similar to this:\n\niASL Warning: There were 19 external control methods found during disassembly, but only 0 were resolved (19 unresolved)\n\n\nThis happens when one ACPI table requires the rest for proper referencing, it does not accept the creation of DSDTs as we're only using it for creating a select few SSDTs. For those who are worried, you can run the following:\n\niasl * [insert all ACPI files here]\n\n\n\n# Decompiling Error\n\n\n\nLoading Acpi table from file iASLAwjHrs.aml\nAcpi table [DSDT] successfully installed and loaded\nPass 1 parse of [DSDT]\n\n\nThis is a common error on DSDTs that have methods that aren't supported by MaciASL, the easiest way is to delete MaciASL and make sure you grab it from Acidanthera's repo: MaciASL\n\n\n# Invalid character (0x3D), expecting ASL keyword or name\n\n\n\nSimilar to the above error, you're running an outdated copy of MaciASL. Make sure you're using the latest from Acidanthera's repo: MaciASL\n\n\n# Syntax error, unexpected PARSEOP_ONE, expecting '('\n\n\n\nSimilar to the above 2 errors, you're running an outdated copy of MaciASL. Make sure you're using the latest from Acidanthera's repo: MaciASL",normalizedContent:"# troubleshooting\n\n * fixing ssdttime: could not locate or download iasl!\n * can't run acpidump.efi\n * iasl warning, # unresolved\n * decompiling error\n * invalid character (0x3d), expecting asl keyword or name\n * syntax error, unexpected parseop_one, expecting '('\n\n\n# fixing ssdttime: could not locate or download iasl!\n\nthis is usually due to an outdated version of python, try either updating python or add iasl to the scripts folder for ssdttime:\n\n * iasl macos version\n * iasl windows version\n * iasl linux version\n\n\n# can't run acpidump.efi from opencore\n\ngrab openshell and add it to efi/oc/tools and config.plist -> misc -> tools.\n\nnext, call upon opencore shell and enter the following:\n\nshell> fs0: //replace with proper drive\n\nfs0:\\> dir //to verify this is the right directory\n\n  directory of fs0:\\\n\n   01/01/01 3:30p  efi\n\nfs0:\\> cd efi\\oc\\tools //note that its with forward slashes\n\nfs0:\\efi\\oc\\tools> acpidump.efi -b -n dsdt -z\n\n\n\n# iasl warning, # unresolved\n\nif you try to decompile your dsdt and get an error similar to this:\n\niasl warning: there were 19 external control methods found during disassembly, but only 0 were resolved (19 unresolved)\n\n\nthis happens when one acpi table requires the rest for proper referencing, it does not accept the creation of dsdts as we're only using it for creating a select few ssdts. for those who are worried, you can run the following:\n\niasl * [insert all acpi files here]\n\n\n\n# decompiling error\n\n\n\nloading acpi table from file iaslawjhrs.aml\nacpi table [dsdt] successfully installed and loaded\npass 1 parse of [dsdt]\n\n\nthis is a common error on dsdts that have methods that aren't supported by maciasl, the easiest way is to delete maciasl and make sure you grab it from acidanthera's repo: maciasl\n\n\n# invalid character (0x3d), expecting asl keyword or name\n\n\n\nsimilar to the above error, you're running an outdated copy of maciasl. make sure you're using the latest from acidanthera's repo: maciasl\n\n\n# syntax error, unexpected parseop_one, expecting '('\n\n\n\nsimilar to the above 2 errors, you're running an outdated copy of maciasl. make sure you're using the latest from acidanthera's repo: maciasl",charsets:{}},{title:"SSDTs: The long way",frontmatter:{},regularPath:"/ssdt-methods/ssdt-long.html",relativePath:"ssdt-methods/ssdt-long.md",key:"v-ba4bb512",path:"/ssdt-methods/ssdt-long.html",lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:null,content:"# SSDTs: The long way\n\nWell sadly some things are not handled by SSDTTime, well have no fear as making SSDTs is super easy. The basic process:\n\n * Dump DSDT(the one SSDTTime did for us will work)\n * Decompile DSDT\n * Make SSDTs based off of it(You'll need either MaciASL or a text editor for this)\n * Compile SSDTs\n\nNow continue forth and master the ways of ACPI!",normalizedContent:"# ssdts: the long way\n\nwell sadly some things are not handled by ssdttime, well have no fear as making ssdts is super easy. the basic process:\n\n * dump dsdt(the one ssdttime did for us will work)\n * decompile dsdt\n * make ssdts based off of it(you'll need either maciasl or a text editor for this)\n * compile ssdts\n\nnow continue forth and master the ways of acpi!",charsets:{}},{title:"SSDTs: The easy way",frontmatter:{},regularPath:"/ssdt-methods/ssdt-easy.html",relativePath:"ssdt-methods/ssdt-easy.md",key:"v-225b852a",path:"/ssdt-methods/ssdt-easy.html",headers:[{level:2,title:"So what CAN'T SSDTTime do",slug:"so-what-can-t-ssdttime-do",normalizedTitle:"so what can't ssdttime do",charIndex:277},{level:2,title:"Running SSDTTime",slug:"running-ssdttime",normalizedTitle:"running ssdttime",charIndex:1030},{level:2,title:"Adding to OpenCore",slug:"adding-to-opencore",normalizedTitle:"adding to opencore",charIndex:2719}],lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:"So what CAN'T SSDTTime do Running SSDTTime Adding to OpenCore",content:"# SSDTs: The easy way\n\nSo here we'll be using a super simple tool made by CorpNewt: SSDTTime\n\nWhat this tool does is, it dumps your DSDT from your firmware, and then creates SSDTs based off your DSDT. This must be done on the target machine running either Windows or Linux\n\n\n# So what CAN'T SSDTTime do\n\n * SSDT-PNLF:\n   * Need to be configured to your system\n * SSDT-GPI0:\n   * Need to be configured to your system\n * USBX SSDT:\n   * This is included on sample SSDTs but SSDTTime only makes the SSDT-EC part, Skylake and newer users can grab a pre-built here: SSDT-USBX.aml\n * IMEI SSDT:\n   * If you have either a Sandy bridge CPU with 7 series motherboard or Ivy Bridge with 6 series motherboard, you'll need to either use the prebuilt or manually create it.\n * RTC0 RANGE SSDT: If you have X99 or X299, you'll need to configure it to your system\n\nFor users who don't have all the options available to them in SSDTTime, you can follow the \"SSDTs: The long way\" section. You can still use SSDTTime for SSDTs it does support.\n\n\n# Running SSDTTime\n\nRun the SSDTTime.bat file as Admin on the target machine and you should see something like this:\n\n\n\nWhat are all these options?:\n\n * 1. FixHPET - Patch out IRQ Conflicts\n   * IRQ patching, mainly needed for X79, X99 and laptop users(use option C to omit conflicting legacy IRQs)\n * 2. FakeEC - OS-aware Fake EC\n   * This is the SSDT-EC, required for Catalina users\n * 3. FakeEC Laptop - OS-aware Fake EC\n   * This is the SSDT-EC, but the laptop version only Builds Fake EC and leaves the existing EC devices untouched, again required for Catalina users\n * 4. PluginType - Sets plugin-type = 1 on First ProcessorObj\n   * This is the SSDT-PLUG, for Intel only\n * 5. PMC - Sets Power Management controller status\n   * This is the SSDT-PMC, for Intel true 300+ series only, this device is missing from ACPI in recent boards and helps to bring back NVRAM support.\n * 6. AWAC - Context-Aware AWAC Disable and RTC Fake\n   * This is the SSDT-AWAC/RTC0, its purpose is to fix the system clocks found on newer hardware\n * 7. USB Reset - Reset USB controllers to allow hardware mapping\n   * This is SSDT-RHUB, used for resetting USB ports in macOS for Asus's Z490 motherboards\n * 8. Dump DSDT - Automatically dump the system DSDT\n   * Dumps your DSDT from your firmware\n\nWhat we want to do is select option 8. Dump DSDT first, then select the appropriate option(s) for your system.\n\n> What about USBX?\n\nFor Skylake and newer plus AMD, you can grab a pre-built file here: SSDT-USBX.aml. This file is plug and play and requires no device configuration, do not use on Broadwell and older.\n\nTroubleshooting note: See General Troubleshooting if you're having issues running SSDTTime\n\n\n# Adding to OpenCore\n\nDon't forget that SSDTs need to be added to OpenCore, reminder that .aml is complied, .dsl is code. Add only the .aml file:\n\n * EFI/OC/ACPI\n * config.plist -> ACPI -> Add\n\nReminder that Cmd/Ctrl+R with ProperTree pointed at your OC folder will add all your SSDTs, kexts and .efi drivers to the config for you. Do not add your DSDT to OpenCore, its already in your firmware. If you are unsure what this is referring to, go back to the OpenCore guide and select your config based of the architecture of your CPU.\n\nFor those who do not yet have a config.plist, you'll want to next head back to your respective OpenCore guides and create the config.plist:\n\n * OpenCore Install guide\n\nUsers of FixHPET will also need to merge oc_patches.plist into their config.plist\n\nSteps to do this:\n\n * Open both files,\n * Delete the ACPI -> Patch section from config.plist\n * Copy the ACPI -> Patch section from patches.plist\n * Paste into where old patches were in config.plist",normalizedContent:"# ssdts: the easy way\n\nso here we'll be using a super simple tool made by corpnewt: ssdttime\n\nwhat this tool does is, it dumps your dsdt from your firmware, and then creates ssdts based off your dsdt. this must be done on the target machine running either windows or linux\n\n\n# so what can't ssdttime do\n\n * ssdt-pnlf:\n   * need to be configured to your system\n * ssdt-gpi0:\n   * need to be configured to your system\n * usbx ssdt:\n   * this is included on sample ssdts but ssdttime only makes the ssdt-ec part, skylake and newer users can grab a pre-built here: ssdt-usbx.aml\n * imei ssdt:\n   * if you have either a sandy bridge cpu with 7 series motherboard or ivy bridge with 6 series motherboard, you'll need to either use the prebuilt or manually create it.\n * rtc0 range ssdt: if you have x99 or x299, you'll need to configure it to your system\n\nfor users who don't have all the options available to them in ssdttime, you can follow the \"ssdts: the long way\" section. you can still use ssdttime for ssdts it does support.\n\n\n# running ssdttime\n\nrun the ssdttime.bat file as admin on the target machine and you should see something like this:\n\n\n\nwhat are all these options?:\n\n * 1. fixhpet - patch out irq conflicts\n   * irq patching, mainly needed for x79, x99 and laptop users(use option c to omit conflicting legacy irqs)\n * 2. fakeec - os-aware fake ec\n   * this is the ssdt-ec, required for catalina users\n * 3. fakeec laptop - os-aware fake ec\n   * this is the ssdt-ec, but the laptop version only builds fake ec and leaves the existing ec devices untouched, again required for catalina users\n * 4. plugintype - sets plugin-type = 1 on first processorobj\n   * this is the ssdt-plug, for intel only\n * 5. pmc - sets power management controller status\n   * this is the ssdt-pmc, for intel true 300+ series only, this device is missing from acpi in recent boards and helps to bring back nvram support.\n * 6. awac - context-aware awac disable and rtc fake\n   * this is the ssdt-awac/rtc0, its purpose is to fix the system clocks found on newer hardware\n * 7. usb reset - reset usb controllers to allow hardware mapping\n   * this is ssdt-rhub, used for resetting usb ports in macos for asus's z490 motherboards\n * 8. dump dsdt - automatically dump the system dsdt\n   * dumps your dsdt from your firmware\n\nwhat we want to do is select option 8. dump dsdt first, then select the appropriate option(s) for your system.\n\n> what about usbx?\n\nfor skylake and newer plus amd, you can grab a pre-built file here: ssdt-usbx.aml. this file is plug and play and requires no device configuration, do not use on broadwell and older.\n\ntroubleshooting note: see general troubleshooting if you're having issues running ssdttime\n\n\n# adding to opencore\n\ndon't forget that ssdts need to be added to opencore, reminder that .aml is complied, .dsl is code. add only the .aml file:\n\n * efi/oc/acpi\n * config.plist -> acpi -> add\n\nreminder that cmd/ctrl+r with propertree pointed at your oc folder will add all your ssdts, kexts and .efi drivers to the config for you. do not add your dsdt to opencore, its already in your firmware. if you are unsure what this is referring to, go back to the opencore guide and select your config based of the architecture of your cpu.\n\nfor those who do not yet have a config.plist, you'll want to next head back to your respective opencore guides and create the config.plist:\n\n * opencore install guide\n\nusers of fixhpet will also need to merge oc_patches.plist into their config.plist\n\nsteps to do this:\n\n * open both files,\n * delete the acpi -> patch section from config.plist\n * copy the acpi -> patch section from patches.plist\n * paste into where old patches were in config.plist",charsets:{}},{title:"Cleanup",frontmatter:{},regularPath:"/cleanup.html",relativePath:"cleanup.md",key:"v-31c08e49",path:"/cleanup.html",lastUpdated:"3/1/2023, 6:15:42 PM",lastUpdatedTimestamp:1677694542e3,headersStr:null,content:"# Cleanup\n\nSo you've made all your SSDTs but now there's one thing left: Adding them to OpenCore\n\nThe 2 main locations:\n\n * EFI/OC/ACPI (Only .aml files, reminder to compile your SSDTs)\n * config.plist -> ACPI -> Add\n\nYou can save yourself some work with the config.plist by running Cmd/Ctrl+R in ProperTree. Reminder do not add your DSDT.aml to your EFI\n\nFor those who do not yet have a config.plist, you'll want to next head back to your respective OpenCore guides and create the config.plist:\n\n * OpenCore Install guide\n\nUsers of FixHPET will also need to merge oc_patches.plist into their config.plist\n\nSteps to do this:\n\n * Open both files,\n * Delete the ACPI -> Patch section from config.plist\n * Copy the ACPI -> Patch section from patches.plist\n * Paste into where old patches were in config.plist",normalizedContent:"# cleanup\n\nso you've made all your ssdts but now there's one thing left: adding them to opencore\n\nthe 2 main locations:\n\n * efi/oc/acpi (only .aml files, reminder to compile your ssdts)\n * config.plist -> acpi -> add\n\nyou can save yourself some work with the config.plist by running cmd/ctrl+r in propertree. reminder do not add your dsdt.aml to your efi\n\nfor those who do not yet have a config.plist, you'll want to next head back to your respective opencore guides and create the config.plist:\n\n * opencore install guide\n\nusers of fixhpet will also need to merge oc_patches.plist into their config.plist\n\nsteps to do this:\n\n * open both files,\n * delete the acpi -> patch section from config.plist\n * copy the acpi -> patch section from patches.plist\n * paste into where old patches were in config.plist",charsets:{}}],themeConfig:{lastUpdated:!0,repo:"https://github.com/dortania/Getting-Started-With-ACPI",editLinks:!0,editLinkText:"Help us improve this page!",logo:"/homepage.png",nav:[{text:"Dortania Guides",items:[{text:"Home Site",link:"https://dortania.github.io/"},{text:"OpenCore Install Guide",link:"https://dortania.github.io/OpenCore-Install-Guide/"},{text:"OpenCore Post-Install",link:"https://dortania.github.io/OpenCore-Post-Install/"},{text:"Wireless Buyers Guide",link:"https://dortania.github.io/Wireless-Buyers-Guide/"},{text:"GPU Buyers Guide",link:"https://dortania.github.io/GPU-Buyers-Guide/"},{text:"Anti Buyers Guide",link:"https://dortania.github.io/Anti-Hackintosh-Buyers-Guide/"}]}],sidebar:[{title:"Introduction",collapsable:!1,sidebarDepth:1,children:[["","Getting Started With ACPI"],["ssdt-platform","Choosing the SSDTs"]]},{title:"Methods",collapsable:!1,sidebarDepth:2,children:["/ssdt-methods/ssdt-methods",{title:"Methods",collapsable:!1,sidebarDepth:2,children:["/ssdt-methods/ssdt-prebuilt","/ssdt-methods/ssdt-easy","/ssdt-methods/ssdt-long"]}]},{title:"Manual",collapsable:!1,sidebarDepth:1,children:["/Manual/dump","/Manual/compile"]},{title:"Desktop",collapsable:!1,sidebarDepth:1,children:[["/Desktops/desktop-disable","Disabling desktop dGPUs"]]},{title:"Laptop",collapsable:!1,sidebarDepth:0,children:[["/Laptops/backlight","Fixing Backlight"],{title:"Methods",collapsable:!0,sidebarDepth:2,children:[["/Laptops/backlight-methods/prebuilt","Prebuilt"],["/Laptops/backlight-methods/manual","Manual"]]},["/Laptops/trackpad","Fixing Trackpad"],{title:"Methods",collapsable:!0,sidebarDepth:2,children:[["/Laptops/trackpad-methods/manual","Manual"]]},["/Laptops/laptop-disable","Disabling laptop dGPUs"]]},{title:"Universal",collapsable:!1,sidebarDepth:0,children:[["/Universal/ec-fix","Embedded Controller"],{title:"Methods",collapsable:!0,sidebarDepth:2,children:[["/Universal/ec-methods/prebuilt","Prebuilt"],["/Universal/ec-methods/ssdttime","SSDTTime"],["/Universal/ec-methods/manual","Manual"]]},["/Universal/plug","CPU Power Management"],{title:"Methods",collapsable:!0,sidebarDepth:2,children:[["/Universal/plug-methods/prebuilt","Prebuilt"],["/Universal/plug-methods/ssdttime","SSDTTime"],["/Universal/plug-methods/manual","Manual"]]},["/Universal/awac","AWAC vs RTC"],{title:"Methods",collapsable:!0,sidebarDepth:2,children:[["/Universal/awac-methods/prebuilt","Prebuilt"],["/Universal/awac-methods/ssdttime","SSDTTime"],["/Universal/awac-methods/manual","Manual"],["/Universal/awac-methods/manual-hedt","Manual HEDT"]]},["/Universal/nvram","NVRAM PMC"],{title:"Methods",collapsable:!0,sidebarDepth:2,children:[["/Universal/nvram-methods/prebuilt","Prebuilt"],["/Universal/nvram-methods/ssdttime","SSDTTime"],["/Universal/nvram-methods/manual","Manual"]]},["/Universal/rhub","USB RHUB"],{title:"Methods",collapsable:!0,sidebarDepth:2,children:[["/Universal/rhub-methods/prebuilt","Prebuilt"],["/Universal/rhub-methods/ssdttime","SSDTTime"],["/Universal/rhub-methods/manual","Manual"]]},["/Universal/imei","IMEI"],{title:"Methods",collapsable:!0,sidebarDepth:2,children:[["/Universal/imei-methods/prebuilt","Prebuilt"],["/Universal/imei-methods/manual","Manual"]]},["/Universal/unc0","Fixing Uncore Bridge"],{title:"Methods",collapsable:!0,sidebarDepth:2,children:[["/Universal/unc0-methods/prebuilt","Prebuilt"],["/Universal/unc0-methods/manual","Manual"]]},["/Universal/smbus","Fixing SMBus Support"],{title:"Methods",collapsable:!0,sidebarDepth:2,children:[["/Universal/smbus-methods/manual","Manual"]]},["/Universal/irq","IRQ Fix"],["/Universal/spoof","GPU Spoof"]]},{title:"Cleanup",collapsable:!1,sidebarDepth:1,children:[["cleanup","Cleanup"]]},{title:"Misc",collapsable:!1,sidebarDepth:1,children:[["troubleshooting","Troubleshooting"],["CONTRIBUTING","Contributing"]]}]}};t(236);Ht.component("Badge",()=>Promise.all([t.e(0),t.e(15)]).then(t.bind(null,399))),Ht.component("ThemeManager",()=>t.e(23).then(t.bind(null,343))),Ht.component("Badge",()=>Promise.all([t.e(0),t.e(12)]).then(t.bind(null,400))),Ht.component("CodeBlock",()=>Promise.all([t.e(0),t.e(13)]).then(t.bind(null,344))),Ht.component("CodeGroup",()=>Promise.all([t.e(0),t.e(14)]).then(t.bind(null,345)));t(237);var qs={name:"BackToTop",props:{threshold:{type:Number,default:300}},data:()=>({scrollTop:null}),computed:{show(){return this.scrollTop>this.threshold}},mounted(){this.scrollTop=this.getScrollTop(),window.addEventListener("scroll",ks()(()=>{this.scrollTop=this.getScrollTop()},100))},methods:{getScrollTop:()=>window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,scrollToTop(){window.scrollTo({top:0,behavior:"smooth"}),this.scrollTop=0}}},Hs=(t(238),Object(Ns.a)(qs,(function(){var e=this._self._c;return e("transition",{attrs:{name:"fade"}},[this.show?e("svg",{staticClass:"go-to-top",attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 49.484 28.284"},on:{click:this.scrollToTop}},[e("g",{attrs:{transform:"translate(-229 -126.358)"}},[e("rect",{attrs:{fill:"currentColor",width:"35",height:"5",rx:"2",transform:"translate(229 151.107) rotate(-45)"}}),this._v(" "),e("rect",{attrs:{fill:"currentColor",width:"35",height:"5",rx:"2",transform:"translate(274.949 154.642) rotate(-135)"}})])]):this._e()])}),[],!1,null,"5fd4ef0c",null).exports);t(239);function Xs(e){const n=document.documentElement.getBoundingClientRect(),t=e.getBoundingClientRect();return{x:t.left-n.left,y:t.top-n.top}}var Vs=[{},({Vue:e})=>{e.mixin({computed:{$dataBlock(){return this.$options.__data__block__}}})},{},{},({Vue:e})=>{e.component("BackToTop",Hs)},({Vue:e,router:n})=>{n.options.scrollBehavior=(n,t,o)=>{if(o)return window.scrollTo({top:o.y,behavior:"smooth"});if(n.hash){if(e.$vuepress.$get("disableScrollBehavior"))return!1;const t=document.querySelector(n.hash);return!!t&&window.scrollTo({top:Xs(t).y,behavior:"smooth"})}return window.scrollTo({top:0,behavior:"smooth"})}}],Ys=t(87);class Ks extends class{constructor(){this.store=new Ht({data:{state:{}}})}$get(e){return this.store.state[e]}$set(e,n){Ht.set(this.store.state,e,n)}$emit(...e){this.store.$emit(...e)}$on(...e){this.store.$on(...e)}}{}Object.assign(Ks.prototype,{getPageAsyncComponent:rs,getLayoutAsyncComponent:ss,getAsyncComponent:ls,getVueComponent:ds});var Zs={install(e){const n=new Ks;e.$vuepress=n,e.prototype.$vuepress=n}};function Qs(e,n){const t=n.toLowerCase();return e.options.routes.some(e=>e.path.toLowerCase()===t)}var Js={props:{pageKey:String,slotKey:{type:String,default:"default"}},render(e){const n=this.pageKey||this.$parent.$page.key;return hs("pageKey",n),Ht.component(n)||Ht.component(n,rs(n)),Ht.component(n)?e(n):e("")}},el={functional:!0,props:{slotKey:String,required:!0},render:(e,{props:n,slots:t})=>e("div",{class:["content__"+n.slotKey]},t()[n.slotKey])},nl={computed:{openInNewWindowTitle(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},tl=(t(240),t(241),Object(Ns.a)(nl,(function(){var e=this._self._c;return e("span",[e("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[e("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),e("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),e("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports),ol={functional:!0,render(e,{parent:n,children:t}){if(n._isMounted)return t;n.$once("hook:mounted",()=>{n.$forceUpdate()})}};Ht.config.productionTip=!1,Ht.use(Gr),Ht.use(Zs),Ht.mixin(function(e,n,t=Ht){!function(e){e.locales&&Object.keys(e.locales).forEach(n=>{e.locales[n].path=n});Object.freeze(e)}(n),t.$vuepress.$set("siteData",n);const o=new(e(t.$vuepress.$get("siteData"))),i=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(o)),a={};return Object.keys(i).reduce((e,n)=>(n.startsWith("$")&&(e[n]=i[n].get),e),a),{computed:a}}(e=>class{setPage(e){this.__page=e}get $site(){return e}get $themeConfig(){return this.$site.themeConfig}get $frontmatter(){return this.$page.frontmatter}get $localeConfig(){const{locales:e={}}=this.$site;let n,t;for(const o in e)"/"===o?t=e[o]:0===this.$page.path.indexOf(o)&&(n=e[o]);return n||t||{}}get $siteTitle(){return this.$localeConfig.title||this.$site.title||""}get $canonicalUrl(){const{canonicalUrl:e}=this.$page.frontmatter;return"string"==typeof e&&e}get $title(){const e=this.$page,{metaTitle:n}=this.$page.frontmatter;if("string"==typeof n)return n;const t=this.$siteTitle,o=e.frontmatter.home?null:e.frontmatter.title||e.title;return t?o?o+" | "+t:t:o||"VuePress"}get $description(){const e=function(e){if(e){const n=e.filter(e=>"description"===e.name)[0];if(n)return n.content}}(this.$page.frontmatter.meta);return e||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}get $lang(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}get $localePath(){return this.$localeConfig.path||"/"}get $themeLocaleConfig(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}get $page(){return this.__page?this.__page:function(e,n){for(let t=0;t<e.length;t++){const o=e[t];if(o.path.toLowerCase()===n.toLowerCase())return o}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}},Gs)),Ht.component("Content",Js),Ht.component("ContentSlotsDistributor",el),Ht.component("OutboundLink",tl),Ht.component("ClientOnly",ol),Ht.component("Layout",ss("Layout")),Ht.component("NotFound",ss("NotFound")),Ht.prototype.$withBase=function(e){const n=this.$site.base;return"/"===e.charAt(0)?n+e.slice(1):e},window.__VUEPRESS__={version:"1.9.8",hash:"97003ad"},async function(e){const n="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:Gs.routerBase||Gs.base,t=new Gr({base:n,mode:"history",fallback:!1,routes:$s,scrollBehavior:(e,n,t)=>t||(e.hash?!Ht.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(e.hash)}:{x:0,y:0})});!function(e){e.beforeEach((n,t,o)=>{if(Qs(e,n.path))o();else if(/(\/|\.html)$/.test(n.path))if(/\/$/.test(n.path)){const t=n.path.replace(/\/$/,"")+".html";Qs(e,t)?o(t):o()}else o();else{const t=n.path+"/",i=n.path+".html";Qs(e,i)?o(i):Qs(e,t)?o(t):o()}})}(t);const o={};try{await Promise.all(Vs.filter(e=>"function"==typeof e).map(n=>n({Vue:Ht,options:o,router:t,siteData:Gs,isServer:e})))}catch(e){console.error(e)}return{app:new Ht(Object.assign(o,{router:t,render:e=>e("div",{attrs:{id:"app"}},[e("RouterView",{ref:"layout"}),e("div",{class:"global-ui"},Ys.a.map(n=>e(n)))])})),router:t}}(!1).then(({app:e,router:n})=>{n.onReady(()=>{e.$mount("#app")})})}]);